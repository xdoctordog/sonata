<?php

namespace Proxies\__CG__\Application\Sonata\InvoiceBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class InvoiceElement extends \Application\Sonata\InvoiceBundle\Entity\InvoiceElement implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'invoice', 'orderElement', 'quantity', 'price', 'unitPriceExcl', 'unitPriceInc', 'vatRate', 'total', 'designation', 'description');
        }

        return array('__isInitialized__', 'id', 'invoice', 'orderElement', 'quantity', 'price', 'unitPriceExcl', 'unitPriceInc', 'vatRate', 'total', 'designation', 'description');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (InvoiceElement $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setInvoice(\Sonata\Component\Invoice\InvoiceInterface $invoice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInvoice', array($invoice));

        return parent::setInvoice($invoice);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvoice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvoice', array());

        return parent::getInvoice();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderElement(\Sonata\Component\Order\OrderElementInterface $orderElement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderElement', array($orderElement));

        return parent::setOrderElement($orderElement);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderElement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderElement', array());

        return parent::getOrderElement();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', array($quantity));

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', array());

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice($vat = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array($vat));

        return parent::getPrice($vat);
    }

    /**
     * {@inheritDoc}
     */
    public function setVatRate($vatRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVatRate', array($vatRate));

        return parent::setVatRate($vatRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getVatRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVatRate', array());

        return parent::getVatRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotal($total)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotal', array($total));

        return parent::setTotal($total);
    }

    /**
     * {@inheritDoc}
     */
    public function setUnitPriceExcl($unitPriceExcl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnitPriceExcl', array($unitPriceExcl));

        return parent::setUnitPriceExcl($unitPriceExcl);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnitPriceExcl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnitPriceExcl', array());

        return parent::getUnitPriceExcl();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnitPriceInc($unitPriceInc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnitPriceInc', array($unitPriceInc));

        return parent::setUnitPriceInc($unitPriceInc);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnitPriceInc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnitPriceInc', array());

        return parent::getUnitPriceInc();
    }

    /**
     * {@inheritDoc}
     */
    public function getUnitPrice($vat = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnitPrice', array($vat));

        return parent::getUnitPrice($vat);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotal($vat = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotal', array($vat));

        return parent::getTotal($vat);
    }

    /**
     * {@inheritDoc}
     */
    public function getVatAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVatAmount', array());

        return parent::getVatAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setDesignation($designation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDesignation', array($designation));

        return parent::setDesignation($designation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDesignation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDesignation', array());

        return parent::getDesignation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

}
