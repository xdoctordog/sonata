<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/var/www/sonata-3/app</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">/var/www/sonata-3/app/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/var/www/sonata-3/app/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="JMSAopBundle">JMS\AopBundle\JMSAopBundle</parameter>
      <parameter key="JMSSecurityExtraBundle">JMS\SecurityExtraBundle\JMSSecurityExtraBundle</parameter>
      <parameter key="AsseticBundle">Symfony\Bundle\AsseticBundle\AsseticBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="KnpMarkdownBundle">Knp\Bundle\MarkdownBundle\KnpMarkdownBundle</parameter>
      <parameter key="KnpPaginatorBundle">Knp\Bundle\PaginatorBundle\KnpPaginatorBundle</parameter>
      <parameter key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</parameter>
      <parameter key="SonataUserBundle">Sonata\UserBundle\SonataUserBundle</parameter>
      <parameter key="ApplicationSonataUserBundle">Application\Sonata\UserBundle\ApplicationSonataUserBundle</parameter>
      <parameter key="SonataPageBundle">Sonata\PageBundle\SonataPageBundle</parameter>
      <parameter key="ApplicationSonataPageBundle">Application\Sonata\PageBundle\ApplicationSonataPageBundle</parameter>
      <parameter key="SonataNewsBundle">Sonata\NewsBundle\SonataNewsBundle</parameter>
      <parameter key="ApplicationSonataNewsBundle">Application\Sonata\NewsBundle\ApplicationSonataNewsBundle</parameter>
      <parameter key="SonataMediaBundle">Sonata\MediaBundle\SonataMediaBundle</parameter>
      <parameter key="ApplicationSonataMediaBundle">Application\Sonata\MediaBundle\ApplicationSonataMediaBundle</parameter>
      <parameter key="IvoryCKEditorBundle">Ivory\CKEditorBundle\IvoryCKEditorBundle</parameter>
      <parameter key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</parameter>
      <parameter key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</parameter>
      <parameter key="SimpleThingsEntityAuditBundle">SimpleThings\EntityAudit\SimpleThingsEntityAuditBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="NelmioApiDocBundle">Nelmio\ApiDocBundle\NelmioApiDocBundle</parameter>
      <parameter key="SonataBasketBundle">Sonata\BasketBundle\SonataBasketBundle</parameter>
      <parameter key="ApplicationSonataBasketBundle">Application\Sonata\BasketBundle\ApplicationSonataBasketBundle</parameter>
      <parameter key="SonataCustomerBundle">Sonata\CustomerBundle\SonataCustomerBundle</parameter>
      <parameter key="ApplicationSonataCustomerBundle">Application\Sonata\CustomerBundle\ApplicationSonataCustomerBundle</parameter>
      <parameter key="SonataDeliveryBundle">Sonata\DeliveryBundle\SonataDeliveryBundle</parameter>
      <parameter key="ApplicationSonataDeliveryBundle">Application\Sonata\DeliveryBundle\ApplicationSonataDeliveryBundle</parameter>
      <parameter key="SonataInvoiceBundle">Sonata\InvoiceBundle\SonataInvoiceBundle</parameter>
      <parameter key="ApplicationSonataInvoiceBundle">Application\Sonata\InvoiceBundle\ApplicationSonataInvoiceBundle</parameter>
      <parameter key="SonataOrderBundle">Sonata\OrderBundle\SonataOrderBundle</parameter>
      <parameter key="ApplicationSonataOrderBundle">Application\Sonata\OrderBundle\ApplicationSonataOrderBundle</parameter>
      <parameter key="SonataPaymentBundle">Sonata\PaymentBundle\SonataPaymentBundle</parameter>
      <parameter key="ApplicationSonataPaymentBundle">Application\Sonata\PaymentBundle\ApplicationSonataPaymentBundle</parameter>
      <parameter key="SonataProductBundle">Sonata\ProductBundle\SonataProductBundle</parameter>
      <parameter key="ApplicationSonataProductBundle">Application\Sonata\ProductBundle\ApplicationSonataProductBundle</parameter>
      <parameter key="SonataPriceBundle">Sonata\PriceBundle\SonataPriceBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="FOSCommentBundle">FOS\CommentBundle\FOSCommentBundle</parameter>
      <parameter key="SonataCommentBundle">Sonata\CommentBundle\SonataCommentBundle</parameter>
      <parameter key="ApplicationSonataCommentBundle">Application\Sonata\CommentBundle\ApplicationSonataCommentBundle</parameter>
      <parameter key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</parameter>
      <parameter key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</parameter>
      <parameter key="SonataIntlBundle">Sonata\IntlBundle\SonataIntlBundle</parameter>
      <parameter key="SonataFormatterBundle">Sonata\FormatterBundle\SonataFormatterBundle</parameter>
      <parameter key="SonataCacheBundle">Sonata\CacheBundle\SonataCacheBundle</parameter>
      <parameter key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</parameter>
      <parameter key="SonataSeoBundle">Sonata\SeoBundle\SonataSeoBundle</parameter>
      <parameter key="SonataClassificationBundle">Sonata\ClassificationBundle\SonataClassificationBundle</parameter>
      <parameter key="ApplicationSonataClassificationBundle">Application\Sonata\ClassificationBundle\ApplicationSonataClassificationBundle</parameter>
      <parameter key="SonataNotificationBundle">Sonata\NotificationBundle\SonataNotificationBundle</parameter>
      <parameter key="ApplicationSonataNotificationBundle">Application\Sonata\NotificationBundle\ApplicationSonataNotificationBundle</parameter>
      <parameter key="ApplicationSonataSeoBundle">Application\Sonata\SeoBundle\ApplicationSonataSeoBundle</parameter>
      <parameter key="SonataDatagridBundle">Sonata\DatagridBundle\SonataDatagridBundle</parameter>
      <parameter key="CmfRoutingBundle">Symfony\Cmf\Bundle\RoutingBundle\CmfRoutingBundle</parameter>
      <parameter key="SonataDemoBundle">Sonata\Bundle\DemoBundle\SonataDemoBundle</parameter>
      <parameter key="SonataQABundle">Sonata\Bundle\QABundle\SonataQABundle</parameter>
      <parameter key="SpyTimelineBundle">Spy\TimelineBundle\SpyTimelineBundle</parameter>
      <parameter key="SonataTimelineBundle">Sonata\TimelineBundle\SonataTimelineBundle</parameter>
      <parameter key="ApplicationSonataTimelineBundle">Application\Sonata\TimelineBundle\ApplicationSonataTimelineBundle</parameter>
      <parameter key="MopaBootstrapBundle">Mopa\Bundle\BootstrapBundle\MopaBootstrapBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</parameter>
      <parameter key="BazingaFakerBundle">Bazinga\Bundle\FakerBundle\BazingaFakerBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appDevDebugProjectContainer</parameter>
    <parameter key="database_driver">pdo_mysql</parameter>
    <parameter key="database_host">127.0.0.1</parameter>
    <parameter key="database_name">sonata3</parameter>
    <parameter key="database_user">root</parameter>
    <parameter key="database_password">panda2014</parameter>
    <parameter key="mailer_transport">smtp</parameter>
    <parameter key="mailer_host">localhost</parameter>
    <parameter key="mailer_user">null</parameter>
    <parameter key="mailer_password">null</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="sonata_admin.title">Sonata Project</parameter>
    <parameter key="sonata_admin.logo_title">/bundles/sonataadmin/logo_title.png</parameter>
    <parameter key="sonata_news.blog_title">My Awesome Blog</parameter>
    <parameter key="sonata_news.blog_link">http://awesome-blog.ltd</parameter>
    <parameter key="sonata_news.blog_description">My Awesome blog description</parameter>
    <parameter key="sonata_news.salt">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="sonata_news.comment.emails" type="collection">
      <parameter>mail@example.org</parameter>
    </parameter>
    <parameter key="sonata_news.comment.email_from">no-reply@example.org</parameter>
    <parameter key="sonata_media.cdn.host">/uploads/media</parameter>
    <parameter key="sonata_user.google_authenticator.server">demo.sonata-project.org</parameter>
    <parameter key="sonata_page.varnish.command">if [ ! -r "/etc/varnish/secret" ]; then echo "VALID ERROR :/"; else varnishadm -S /etc/varnish/secret -T 127.0.0.1:6082 {{ COMMAND }} "{{ EXPRESSION }}"; fi;</parameter>
    <parameter key="security.acl.permission.map.class">Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap</parameter>
    <parameter key="controller_resolver.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver</parameter>
    <parameter key="controller_name_converter.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser</parameter>
    <parameter key="response_listener.class">Symfony\Component\HttpKernel\EventListener\ResponseListener</parameter>
    <parameter key="streamed_response_listener.class">Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</parameter>
    <parameter key="locale_listener.class">Symfony\Component\HttpKernel\EventListener\LocaleListener</parameter>
    <parameter key="event_dispatcher.class">Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher</parameter>
    <parameter key="http_kernel.class">Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel</parameter>
    <parameter key="filesystem.class">Symfony\Component\Filesystem\Filesystem</parameter>
    <parameter key="cache_warmer.class">Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate</parameter>
    <parameter key="cache_clearer.class">Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer</parameter>
    <parameter key="file_locator.class">Symfony\Component\HttpKernel\Config\FileLocator</parameter>
    <parameter key="uri_signer.class">Symfony\Component\HttpKernel\UriSigner</parameter>
    <parameter key="request_stack.class">Symfony\Component\HttpFoundation\RequestStack</parameter>
    <parameter key="fragment.handler.class">Symfony\Component\HttpKernel\Fragment\FragmentHandler</parameter>
    <parameter key="fragment.renderer.inline.class">Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.class">Symfony\Bundle\FrameworkBundle\Fragment\ContainerAwareHIncludeFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.renderer.esi.class">Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="translator.class">Symfony\Bundle\FrameworkBundle\Translation\Translator</parameter>
    <parameter key="translator.identity.class">Symfony\Component\Translation\IdentityTranslator</parameter>
    <parameter key="translator.selector.class">Symfony\Component\Translation\MessageSelector</parameter>
    <parameter key="translation.loader.php.class">Symfony\Component\Translation\Loader\PhpFileLoader</parameter>
    <parameter key="translation.loader.yml.class">Symfony\Component\Translation\Loader\YamlFileLoader</parameter>
    <parameter key="translation.loader.xliff.class">Symfony\Component\Translation\Loader\XliffFileLoader</parameter>
    <parameter key="translation.loader.po.class">Symfony\Component\Translation\Loader\PoFileLoader</parameter>
    <parameter key="translation.loader.mo.class">Symfony\Component\Translation\Loader\MoFileLoader</parameter>
    <parameter key="translation.loader.qt.class">Symfony\Component\Translation\Loader\QtFileLoader</parameter>
    <parameter key="translation.loader.csv.class">Symfony\Component\Translation\Loader\CsvFileLoader</parameter>
    <parameter key="translation.loader.res.class">Symfony\Component\Translation\Loader\IcuResFileLoader</parameter>
    <parameter key="translation.loader.dat.class">Symfony\Component\Translation\Loader\IcuDatFileLoader</parameter>
    <parameter key="translation.loader.ini.class">Symfony\Component\Translation\Loader\IniFileLoader</parameter>
    <parameter key="translation.loader.json.class">Symfony\Component\Translation\Loader\JsonFileLoader</parameter>
    <parameter key="translation.dumper.php.class">Symfony\Component\Translation\Dumper\PhpFileDumper</parameter>
    <parameter key="translation.dumper.xliff.class">Symfony\Component\Translation\Dumper\XliffFileDumper</parameter>
    <parameter key="translation.dumper.po.class">Symfony\Component\Translation\Dumper\PoFileDumper</parameter>
    <parameter key="translation.dumper.mo.class">Symfony\Component\Translation\Dumper\MoFileDumper</parameter>
    <parameter key="translation.dumper.yml.class">Symfony\Component\Translation\Dumper\YamlFileDumper</parameter>
    <parameter key="translation.dumper.qt.class">Symfony\Component\Translation\Dumper\QtFileDumper</parameter>
    <parameter key="translation.dumper.csv.class">Symfony\Component\Translation\Dumper\CsvFileDumper</parameter>
    <parameter key="translation.dumper.ini.class">Symfony\Component\Translation\Dumper\IniFileDumper</parameter>
    <parameter key="translation.dumper.json.class">Symfony\Component\Translation\Dumper\JsonFileDumper</parameter>
    <parameter key="translation.dumper.res.class">Symfony\Component\Translation\Dumper\IcuResFileDumper</parameter>
    <parameter key="translation.extractor.php.class">Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor</parameter>
    <parameter key="translation.loader.class">Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader</parameter>
    <parameter key="translation.extractor.class">Symfony\Component\Translation\Extractor\ChainExtractor</parameter>
    <parameter key="translation.writer.class">Symfony\Component\Translation\Writer\TranslationWriter</parameter>
    <parameter key="property_accessor.class">Symfony\Component\PropertyAccess\PropertyAccessor</parameter>
    <parameter key="kernel.secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.trusted_proxies" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="session.class">Symfony\Component\HttpFoundation\Session\Session</parameter>
    <parameter key="session.flashbag.class">Symfony\Component\HttpFoundation\Session\Flash\FlashBag</parameter>
    <parameter key="session.attribute_bag.class">Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag</parameter>
    <parameter key="session.storage.metadata_bag.class">Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.native.class">Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage</parameter>
    <parameter key="session.storage.php_bridge.class">Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage</parameter>
    <parameter key="session.storage.mock_file.class">Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage</parameter>
    <parameter key="session.handler.native_file.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler</parameter>
    <parameter key="session.handler.write_check.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\WriteCheckSessionHandler</parameter>
    <parameter key="session_listener.class">Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/var/www/sonata-3/app/cache/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="security.secure_random.class">Symfony\Component\Security\Core\Util\SecureRandom</parameter>
    <parameter key="form.resolved_type_factory.class">Symfony\Component\Form\ResolvedFormTypeFactory</parameter>
    <parameter key="form.registry.class">Symfony\Component\Form\FormRegistry</parameter>
    <parameter key="form.factory.class">Symfony\Component\Form\FormFactory</parameter>
    <parameter key="form.extension.class">Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension</parameter>
    <parameter key="form.type_guesser.validator.class">Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</parameter>
    <parameter key="form.type_extension.form.request_handler.class">Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="security.csrf.token_generator.class">Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator</parameter>
    <parameter key="security.csrf.token_storage.class">Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage</parameter>
    <parameter key="security.csrf.token_manager.class">Symfony\Component\Security\Csrf\CsrfTokenManager</parameter>
    <parameter key="templating.engine.delegating.class">Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine</parameter>
    <parameter key="templating.name_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser</parameter>
    <parameter key="templating.filename_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser</parameter>
    <parameter key="templating.cache_warmer.template_paths.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer</parameter>
    <parameter key="templating.locator.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator</parameter>
    <parameter key="templating.loader.filesystem.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader</parameter>
    <parameter key="templating.loader.cache.class">Symfony\Component\Templating\Loader\CacheLoader</parameter>
    <parameter key="templating.loader.chain.class">Symfony\Component\Templating\Loader\ChainLoader</parameter>
    <parameter key="templating.finder.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder</parameter>
    <parameter key="templating.engine.php.class">Symfony\Bundle\FrameworkBundle\Templating\PhpEngine</parameter>
    <parameter key="templating.helper.slots.class">Symfony\Component\Templating\Helper\SlotsHelper</parameter>
    <parameter key="templating.helper.assets.class">Symfony\Component\Templating\Helper\CoreAssetsHelper</parameter>
    <parameter key="templating.helper.actions.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper</parameter>
    <parameter key="templating.helper.router.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper</parameter>
    <parameter key="templating.helper.request.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper</parameter>
    <parameter key="templating.helper.session.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper</parameter>
    <parameter key="templating.helper.code.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper</parameter>
    <parameter key="templating.helper.translator.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper</parameter>
    <parameter key="templating.helper.form.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper</parameter>
    <parameter key="templating.helper.stopwatch.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper</parameter>
    <parameter key="templating.form.engine.class">Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine</parameter>
    <parameter key="templating.form.renderer.class">Symfony\Component\Form\FormRenderer</parameter>
    <parameter key="templating.globals.class">Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables</parameter>
    <parameter key="templating.asset.path_package.class">Symfony\Bundle\FrameworkBundle\Templating\Asset\PathPackage</parameter>
    <parameter key="templating.asset.url_package.class">Symfony\Component\Templating\Asset\UrlPackage</parameter>
    <parameter key="templating.asset.package_factory.class">Symfony\Bundle\FrameworkBundle\Templating\Asset\PackageFactory</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="templating.helper.form.resources" type="collection">
      <parameter>FrameworkBundle:Form</parameter>
    </parameter>
    <parameter key="debug.templating.engine.php.class">Symfony\Bundle\FrameworkBundle\Templating\TimedPhpEngine</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.class">Symfony\Component\Validator\ValidatorInterface</parameter>
    <parameter key="validator.builder.class">Symfony\Component\Validator\ValidatorBuilderInterface</parameter>
    <parameter key="validator.builder.factory.class">Symfony\Component\Validator\Validation</parameter>
    <parameter key="validator.mapping.cache.apc.class">Symfony\Component\Validator\Mapping\Cache\ApcCache</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.validator_factory.class">Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory</parameter>
    <parameter key="validator.expression.class">Symfony\Component\Validator\Constraints\ExpressionValidator</parameter>
    <parameter key="validator.email.class">Symfony\Component\Validator\Constraints\EmailValidator</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="validator.api">3</parameter>
    <parameter key="fragment.listener.class">Symfony\Component\HttpKernel\EventListener\FragmentListener</parameter>
    <parameter key="profiler.class">Symfony\Component\HttpKernel\Profiler\Profiler</parameter>
    <parameter key="profiler_listener.class">Symfony\Component\HttpKernel\EventListener\ProfilerListener</parameter>
    <parameter key="data_collector.config.class">Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector</parameter>
    <parameter key="data_collector.request.class">Symfony\Component\HttpKernel\DataCollector\RequestDataCollector</parameter>
    <parameter key="data_collector.exception.class">Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector</parameter>
    <parameter key="data_collector.events.class">Symfony\Component\HttpKernel\DataCollector\EventDataCollector</parameter>
    <parameter key="data_collector.logger.class">Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector</parameter>
    <parameter key="data_collector.time.class">Symfony\Component\HttpKernel\DataCollector\TimeDataCollector</parameter>
    <parameter key="data_collector.memory.class">Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector</parameter>
    <parameter key="data_collector.router.class">Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector</parameter>
    <parameter key="form.resolved_type_factory.data_collector_proxy.class">Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy</parameter>
    <parameter key="form.type_extension.form.data_collector.class">Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</parameter>
    <parameter key="data_collector.form.class">Symfony\Component\Form\Extension\DataCollector\FormDataCollector</parameter>
    <parameter key="data_collector.form.extractor.class">Symfony\Component\Form\Extension\DataCollector\FormDataExtractor</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/var/www/sonata-3/app/cache/dev/profiler</parameter>
    <parameter key="profiler.storage.username"></parameter>
    <parameter key="profiler.storage.password"></parameter>
    <parameter key="profiler.storage.lifetime">86400</parameter>
    <parameter key="translator.logging">true</parameter>
    <parameter key="router.class">Symfony\Bundle\FrameworkBundle\Routing\Router</parameter>
    <parameter key="router.request_context.class">Symfony\Component\Routing\RequestContext</parameter>
    <parameter key="routing.loader.class">Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader</parameter>
    <parameter key="routing.resolver.class">Symfony\Component\Config\Loader\LoaderResolver</parameter>
    <parameter key="routing.loader.xml.class">Symfony\Component\Routing\Loader\XmlFileLoader</parameter>
    <parameter key="routing.loader.yml.class">Symfony\Component\Routing\Loader\YamlFileLoader</parameter>
    <parameter key="routing.loader.php.class">Symfony\Component\Routing\Loader\PhpFileLoader</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.cache_warmer.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer</parameter>
    <parameter key="router.options.matcher.cache_class">appDevUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appDevUrlGenerator</parameter>
    <parameter key="router_listener.class">Symfony\Component\HttpKernel\EventListener\RouterListener</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">/var/www/sonata-3/app/config/routing_dev.yml</parameter>
    <parameter key="router.cache_class_prefix">appDev</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="annotations.reader.class">Doctrine\Common\Annotations\AnnotationReader</parameter>
    <parameter key="annotations.cached_reader.class">Doctrine\Common\Annotations\CachedReader</parameter>
    <parameter key="annotations.file_cache_reader.class">Doctrine\Common\Annotations\FileCacheReader</parameter>
    <parameter key="debug.debug_handlers_listener.class">Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</parameter>
    <parameter key="debug.stopwatch.class">Symfony\Component\Stopwatch\Stopwatch</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.event_dispatcher.class">Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher</parameter>
    <parameter key="debug.container.dump">/var/www/sonata-3/app/cache/dev/appDevDebugProjectContainer.xml</parameter>
    <parameter key="debug.controller_resolver.class">Symfony\Component\HttpKernel\Controller\TraceableControllerResolver</parameter>
    <parameter key="security.context.class">Symfony\Component\Security\Core\SecurityContext</parameter>
    <parameter key="security.user_checker.class">Symfony\Component\Security\Core\User\UserChecker</parameter>
    <parameter key="security.encoder_factory.generic.class">Symfony\Component\Security\Core\Encoder\EncoderFactory</parameter>
    <parameter key="security.encoder.digest.class">Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder</parameter>
    <parameter key="security.encoder.plain.class">Symfony\Component\Security\Core\Encoder\PlaintextPasswordEncoder</parameter>
    <parameter key="security.encoder.pbkdf2.class">Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder</parameter>
    <parameter key="security.encoder.bcrypt.class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</parameter>
    <parameter key="security.user.provider.in_memory.class">Symfony\Component\Security\Core\User\InMemoryUserProvider</parameter>
    <parameter key="security.user.provider.in_memory.user.class">Symfony\Component\Security\Core\User\User</parameter>
    <parameter key="security.user.provider.chain.class">Symfony\Component\Security\Core\User\ChainUserProvider</parameter>
    <parameter key="security.authentication.trust_resolver.class">Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.authentication.manager.class">Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager</parameter>
    <parameter key="security.authentication.session_strategy.class">Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy</parameter>
    <parameter key="security.access.decision_manager.class">Symfony\Component\Security\Core\Authorization\AccessDecisionManager</parameter>
    <parameter key="security.access.simple_role_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleVoter</parameter>
    <parameter key="security.access.authenticated_voter.class">Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter</parameter>
    <parameter key="security.access.role_hierarchy_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter</parameter>
    <parameter key="security.access.expression_voter.class">Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter</parameter>
    <parameter key="security.firewall.class">Symfony\Component\Security\Http\Firewall</parameter>
    <parameter key="security.firewall.map.class">Symfony\Bundle\SecurityBundle\Security\FirewallMap</parameter>
    <parameter key="security.firewall.context.class">Symfony\Bundle\SecurityBundle\Security\FirewallContext</parameter>
    <parameter key="security.matcher.class">Symfony\Component\HttpFoundation\RequestMatcher</parameter>
    <parameter key="security.expression_matcher.class">Symfony\Component\HttpFoundation\ExpressionRequestMatcher</parameter>
    <parameter key="security.role_hierarchy.class">Symfony\Component\Security\Core\Role\RoleHierarchy</parameter>
    <parameter key="security.http_utils.class">Symfony\Component\Security\Http\HttpUtils</parameter>
    <parameter key="security.validator.user_password.class">Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator</parameter>
    <parameter key="security.expression_language.class">Symfony\Component\Security\Core\Authorization\ExpressionLanguage</parameter>
    <parameter key="security.authentication.retry_entry_point.class">Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint</parameter>
    <parameter key="security.channel_listener.class">Symfony\Component\Security\Http\Firewall\ChannelListener</parameter>
    <parameter key="security.authentication.form_entry_point.class">Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.form.class">Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.simple_form.class">Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.simple_preauth.class">Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.basic.class">Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener</parameter>
    <parameter key="security.authentication.basic_entry_point.class">Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.digest.class">Symfony\Component\Security\Http\Firewall\DigestAuthenticationListener</parameter>
    <parameter key="security.authentication.digest_entry_point.class">Symfony\Component\Security\Http\EntryPoint\DigestAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.x509.class">Symfony\Component\Security\Http\Firewall\X509AuthenticationListener</parameter>
    <parameter key="security.authentication.listener.anonymous.class">Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener</parameter>
    <parameter key="security.authentication.switchuser_listener.class">Symfony\Component\Security\Http\Firewall\SwitchUserListener</parameter>
    <parameter key="security.logout_listener.class">Symfony\Component\Security\Http\Firewall\LogoutListener</parameter>
    <parameter key="security.logout.handler.session.class">Symfony\Component\Security\Http\Logout\SessionLogoutHandler</parameter>
    <parameter key="security.logout.handler.cookie_clearing.class">Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler</parameter>
    <parameter key="security.logout.success_handler.class">Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler</parameter>
    <parameter key="security.access_listener.class">Symfony\Component\Security\Http\Firewall\AccessListener</parameter>
    <parameter key="security.access_map.class">Symfony\Component\Security\Http\AccessMap</parameter>
    <parameter key="security.exception_listener.class">Symfony\Component\Security\Http\Firewall\ExceptionListener</parameter>
    <parameter key="security.context_listener.class">Symfony\Component\Security\Http\Firewall\ContextListener</parameter>
    <parameter key="security.authentication.provider.dao.class">Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.simple.class">Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.pre_authenticated.class">Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.anonymous.class">Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider</parameter>
    <parameter key="security.authentication.success_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler</parameter>
    <parameter key="security.authentication.failure_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler</parameter>
    <parameter key="security.authentication.simple_success_failure_handler.class">Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler</parameter>
    <parameter key="security.authentication.provider.rememberme.class">Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider</parameter>
    <parameter key="security.authentication.listener.rememberme.class">Symfony\Component\Security\Http\Firewall\RememberMeListener</parameter>
    <parameter key="security.rememberme.token.provider.in_memory.class">Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider</parameter>
    <parameter key="security.authentication.rememberme.services.persistent.class">Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices</parameter>
    <parameter key="security.authentication.rememberme.services.simplehash.class">Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices</parameter>
    <parameter key="security.rememberme.response_listener.class">Symfony\Component\Security\Http\RememberMe\ResponseListener</parameter>
    <parameter key="templating.helper.logout_url.class">Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper</parameter>
    <parameter key="templating.helper.security.class">Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper</parameter>
    <parameter key="twig.extension.logout_url.class">Symfony\Bundle\SecurityBundle\Twig\Extension\LogoutUrlExtension</parameter>
    <parameter key="twig.extension.security.class">Symfony\Bridge\Twig\Extension\SecurityExtension</parameter>
    <parameter key="data_collector.security.class">Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector</parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_SONATA_ADMIN</parameter>
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
        <parameter>ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT</parameter>
        <parameter>ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT</parameter>
      </parameter>
      <parameter key="SONATA" type="collection"/>
    </parameter>
    <parameter key="security.acl.permission_granting_strategy.class">Symfony\Component\Security\Acl\Domain\PermissionGrantingStrategy</parameter>
    <parameter key="security.acl.voter.class">Symfony\Component\Security\Acl\Voter\AclVoter</parameter>
    <parameter key="security.acl.object_identity_retrieval_strategy.class">Symfony\Component\Security\Acl\Domain\ObjectIdentityRetrievalStrategy</parameter>
    <parameter key="security.acl.security_identity_retrieval_strategy.class">Symfony\Component\Security\Acl\Domain\SecurityIdentityRetrievalStrategy</parameter>
    <parameter key="security.acl.cache.doctrine.class">Symfony\Component\Security\Acl\Domain\DoctrineAclCache</parameter>
    <parameter key="security.acl.collection_cache.class">Symfony\Component\Security\Acl\Domain\AclCollectionCache</parameter>
    <parameter key="security.acl.dbal.provider.class">Symfony\Component\Security\Acl\Dbal\MutableAclProvider</parameter>
    <parameter key="security.acl.dbal.schema.class">Symfony\Component\Security\Acl\Dbal\Schema</parameter>
    <parameter key="security.acl.dbal.schema_listener.class">Symfony\Bundle\SecurityBundle\EventListener\AclSchemaListener</parameter>
    <parameter key="security.acl.dbal.class_table_name">acl_classes</parameter>
    <parameter key="security.acl.dbal.entry_table_name">acl_entries</parameter>
    <parameter key="security.acl.dbal.oid_table_name">acl_object_identities</parameter>
    <parameter key="security.acl.dbal.oid_ancestors_table_name">acl_object_identity_ancestors</parameter>
    <parameter key="security.acl.dbal.sid_table_name">acl_security_identities</parameter>
    <parameter key="twig.class">Twig_Environment</parameter>
    <parameter key="twig.loader.filesystem.class">Symfony\Bundle\TwigBundle\Loader\FilesystemLoader</parameter>
    <parameter key="twig.loader.chain.class">Twig_Loader_Chain</parameter>
    <parameter key="templating.engine.twig.class">Symfony\Bundle\TwigBundle\TwigEngine</parameter>
    <parameter key="twig.cache_warmer.class">Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer</parameter>
    <parameter key="twig.extension.trans.class">Symfony\Bridge\Twig\Extension\TranslationExtension</parameter>
    <parameter key="twig.extension.assets.class">Symfony\Bundle\TwigBundle\Extension\AssetsExtension</parameter>
    <parameter key="twig.extension.actions.class">Symfony\Bundle\TwigBundle\Extension\ActionsExtension</parameter>
    <parameter key="twig.extension.code.class">Symfony\Bridge\Twig\Extension\CodeExtension</parameter>
    <parameter key="twig.extension.routing.class">Symfony\Bridge\Twig\Extension\RoutingExtension</parameter>
    <parameter key="twig.extension.yaml.class">Symfony\Bridge\Twig\Extension\YamlExtension</parameter>
    <parameter key="twig.extension.form.class">Symfony\Bridge\Twig\Extension\FormExtension</parameter>
    <parameter key="twig.extension.httpkernel.class">Symfony\Bridge\Twig\Extension\HttpKernelExtension</parameter>
    <parameter key="twig.extension.debug.stopwatch.class">Symfony\Bridge\Twig\Extension\StopwatchExtension</parameter>
    <parameter key="twig.extension.expression.class">Symfony\Bridge\Twig\Extension\ExpressionExtension</parameter>
    <parameter key="twig.form.engine.class">Symfony\Bridge\Twig\Form\TwigRendererEngine</parameter>
    <parameter key="twig.form.renderer.class">Symfony\Bridge\Twig\Form\TwigRenderer</parameter>
    <parameter key="twig.translation.extractor.class">Symfony\Bridge\Twig\Translation\TwigExtractor</parameter>
    <parameter key="twig.exception_listener.class">Symfony\Component\HttpKernel\EventListener\ExceptionListener</parameter>
    <parameter key="twig.controller.exception.class">Symfony\Bundle\TwigBundle\Controller\ExceptionController</parameter>
    <parameter key="twig.controller.preview_error.class">Symfony\Bundle\TwigBundle\Controller\PreviewErrorController</parameter>
    <parameter key="twig.exception_listener.controller">FOS\RestBundle\Controller\ExceptionController::showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>IvoryCKEditorBundle:Form:ckeditor_widget.html.twig</parameter>
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>MopaBootstrapBundle:Form:fields.html.twig</parameter>
      <parameter>SonataFormatterBundle:Form:formatter.html.twig</parameter>
      <parameter>SonataMediaBundle:Form:media_widgets.html.twig</parameter>
      <parameter>SonataCoreBundle:Form:datepicker.html.twig</parameter>
      <parameter>SonataUserBundle:Form:form_admin_fields.html.twig</parameter>
    </parameter>
    <parameter key="debug.templating.engine.twig.class">Symfony\Bundle\TwigBundle\Debug\TimedTwigEngine</parameter>
    <parameter key="twig.options" type="collection">
      <parameter key="debug">true</parameter>
      <parameter key="strict_variables">true</parameter>
      <parameter key="base_template_class">Sonata\CacheBundle\Twig\TwigTemplate14</parameter>
      <parameter key="exception_controller">FOS\RestBundle\Controller\ExceptionController::showAction</parameter>
      <parameter key="form_themes" type="collection">
        <parameter>form_div_layout.html.twig</parameter>
        <parameter>SonataFormatterBundle:Form:formatter.html.twig</parameter>
        <parameter>SonataMediaBundle:Form:media_widgets.html.twig</parameter>
        <parameter>SonataCoreBundle:Form:datepicker.html.twig</parameter>
      </parameter>
      <parameter key="autoescape" type="collection">
        <parameter>Symfony\Bundle\TwigBundle\TwigDefaultEscapingStrategy</parameter>
        <parameter>guess</parameter>
      </parameter>
      <parameter key="cache">/var/www/sonata-3/app/cache/dev/twig</parameter>
      <parameter key="charset">UTF-8</parameter>
      <parameter key="paths" type="collection"/>
    </parameter>
    <parameter key="monolog.logger.class">Symfony\Bridge\Monolog\Logger</parameter>
    <parameter key="monolog.gelf.publisher.class">Gelf\MessagePublisher</parameter>
    <parameter key="monolog.gelfphp.publisher.class">Gelf\Publisher</parameter>
    <parameter key="monolog.handler.stream.class">Monolog\Handler\StreamHandler</parameter>
    <parameter key="monolog.handler.console.class">Symfony\Bridge\Monolog\Handler\ConsoleHandler</parameter>
    <parameter key="monolog.handler.group.class">Monolog\Handler\GroupHandler</parameter>
    <parameter key="monolog.handler.buffer.class">Monolog\Handler\BufferHandler</parameter>
    <parameter key="monolog.handler.rotating_file.class">Monolog\Handler\RotatingFileHandler</parameter>
    <parameter key="monolog.handler.syslog.class">Monolog\Handler\SyslogHandler</parameter>
    <parameter key="monolog.handler.syslogudp.class">Monolog\Handler\SyslogUdpHandler</parameter>
    <parameter key="monolog.handler.null.class">Monolog\Handler\NullHandler</parameter>
    <parameter key="monolog.handler.test.class">Monolog\Handler\TestHandler</parameter>
    <parameter key="monolog.handler.gelf.class">Monolog\Handler\GelfHandler</parameter>
    <parameter key="monolog.handler.rollbar.class">Monolog\Handler\RollbarHandler</parameter>
    <parameter key="monolog.handler.flowdock.class">Monolog\Handler\FlowdockHandler</parameter>
    <parameter key="monolog.handler.browser_console.class">Monolog\Handler\BrowserConsoleHandler</parameter>
    <parameter key="monolog.handler.firephp.class">Symfony\Bridge\Monolog\Handler\FirePHPHandler</parameter>
    <parameter key="monolog.handler.chromephp.class">Symfony\Bridge\Monolog\Handler\ChromePhpHandler</parameter>
    <parameter key="monolog.handler.debug.class">Symfony\Bridge\Monolog\Handler\DebugHandler</parameter>
    <parameter key="monolog.handler.swift_mailer.class">Symfony\Bridge\Monolog\Handler\SwiftMailerHandler</parameter>
    <parameter key="monolog.handler.native_mailer.class">Monolog\Handler\NativeMailerHandler</parameter>
    <parameter key="monolog.handler.socket.class">Monolog\Handler\SocketHandler</parameter>
    <parameter key="monolog.handler.pushover.class">Monolog\Handler\PushoverHandler</parameter>
    <parameter key="monolog.handler.raven.class">Monolog\Handler\RavenHandler</parameter>
    <parameter key="monolog.handler.newrelic.class">Monolog\Handler\NewRelicHandler</parameter>
    <parameter key="monolog.handler.hipchat.class">Monolog\Handler\HipChatHandler</parameter>
    <parameter key="monolog.handler.slack.class">Monolog\Handler\SlackHandler</parameter>
    <parameter key="monolog.handler.cube.class">Monolog\Handler\CubeHandler</parameter>
    <parameter key="monolog.handler.amqp.class">Monolog\Handler\AmqpHandler</parameter>
    <parameter key="monolog.handler.error_log.class">Monolog\Handler\ErrorLogHandler</parameter>
    <parameter key="monolog.handler.loggly.class">Monolog\Handler\LogglyHandler</parameter>
    <parameter key="monolog.handler.logentries.class">Monolog\Handler\LogEntriesHandler</parameter>
    <parameter key="monolog.handler.whatfailuregroup.class">Monolog\Handler\WhatFailureGroupHandler</parameter>
    <parameter key="monolog.activation_strategy.not_found.class">Symfony\Bundle\MonologBundle\NotFoundActivationStrategy</parameter>
    <parameter key="monolog.handler.fingers_crossed.class">Monolog\Handler\FingersCrossedHandler</parameter>
    <parameter key="monolog.handler.fingers_crossed.error_level_activation_strategy.class">Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy</parameter>
    <parameter key="monolog.handler.filter.class">Monolog\Handler\FilterHandler</parameter>
    <parameter key="monolog.handler.mongo.class">Monolog\Handler\MongoDBHandler</parameter>
    <parameter key="monolog.mongo.client.class">MongoClient</parameter>
    <parameter key="monolog.handler.elasticsearch.class">Monolog\Handler\ElasticSearchHandler</parameter>
    <parameter key="monolog.elastica.client.class">Elastica\Client</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.main">null</parameter>
    </parameter>
    <parameter key="swiftmailer.class">Swift_Mailer</parameter>
    <parameter key="swiftmailer.transport.sendmail.class">Swift_Transport_SendmailTransport</parameter>
    <parameter key="swiftmailer.transport.mail.class">Swift_Transport_MailTransport</parameter>
    <parameter key="swiftmailer.transport.failover.class">Swift_Transport_FailoverTransport</parameter>
    <parameter key="swiftmailer.plugin.redirecting.class">Swift_Plugins_RedirectingPlugin</parameter>
    <parameter key="swiftmailer.plugin.impersonate.class">Swift_Plugins_ImpersonatePlugin</parameter>
    <parameter key="swiftmailer.plugin.messagelogger.class">Swift_Plugins_MessageLogger</parameter>
    <parameter key="swiftmailer.plugin.antiflood.class">Swift_Plugins_AntiFloodPlugin</parameter>
    <parameter key="swiftmailer.transport.smtp.class">Swift_Transport_EsmtpTransport</parameter>
    <parameter key="swiftmailer.plugin.blackhole.class">Swift_Plugins_BlackholePlugin</parameter>
    <parameter key="swiftmailer.spool.file.class">Swift_FileSpool</parameter>
    <parameter key="swiftmailer.spool.memory.class">Swift_MemorySpool</parameter>
    <parameter key="swiftmailer.email_sender.listener.class">Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</parameter>
    <parameter key="swiftmailer.data_collector.class">Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">25</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">localhost</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">false</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.spool.enabled">false</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="sensio_framework_extra.view.guesser.class">Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser</parameter>
    <parameter key="sensio_framework_extra.controller.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_dir.class">Symfony\Component\Routing\Loader\AnnotationDirectoryLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_file.class">Symfony\Component\Routing\Loader\AnnotationFileLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_class.class">Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader</parameter>
    <parameter key="sensio_framework_extra.converter.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</parameter>
    <parameter key="sensio_framework_extra.converter.manager.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager</parameter>
    <parameter key="sensio_framework_extra.converter.doctrine.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter</parameter>
    <parameter key="sensio_framework_extra.converter.datetime.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter</parameter>
    <parameter key="jms_aop.cache_dir">/var/www/sonata-3/app/cache/dev/jms_aop</parameter>
    <parameter key="jms_aop.interceptor_loader.class">JMS\AopBundle\Aop\InterceptorLoader</parameter>
    <parameter key="security.secured_services" type="collection"/>
    <parameter key="security.access.method_interceptor.class">JMS\SecurityExtraBundle\Security\Authorization\Interception\MethodSecurityInterceptor</parameter>
    <parameter key="security.access.method_access_control" type="collection"/>
    <parameter key="security.access.remembering_access_decision_manager.class">JMS\SecurityExtraBundle\Security\Authorization\RememberingAccessDecisionManager</parameter>
    <parameter key="security.access.run_as_manager.class">JMS\SecurityExtraBundle\Security\Authorization\RunAsManager</parameter>
    <parameter key="security.authentication.provider.run_as.class">JMS\SecurityExtraBundle\Security\Authentication\Provider\RunAsAuthenticationProvider</parameter>
    <parameter key="security.run_as.key">RunAsToken</parameter>
    <parameter key="security.run_as.role_prefix">ROLE_</parameter>
    <parameter key="security.access.after_invocation_manager.class">JMS\SecurityExtraBundle\Security\Authorization\AfterInvocation\AfterInvocationManager</parameter>
    <parameter key="security.access.after_invocation.acl_provider.class">JMS\SecurityExtraBundle\Security\Authorization\AfterInvocation\AclAfterInvocationProvider</parameter>
    <parameter key="security.access.iddqd_voter.class">JMS\SecurityExtraBundle\Security\Authorization\Voter\IddqdVoter</parameter>
    <parameter key="security.extra.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="security.extra.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="security.extra.driver_chain.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="security.extra.annotation_driver.class">JMS\SecurityExtraBundle\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="security.extra.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="security.access.secure_all_services">false</parameter>
    <parameter key="security.extra.cache_dir">/var/www/sonata-3/app/cache/dev/jms_security</parameter>
    <parameter key="security.authenticated_voter.disabled">false</parameter>
    <parameter key="security.role_voter.disabled">false</parameter>
    <parameter key="security.acl_voter.disabled">false</parameter>
    <parameter key="security.extra.iddqd_ignore_roles" type="collection">
      <parameter>ROLE_PREVIOUS_ADMIN</parameter>
    </parameter>
    <parameter key="security.iddqd_aliases" type="collection"/>
    <parameter key="assetic.asset_factory.class">Symfony\Bundle\AsseticBundle\Factory\AssetFactory</parameter>
    <parameter key="assetic.asset_manager.class">Assetic\Factory\LazyAssetManager</parameter>
    <parameter key="assetic.asset_manager_cache_warmer.class">Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer</parameter>
    <parameter key="assetic.cached_formula_loader.class">Assetic\Factory\Loader\CachedFormulaLoader</parameter>
    <parameter key="assetic.config_cache.class">Assetic\Cache\ConfigCache</parameter>
    <parameter key="assetic.config_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader</parameter>
    <parameter key="assetic.config_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource</parameter>
    <parameter key="assetic.coalescing_directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource</parameter>
    <parameter key="assetic.directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource</parameter>
    <parameter key="assetic.filter_manager.class">Symfony\Bundle\AsseticBundle\FilterManager</parameter>
    <parameter key="assetic.worker.ensure_filter.class">Assetic\Factory\Worker\EnsureFilterWorker</parameter>
    <parameter key="assetic.worker.cache_busting.class">Assetic\Factory\Worker\CacheBustingWorker</parameter>
    <parameter key="assetic.value_supplier.class">Symfony\Bundle\AsseticBundle\DefaultValueSupplier</parameter>
    <parameter key="assetic.node.paths" type="collection"/>
    <parameter key="assetic.cache_dir">/var/www/sonata-3/app/cache/dev/assetic</parameter>
    <parameter key="assetic.bundles" type="collection"/>
    <parameter key="assetic.twig_extension.class">Symfony\Bundle\AsseticBundle\Twig\AsseticExtension</parameter>
    <parameter key="assetic.twig_formula_loader.class">Assetic\Extension\Twig\TwigFormulaLoader</parameter>
    <parameter key="assetic.helper.dynamic.class">Symfony\Bundle\AsseticBundle\Templating\DynamicAsseticHelper</parameter>
    <parameter key="assetic.helper.static.class">Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper</parameter>
    <parameter key="assetic.php_formula_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\AsseticHelperFormulaLoader</parameter>
    <parameter key="assetic.debug">false</parameter>
    <parameter key="assetic.use_controller">false</parameter>
    <parameter key="assetic.enable_profiler">false</parameter>
    <parameter key="assetic.read_from">/var/www/sonata-3/app/../web</parameter>
    <parameter key="assetic.write_to">/var/www/sonata-3/app/../web</parameter>
    <parameter key="assetic.variables" type="collection"/>
    <parameter key="assetic.java.bin">/usr/bin/java</parameter>
    <parameter key="assetic.node.bin">/usr/bin/node</parameter>
    <parameter key="assetic.ruby.bin">/usr/bin/ruby</parameter>
    <parameter key="assetic.sass.bin">/usr/bin/sass</parameter>
    <parameter key="assetic.filter.cssrewrite.class">Assetic\Filter\CssRewriteFilter</parameter>
    <parameter key="assetic.filter.yui_js.class">Assetic\Filter\Yui\JsCompressorFilter</parameter>
    <parameter key="assetic.filter.yui_js.java">/usr/bin/java</parameter>
    <parameter key="assetic.filter.yui_js.jar">/var/www/sonata-3/app/../bin/yuicompressor.jar</parameter>
    <parameter key="assetic.filter.yui_js.charset">UTF-8</parameter>
    <parameter key="assetic.filter.yui_js.stacksize">null</parameter>
    <parameter key="assetic.filter.yui_js.timeout">null</parameter>
    <parameter key="assetic.filter.yui_js.nomunge">null</parameter>
    <parameter key="assetic.filter.yui_js.preserve_semi">null</parameter>
    <parameter key="assetic.filter.yui_js.disable_optimizations">null</parameter>
    <parameter key="assetic.filter.yui_js.linebreak">null</parameter>
    <parameter key="assetic.filter.yui_css.class">Assetic\Filter\Yui\CssCompressorFilter</parameter>
    <parameter key="assetic.filter.yui_css.java">/usr/bin/java</parameter>
    <parameter key="assetic.filter.yui_css.jar">/var/www/sonata-3/app/../bin/yuicompressor.jar</parameter>
    <parameter key="assetic.filter.yui_css.charset">UTF-8</parameter>
    <parameter key="assetic.filter.yui_css.stacksize">null</parameter>
    <parameter key="assetic.filter.yui_css.timeout">null</parameter>
    <parameter key="assetic.filter.yui_css.linebreak">null</parameter>
    <parameter key="assetic.twig_extension.functions" type="collection"/>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="json" type="collection">
        <parameter key="class">Sonata\Doctrine\Types\JsonType</parameter>
        <parameter key="commented">true</parameter>
      </parameter>
      <parameter key="currency" type="collection">
        <parameter key="class">Sonata\Component\Currency\CurrencyDoctrineType</parameter>
        <parameter key="commented">true</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\ORM\Mapping\DefaultEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/var/www/sonata-3/app/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine_migrations.dir_name">/var/www/sonata-3/app/DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.namespace">Application\Migrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="knp_menu.factory.class">Knp\Menu\MenuFactory</parameter>
    <parameter key="knp_menu.factory_extension.routing.class">Knp\Menu\Integration\Symfony\RoutingExtension</parameter>
    <parameter key="knp_menu.helper.class">Knp\Menu\Twig\Helper</parameter>
    <parameter key="knp_menu.matcher.class">Knp\Menu\Matcher\Matcher</parameter>
    <parameter key="knp_menu.menu_provider.chain.class">Knp\Menu\Provider\ChainProvider</parameter>
    <parameter key="knp_menu.menu_provider.container_aware.class">Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.menu_provider.builder_alias.class">Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider</parameter>
    <parameter key="knp_menu.renderer_provider.class">Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.renderer.list.class">Knp\Menu\Renderer\ListRenderer</parameter>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.listener.voters.class">Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener</parameter>
    <parameter key="knp_menu.voter.router.class">Knp\Menu\Matcher\Voter\RouteVoter</parameter>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">knp_menu.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="templating.helper.markdown.class">Knp\Bundle\MarkdownBundle\Helper\MarkdownHelper</parameter>
    <parameter key="knp_paginator.class">Knp\Component\Pager\Paginator</parameter>
    <parameter key="knp_paginator.templating.helper.pagination.class">Knp\Bundle\PaginatorBundle\Templating\PaginationHelper</parameter>
    <parameter key="knp_paginator.helper.processor.class">Knp\Bundle\PaginatorBundle\Helper\Processor</parameter>
    <parameter key="knp_paginator.template.pagination">MopaBootstrapBundle:Pagination:sliding.html.twig</parameter>
    <parameter key="knp_paginator.template.filtration">KnpPaginatorBundle:Pagination:filtration.html.twig</parameter>
    <parameter key="knp_paginator.template.sortable">KnpPaginatorBundle:Pagination:sortable_link.html.twig</parameter>
    <parameter key="knp_paginator.page_range">5</parameter>
    <parameter key="fos_user.validator.password.class">FOS\UserBundle\Validator\PasswordValidator</parameter>
    <parameter key="fos_user.validator.unique.class">FOS\UserBundle\Validator\UniqueValidator</parameter>
    <parameter key="fos_user.security.interactive_login_listener.class">FOS\UserBundle\Security\InteractiveLoginListener</parameter>
    <parameter key="fos_user.security.login_manager.class">FOS\UserBundle\Security\LoginManager</parameter>
    <parameter key="fos_user.resetting.email.template">FOSUserBundle:Resetting:email.txt.twig</parameter>
    <parameter key="fos_user.registration.confirmation.template">FOSUserBundle:Registration:email.txt.twig</parameter>
    <parameter key="fos_user.storage">orm</parameter>
    <parameter key="fos_user.firewall_name">main</parameter>
    <parameter key="fos_user.model_manager_name">null</parameter>
    <parameter key="fos_user.model.user.class">Application\Sonata\UserBundle\Entity\User</parameter>
    <parameter key="fos_user.template.engine">twig</parameter>
    <parameter key="fos_user.profile.form.type">fos_user_profile</parameter>
    <parameter key="fos_user.profile.form.name">fos_user_profile_form</parameter>
    <parameter key="fos_user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.from_email" type="collection">
      <parameter key="webmaster@example.com">webmaster</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.enabled">false</parameter>
    <parameter key="fos_user.registration.form.type">fos_user_registration</parameter>
    <parameter key="fos_user.registration.form.name">fos_user_registration_form</parameter>
    <parameter key="fos_user.registration.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.change_password.form.type">fos_user_change_password</parameter>
    <parameter key="fos_user.change_password.form.name">fos_user_change_password_form</parameter>
    <parameter key="fos_user.change_password.form.validation_groups" type="collection">
      <parameter>ChangePassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.resetting.email.from_email" type="collection">
      <parameter key="webmaster@example.com">webmaster</parameter>
    </parameter>
    <parameter key="fos_user.resetting.token_ttl">86400</parameter>
    <parameter key="fos_user.resetting.form.type">fos_user_resetting</parameter>
    <parameter key="fos_user.resetting.form.name">fos_user_resetting_form</parameter>
    <parameter key="fos_user.resetting.form.validation_groups" type="collection">
      <parameter>ResetPassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.group_manager.class">FOS\UserBundle\Doctrine\GroupManager</parameter>
    <parameter key="fos_user.model.group.class">Application\Sonata\UserBundle\Entity\Group</parameter>
    <parameter key="fos_user.group.form.type">fos_user_group</parameter>
    <parameter key="fos_user.group.form.name">fos_user_group_form</parameter>
    <parameter key="fos_user.group.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="sonata.user.admin.groupname">sonata_user</parameter>
    <parameter key="sonata.user.block.breadcrumb_index.class">Sonata\UserBundle\Block\Breadcrumb\UserIndexBreadcrumbBlockService</parameter>
    <parameter key="sonata.user.block.breadcrumb_profile.class">Sonata\UserBundle\Block\Breadcrumb\UserProfileBreadcrumbBlockService</parameter>
    <parameter key="sonata.user.admin.user.class">Sonata\UserBundle\Admin\Entity\UserAdmin</parameter>
    <parameter key="sonata.user.admin.group.class">Sonata\UserBundle\Admin\Entity\GroupAdmin</parameter>
    <parameter key="sonata.user.admin.user.entity">Application\Sonata\UserBundle\Entity\User</parameter>
    <parameter key="sonata.user.admin.group.entity">Application\Sonata\UserBundle\Entity\Group</parameter>
    <parameter key="sonata.user.admin.user.translation_domain">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.group.translation_domain">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.user.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.user.admin.group.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.user.impersonating" type="collection">
      <parameter key="route">page_slug</parameter>
      <parameter key="parameters" type="collection">
        <parameter key="path">/</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.user.google.authenticator.enabled">true</parameter>
    <parameter key="sonata.user.profile.form.type">sonata_user_profile</parameter>
    <parameter key="sonata.user.profile.form.name">sonata_user_profile_form</parameter>
    <parameter key="sonata.user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="sonata.user.register.confirm.redirect_route">sonata_user_profile_show</parameter>
    <parameter key="sonata.user.register.confirm.redirect_route_params" type="collection"/>
    <parameter key="sonata.user.configuration.profile_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="type">sonata.block.service.text</parameter>
        <parameter key="settings" type="collection">
          <parameter key="content">&lt;h2&gt;Welcome!&lt;/h2&gt; &lt;p&gt;This is a sample user profile dashboard, feel free to override it in the configuration! Want to make this text dynamic? For instance display the user's name? Create a dedicated block and edit the configuration!&lt;/p&gt;</parameter>
        </parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="type">sonata.order.block.recent_orders</parameter>
        <parameter key="settings" type="collection">
          <parameter key="title">Recent Orders</parameter>
          <parameter key="number">5</parameter>
          <parameter key="mode">public</parameter>
        </parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="position">right</parameter>
        <parameter key="type">sonata.timeline.block.timeline</parameter>
        <parameter key="settings" type="collection">
          <parameter key="max_per_page">15</parameter>
        </parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="position">right</parameter>
        <parameter key="type">sonata.news.block.recent_posts</parameter>
        <parameter key="settings" type="collection">
          <parameter key="title">Recent Posts</parameter>
          <parameter key="number">5</parameter>
          <parameter key="mode">public</parameter>
        </parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="position">right</parameter>
        <parameter key="type">sonata.news.block.recent_comments</parameter>
        <parameter key="settings" type="collection">
          <parameter key="title">Recent Comments</parameter>
          <parameter key="number">5</parameter>
          <parameter key="mode">public</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.page.cms_manager.page.class">Sonata\PageBundle\CmsManager\CmsPageManager</parameter>
    <parameter key="sonata.page.cms_manager.snapshot.class">Sonata\PageBundle\CmsManager\CmsSnapshotManager</parameter>
    <parameter key="sonata.page.cms_manager_selector.class">Sonata\PageBundle\CmsManager\CmsManagerSelector</parameter>
    <parameter key="sonata.page.decorator_strategy.class">Sonata\PageBundle\CmsManager\DecoratorStrategy</parameter>
    <parameter key="sonata.page.response_listener.class">Sonata\PageBundle\Listener\ResponseListener</parameter>
    <parameter key="sonata.page.request_listener.class">Sonata\PageBundle\Listener\RequestListener</parameter>
    <parameter key="sonata.page.site.selector.host.class">Sonata\PageBundle\Site\HostSiteSelector</parameter>
    <parameter key="sonata.page.site.selector.host_by_locale.class">Sonata\PageBundle\Site\HostByLocaleSiteSelector</parameter>
    <parameter key="sonata.page.site.selector.host_with_path.class">Sonata\PageBundle\Site\HostPathSiteSelector</parameter>
    <parameter key="sonata.page.site.selector.host_with_path_by_locale.class">Sonata\PageBundle\Site\HostPathByLocaleSiteSelector</parameter>
    <parameter key="sonata.page.router.class">Sonata\PageBundle\Route\CmsPageRouter</parameter>
    <parameter key="sonata.page.route.page.generator.class">Sonata\PageBundle\Route\RoutePageGenerator</parameter>
    <parameter key="sonata.page.service.manager.class">Sonata\PageBundle\Page\PageServiceManager</parameter>
    <parameter key="sonata.page.template.manager.class">Sonata\PageBundle\Page\TemplateManager</parameter>
    <parameter key="sonata.page.service.default.class">Sonata\PageBundle\Page\Service\DefaultPageService</parameter>
    <parameter key="sonata.page.admin.page.class">Sonata\PageBundle\Admin\PageAdmin</parameter>
    <parameter key="sonata.page.admin.page.controller">SonataPageBundle:PageAdmin</parameter>
    <parameter key="sonata.page.admin.page.translation_domain">SonataPageBundle</parameter>
    <parameter key="sonata.page.admin.site.class">Sonata\PageBundle\Admin\SiteAdmin</parameter>
    <parameter key="sonata.page.admin.site.controller">SonataPageBundle:SiteAdmin</parameter>
    <parameter key="sonata.page.admin.site.translation_domain">SonataPageBundle</parameter>
    <parameter key="sonata.page.admin.block.class">Sonata\PageBundle\Admin\BlockAdmin</parameter>
    <parameter key="sonata.page.admin.block.controller">SonataPageBundle:BlockAdmin</parameter>
    <parameter key="sonata.page.admin.block.translation_domain">SonataPageBundle</parameter>
    <parameter key="sonata.page.admin.shared_block.class">Sonata\PageBundle\Admin\SharedBlockAdmin</parameter>
    <parameter key="sonata.page.admin.shared_block.controller">SonataPageBundle:BlockAdmin</parameter>
    <parameter key="sonata.page.admin.shared_block.translation_domain">SonataPageBundle</parameter>
    <parameter key="sonata.page.admin.snapshot.class">Sonata\PageBundle\Admin\SnapshotAdmin</parameter>
    <parameter key="sonata.page.admin.snapshot.controller">SonataPageBundle:SnapshotAdmin</parameter>
    <parameter key="sonata.page.admin.snapshot.translation_domain">SonataPageBundle</parameter>
    <parameter key="sonata.page.block.container.class">Sonata\PageBundle\Block\ContainerBlockService</parameter>
    <parameter key="sonata.page.block.children_pages.class">Sonata\PageBundle\Block\ChildrenPagesBlockService</parameter>
    <parameter key="sonata.page.block.ajax.class">Sonata\PageBundle\Controller\AjaxController</parameter>
    <parameter key="sonata.page.block.breadcrumb.class">Sonata\PageBundle\Block\BreadcrumbBlockService</parameter>
    <parameter key="sonata.page.block.shared_block.class">Sonata\PageBundle\Block\SharedBlockBlockService</parameter>
    <parameter key="sonata.page.manager.page.class">Sonata\PageBundle\Entity\PageManager</parameter>
    <parameter key="sonata.page.manager.block.class">Sonata\PageBundle\Entity\BlockManager</parameter>
    <parameter key="sonata.page.manager.snapshot.class">Sonata\PageBundle\Entity\SnapshotManager</parameter>
    <parameter key="sonata.page.manager.site.class">Sonata\PageBundle\Entity\SiteManager</parameter>
    <parameter key="sonata.page.block_interactor.class">Sonata\PageBundle\Entity\BlockInteractor</parameter>
    <parameter key="sonata.page.transformer.class">Sonata\PageBundle\Entity\Transformer</parameter>
    <parameter key="sonata.page.assets" type="collection">
      <parameter key="stylesheets" type="collection">
        <parameter>assetic/sonata_front_css.css</parameter>
      </parameter>
      <parameter key="javascripts" type="collection">
        <parameter>assetic/sonata_front_js.js</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.page.slugify_service">sonata.core.slugify.native</parameter>
    <parameter key="sonata.page.is_inline_edition_on">false</parameter>
    <parameter key="sonata.page.site.class">Application\Sonata\PageBundle\Entity\Site</parameter>
    <parameter key="sonata.page.block.class">Application\Sonata\PageBundle\Entity\Block</parameter>
    <parameter key="sonata.page.snapshot.class">Application\Sonata\PageBundle\Entity\Snapshot</parameter>
    <parameter key="sonata.page.page.class">Application\Sonata\PageBundle\Entity\Page</parameter>
    <parameter key="sonata.page.admin.site.entity">Application\Sonata\PageBundle\Entity\Site</parameter>
    <parameter key="sonata.page.admin.block.entity">Application\Sonata\PageBundle\Entity\Block</parameter>
    <parameter key="sonata.page.admin.snapshot.entity">Application\Sonata\PageBundle\Entity\Snapshot</parameter>
    <parameter key="sonata.page.admin.page.entity">Application\Sonata\PageBundle\Entity\Page</parameter>
    <parameter key="sonata.news.manager.comment.class">Sonata\NewsBundle\Entity\CommentManager</parameter>
    <parameter key="sonata.news.manager.post.class">Sonata\NewsBundle\Entity\PostManager</parameter>
    <parameter key="sonata.news.admin.post.entity">Application\Sonata\NewsBundle\Entity\Post</parameter>
    <parameter key="sonata.news.admin.comment.entity">Application\Sonata\NewsBundle\Entity\Comment</parameter>
    <parameter key="sonata.news.manager.post.entity">Application\Sonata\NewsBundle\Entity\Post</parameter>
    <parameter key="sonata.news.manager.comment.entity">Application\Sonata\NewsBundle\Entity\Comment</parameter>
    <parameter key="sonata.news.admin.post.class">Sonata\NewsBundle\Admin\PostAdmin</parameter>
    <parameter key="sonata.news.admin.post.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.news.admin.post.translation_domain">SonataNewsBundle</parameter>
    <parameter key="sonata.news.admin.comment.class">Sonata\NewsBundle\Admin\CommentAdmin</parameter>
    <parameter key="sonata.news.admin.comment.controller">SonataNewsBundle:CommentAdmin</parameter>
    <parameter key="sonata.news.admin.comment.translation_domain">SonataNewsBundle</parameter>
    <parameter key="sonata.media.provider.image.class">Sonata\MediaBundle\Provider\ImageProvider</parameter>
    <parameter key="sonata.media.provider.file.class">Sonata\MediaBundle\Provider\FileProvider</parameter>
    <parameter key="sonata.media.provider.youtube.class">Sonata\MediaBundle\Provider\YouTubeProvider</parameter>
    <parameter key="sonata.media.provider.dailymotion.class">Sonata\MediaBundle\Provider\DailyMotionProvider</parameter>
    <parameter key="sonata.media.provider.vimeo.class">Sonata\MediaBundle\Provider\VimeoProvider</parameter>
    <parameter key="sonata.media.thumbnail.format">Sonata\MediaBundle\Thumbnail\FormatThumbnail</parameter>
    <parameter key="sonata.media.thumbnail.format.default">jpg</parameter>
    <parameter key="sonata.media.thumbnail.liip_imagine">Sonata\MediaBundle\Thumbnail\LiipImagineThumbnail</parameter>
    <parameter key="sonata.media.pool.class">Sonata\MediaBundle\Provider\Pool</parameter>
    <parameter key="sonata.media.resizer.simple.class">Sonata\MediaBundle\Resizer\SimpleResizer</parameter>
    <parameter key="sonata.media.resizer.square.class">Sonata\MediaBundle\Resizer\SquareResizer</parameter>
    <parameter key="sonata.media.block.media.class">Sonata\MediaBundle\Block\MediaBlockService</parameter>
    <parameter key="sonata.media.block.feature_media.class">Sonata\MediaBundle\Block\FeatureMediaBlockService</parameter>
    <parameter key="sonata.media.block.gallery.class">Sonata\MediaBundle\Block\GalleryBlockService</parameter>
    <parameter key="sonata.media.metadata.proxy.class">Sonata\MediaBundle\Metadata\ProxyMetadataBuilder</parameter>
    <parameter key="sonata.media.metadata.amazon.class">Sonata\MediaBundle\Metadata\AmazonMetadataBuilder</parameter>
    <parameter key="sonata.media.metadata.noop.class">Sonata\MediaBundle\Metadata\NoopMetadataBuilder</parameter>
    <parameter key="sonata.media.adapater.filesystem.opencloud.class"></parameter>
    <parameter key="sonata.media.block.breadcrumb_view.class">Sonata\MediaBundle\Block\Breadcrumb\GalleryViewBreadcrumbBlockService</parameter>
    <parameter key="sonata.media.block.breadcrumb_index.class">Sonata\MediaBundle\Block\Breadcrumb\GalleryIndexBreadcrumbBlockService</parameter>
    <parameter key="sonata.media.block.breadcrumb_media.class">Sonata\MediaBundle\Block\Breadcrumb\MediaViewBreadcrumbBlockService</parameter>
    <parameter key="sonata.media.manager.media.class">Sonata\MediaBundle\Entity\MediaManager</parameter>
    <parameter key="sonata.media.manager.gallery.class">Sonata\MediaBundle\Entity\GalleryManager</parameter>
    <parameter key="sonata.media.admin.media.class">Sonata\MediaBundle\Admin\ORM\MediaAdmin</parameter>
    <parameter key="sonata.media.admin.media.controller">SonataMediaBundle:MediaAdmin</parameter>
    <parameter key="sonata.media.admin.media.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin.gallery.class">Sonata\MediaBundle\Admin\GalleryAdmin</parameter>
    <parameter key="sonata.media.admin.gallery.controller">SonataMediaBundle:GalleryAdmin</parameter>
    <parameter key="sonata.media.admin.gallery.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.class">Sonata\MediaBundle\Admin\GalleryHasMediaAdmin</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.resizer.simple.adapter.mode">inset</parameter>
    <parameter key="sonata.media.resizer.square.adapter.mode">inset</parameter>
    <parameter key="sonata.media.admin.media.entity">Application\Sonata\MediaBundle\Entity\Media</parameter>
    <parameter key="sonata.media.admin.gallery.entity">Application\Sonata\MediaBundle\Entity\Gallery</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.entity">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</parameter>
    <parameter key="sonata.media.media.class">Application\Sonata\MediaBundle\Entity\Media</parameter>
    <parameter key="sonata.media.gallery.class">Application\Sonata\MediaBundle\Entity\Gallery</parameter>
    <parameter key="ivory_ck_editor.form.type.class">Ivory\CKEditorBundle\Form\Type\CKEditorType</parameter>
    <parameter key="ivory_ck_editor.config_manager.class">Ivory\CKEditorBundle\Model\ConfigManager</parameter>
    <parameter key="ivory_ck_editor.plugin_manager.class">Ivory\CKEditorBundle\Model\PluginManager</parameter>
    <parameter key="ivory_ck_editor.styles_set_manager.class">Ivory\CKEditorBundle\Model\StylesSetManager</parameter>
    <parameter key="ivory_ck_editor.template_manager.class">Ivory\CKEditorBundle\Model\TemplateManager</parameter>
    <parameter key="ivory_ck_editor.templating.helper.class">Ivory\CKEditorBundle\Templating\CKEditorHelper</parameter>
    <parameter key="ivory_ck_editor.twig_extension.class">Ivory\CKEditorBundle\Twig\CKEditorExtension</parameter>
    <parameter key="ivory_ck_editor.form.type.enable">true</parameter>
    <parameter key="ivory_ck_editor.form.type.autoload">true</parameter>
    <parameter key="ivory_ck_editor.form.type.base_path">bundles/ivoryckeditor/</parameter>
    <parameter key="ivory_ck_editor.form.type.js_path">bundles/ivoryckeditor/ckeditor.js</parameter>
    <parameter key="sonata.admin.configuration.templates" type="collection">
      <parameter key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</parameter>
      <parameter key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</parameter>
      <parameter key="layout">SonataAdminBundle::standard_layout.html.twig</parameter>
      <parameter key="ajax">SonataAdminBundle::ajax_layout.html.twig</parameter>
      <parameter key="list">SonataAdminBundle:CRUD:list.html.twig</parameter>
      <parameter key="show">SonataAdminBundle:CRUD:show.html.twig</parameter>
      <parameter key="edit">SonataAdminBundle:CRUD:edit.html.twig</parameter>
      <parameter key="add_block">SonataAdminBundle:Core:add_block.html.twig</parameter>
      <parameter key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</parameter>
      <parameter key="search">SonataAdminBundle:Core:search.html.twig</parameter>
      <parameter key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      <parameter key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</parameter>
      <parameter key="preview">SonataAdminBundle:CRUD:preview.html.twig</parameter>
      <parameter key="history">SonataAdminBundle:CRUD:history.html.twig</parameter>
      <parameter key="acl">SonataAdminBundle:CRUD:acl.html.twig</parameter>
      <parameter key="action">SonataAdminBundle:CRUD:action.html.twig</parameter>
      <parameter key="select">SonataAdminBundle:CRUD:list__select.html.twig</parameter>
      <parameter key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</parameter>
      <parameter key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</parameter>
      <parameter key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</parameter>
      <parameter key="delete">SonataAdminBundle:CRUD:delete.html.twig</parameter>
      <parameter key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</parameter>
      <parameter key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</parameter>
      <parameter key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</parameter>
      <parameter key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</parameter>
      <parameter key="pager_links">SonataAdminBundle:Pager:links.html.twig</parameter>
      <parameter key="pager_results">SonataAdminBundle:Pager:results.html.twig</parameter>
      <parameter key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.admin_services" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_groups" type="collection">
      <parameter key="sonata.admin.group.content" type="collection">
        <parameter key="label">sonata_content</parameter>
        <parameter key="label_catalogue">SonataDemoBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-th"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter>sonata.news.admin.comment</parameter>
          <parameter>sonata.news.admin.post</parameter>
          <parameter>sonata.media.admin.media</parameter>
          <parameter>sonata.media.admin.gallery</parameter>
          <parameter>sonata.comment.admin.thread</parameter>
        </parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.group.ecommerce" type="collection">
        <parameter key="label">sonata_ecommerce</parameter>
        <parameter key="label_catalogue">SonataAdminBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-dollar"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter>sonata.customer.admin.customer</parameter>
          <parameter>sonata.invoice.admin.invoice</parameter>
          <parameter>sonata.order.admin.order</parameter>
          <parameter>sonata.product.admin.product</parameter>
        </parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.group.classification" type="collection">
        <parameter key="label">sonata_classification</parameter>
        <parameter key="label_catalogue">SonataClassificationBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-sitemap"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter>sonata.classification.admin.category</parameter>
          <parameter>sonata.classification.admin.tag</parameter>
          <parameter>sonata.classification.admin.collection</parameter>
        </parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.group.site_builder" type="collection">
        <parameter key="label">Site Builder</parameter>
        <parameter key="label_catalogue">SonataDemoBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-puzzle-piece"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter>sonata.page.admin.page</parameter>
          <parameter>sonata.page.admin.site</parameter>
        </parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.group.administration" type="collection">
        <parameter key="label">sonata_administration</parameter>
        <parameter key="label_catalogue">SonataAdminBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-cogs"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter>sonata.user.admin.user</parameter>
          <parameter>sonata.user.admin.group</parameter>
          <parameter>sonata.page.admin.site</parameter>
          <parameter>sonata.notification.admin.message</parameter>
        </parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.group.demo" type="collection">
        <parameter key="label">Demo</parameter>
        <parameter key="icon">&lt;i class="fa fa-play-circle"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter>sonata.demo.admin.car</parameter>
          <parameter>sonata.demo.admin.engine</parameter>
          <parameter>sonata.demo.admin.color</parameter>
          <parameter>sonata.demo.admin.material</parameter>
        </parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.dashboard_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="type">sonata.block.service.text</parameter>
        <parameter key="settings" type="collection">
          <parameter key="content">&lt;div class='panel panel-default'&gt;&lt;div class='panel-heading'&gt;&lt;h3 class='panel-title'&gt;Welcome!&lt;/h3&gt;&lt;/div&gt;&lt;div class='panel-body'&gt;You can customize this dashboard by editing the &lt;code&gt;sonata_admin.yml&lt;/code&gt; file. The current dashboard presents the recent items from the NewsBundle and a non-statistical e-commerce information.&lt;/div&gt;&lt;/div&gt;</parameter>
        </parameter>
        <parameter key="class">col-md-4</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="type">sonata.news.block.recent_posts</parameter>
        <parameter key="settings" type="collection">
          <parameter key="title">Recent Posts</parameter>
          <parameter key="number">7</parameter>
          <parameter key="mode">admin</parameter>
        </parameter>
        <parameter key="class">col-md-4</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="type">sonata.news.block.recent_comments</parameter>
        <parameter key="settings" type="collection">
          <parameter key="title">Recent Comments</parameter>
          <parameter key="number">7</parameter>
          <parameter key="mode">admin</parameter>
        </parameter>
        <parameter key="class">col-md-4</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="position">right</parameter>
        <parameter key="type">sonata.order.block.recent_orders</parameter>
        <parameter key="settings" type="collection">
          <parameter key="title">Recent Orders</parameter>
          <parameter key="number">5</parameter>
          <parameter key="mode">admin</parameter>
        </parameter>
        <parameter key="class">col-md-4</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="position">right</parameter>
        <parameter key="type">sonata.customer.block.recent_customers</parameter>
        <parameter key="settings" type="collection">
          <parameter key="title">Recent Customers</parameter>
          <parameter key="number">5</parameter>
          <parameter key="mode">admin</parameter>
        </parameter>
        <parameter key="class">col-md-4</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="position">right</parameter>
        <parameter key="type">sonata.block.service.rss</parameter>
        <parameter key="settings" type="collection">
          <parameter key="title">Sonata Project's Feeds</parameter>
          <parameter key="url">http://sonata-project.org/blog/archive.rss</parameter>
          <parameter key="template">SonataAdminBundle:Block:block_rss_dashboard.html.twig</parameter>
        </parameter>
        <parameter key="class">col-md-4</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.security.acl_user_manager">fos_user.user_manager</parameter>
    <parameter key="sonata.admin.configuration.security.information" type="collection">
      <parameter key="GUEST" type="collection">
        <parameter>VIEW</parameter>
        <parameter>LIST</parameter>
      </parameter>
      <parameter key="STAFF" type="collection">
        <parameter>EDIT</parameter>
        <parameter>LIST</parameter>
        <parameter>CREATE</parameter>
      </parameter>
      <parameter key="EDITOR" type="collection">
        <parameter>OPERATOR</parameter>
        <parameter>EXPORT</parameter>
      </parameter>
      <parameter key="ADMIN" type="collection">
        <parameter>MASTER</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.admin_permissions" type="collection">
      <parameter>CREATE</parameter>
      <parameter>LIST</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>EXPORT</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.object_permissions" type="collection">
      <parameter>VIEW</parameter>
      <parameter>EDIT</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
      <parameter>OWNER</parameter>
    </parameter>
    <parameter key="sonata.admin.security.handler.noop.class">Sonata\AdminBundle\Security\Handler\NoopSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.role.class">Sonata\AdminBundle\Security\Handler\RoleSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.acl.class">Sonata\AdminBundle\Security\Handler\AclSecurityHandler</parameter>
    <parameter key="sonata.admin.security.mask.builder.class">Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</parameter>
    <parameter key="sonata.admin.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminAclManipulator</parameter>
    <parameter key="sonata.admin.object.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminObjectAclManipulator</parameter>
    <parameter key="sonata.admin.extension.map" type="collection">
      <parameter key="admins" type="collection"/>
      <parameter key="excludes" type="collection"/>
      <parameter key="implements" type="collection"/>
      <parameter key="extends" type="collection"/>
      <parameter key="instanceof" type="collection"/>
    </parameter>
    <parameter key="sonata.admin.configuration.filters.persist">false</parameter>
    <parameter key="sonata_doctrine_orm_admin.audit.force">true</parameter>
    <parameter key="sonata.admin.manipulator.acl.object.orm.class">Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator</parameter>
    <parameter key="sonata_doctrine_orm_admin.entity_manager">null</parameter>
    <parameter key="sonata_doctrine_orm_admin.templates" type="collection">
      <parameter key="types" type="collection">
        <parameter key="list" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:list_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</parameter>
          <parameter key="date">SonataIntlBundle:CRUD:list_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:list_time.html.twig</parameter>
          <parameter key="datetime">SonataIntlBundle:CRUD:list_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="email">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="smallint">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="bigint">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="integer">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="decimal">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="currency">SonataIntlBundle:CRUD:list_currency.html.twig</parameter>
          <parameter key="percent">SonataIntlBundle:CRUD:list_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:list_url.html.twig</parameter>
          <parameter key="html">SonataAdminBundle:CRUD:list_html.html.twig</parameter>
        </parameter>
        <parameter key="show" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:show_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</parameter>
          <parameter key="date">SonataIntlBundle:CRUD:show_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:show_time.html.twig</parameter>
          <parameter key="datetime">SonataIntlBundle:CRUD:show_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="smallint">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="bigint">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="integer">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="decimal">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="currency">SonataIntlBundle:CRUD:show_currency.html.twig</parameter>
          <parameter key="percent">SonataIntlBundle:CRUD:show_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:show_url.html.twig</parameter>
          <parameter key="html">SonataAdminBundle:CRUD:show_html.html.twig</parameter>
        </parameter>
      </parameter>
      <parameter key="form" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</parameter>
      </parameter>
      <parameter key="filter" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="simplethings.entityaudit.audited_entities" type="collection">
      <parameter key="0">Application\Sonata\UserBundle\Entity\User</parameter>
      <parameter key="1">Application\Sonata\UserBundle\Entity\Group</parameter>
      <parameter key="2">Application\Sonata\PageBundle\Entity\Page</parameter>
      <parameter key="3">Application\Sonata\PageBundle\Entity\Block</parameter>
      <parameter key="5">Application\Sonata\PageBundle\Entity\Snapshot</parameter>
      <parameter key="6">Application\Sonata\PageBundle\Entity\Site</parameter>
      <parameter key="7">Application\Sonata\NewsBundle\Entity\Post</parameter>
      <parameter key="8">Application\Sonata\NewsBundle\Entity\Comment</parameter>
      <parameter key="9">Application\Sonata\MediaBundle\Entity\Media</parameter>
      <parameter key="10">Application\Sonata\MediaBundle\Entity\Gallery</parameter>
      <parameter key="11">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</parameter>
      <parameter key="12">Application\Sonata\CustomerBundle\Entity\Customer</parameter>
      <parameter key="13">Application\Sonata\CustomerBundle\Entity\Address</parameter>
      <parameter key="14">Application\Sonata\InvoiceBundle\Entity\Invoice</parameter>
      <parameter key="15">Application\Sonata\OrderBundle\Entity\Order</parameter>
      <parameter key="16">Application\Sonata\OrderBundle\Entity\OrderElement</parameter>
      <parameter key="17">Application\Sonata\ProductBundle\Entity\Product</parameter>
      <parameter key="19">Application\Sonata\ProductBundle\Entity\ProductCategory</parameter>
      <parameter key="20">Application\Sonata\ProductBundle\Entity\ProductCollection</parameter>
      <parameter key="21">Application\Sonata\ProductBundle\Entity\Delivery</parameter>
      <parameter key="22">Application\Sonata\CommentBundle\Entity\Comment</parameter>
      <parameter key="23">Application\Sonata\CommentBundle\Entity\Thread</parameter>
      <parameter key="24">Application\Sonata\ClassificationBundle\Entity\Category</parameter>
      <parameter key="25">Application\Sonata\ClassificationBundle\Entity\Tag</parameter>
      <parameter key="26">Application\Sonata\ClassificationBundle\Entity\Collection</parameter>
      <parameter key="27">Application\Sonata\NotificationBundle\Entity\Message</parameter>
      <parameter key="28">Sonata\Bundle\DemoBundle\Entity\Car</parameter>
      <parameter key="29">Sonata\Bundle\DemoBundle\Entity\Engine</parameter>
      <parameter key="30">Sonata\Bundle\DemoBundle\Entity\Inspection</parameter>
      <parameter key="31">Sonata\Bundle\DemoBundle\Entity\Color</parameter>
      <parameter key="32">Sonata\Bundle\DemoBundle\Entity\Material</parameter>
    </parameter>
    <parameter key="simplethings.entityaudit.global_ignore_columns" type="collection"/>
    <parameter key="simplethings.entityaudit.table_prefix"></parameter>
    <parameter key="simplethings.entityaudit.table_suffix">_audit</parameter>
    <parameter key="simplethings.entityaudit.revision_field_name">rev</parameter>
    <parameter key="simplethings.entityaudit.revision_type_field_name">revtype</parameter>
    <parameter key="simplethings.entityaudit.revision_table_name">revisions</parameter>
    <parameter key="simplethings.entityaudit.revision_id_field_type">integer</parameter>
    <parameter key="simplethings_entityaudit.request.current_user_listener.class">SimpleThings\EntityAudit\Request\CurrentUserListener</parameter>
    <parameter key="fos_rest.serializer.exclusion_strategy.version"></parameter>
    <parameter key="fos_rest.serializer.exclusion_strategy.groups"></parameter>
    <parameter key="fos_rest.view_handler.jsonp.callback_param"></parameter>
    <parameter key="fos_rest.view.exception_wrapper_handler">FOS\RestBundle\View\ExceptionWrapperHandler</parameter>
    <parameter key="fos_rest.view_handler.default.class">FOS\RestBundle\View\ViewHandler</parameter>
    <parameter key="fos_rest.view_handler.jsonp.class">FOS\RestBundle\View\JsonpHandler</parameter>
    <parameter key="fos_rest.serializer.exception_wrapper_serialize_handler.class">FOS\RestBundle\Serializer\ExceptionWrapperSerializeHandler</parameter>
    <parameter key="fos_rest.routing.loader.controller.class">FOS\RestBundle\Routing\Loader\RestRouteLoader</parameter>
    <parameter key="fos_rest.routing.loader.yaml_collection.class">FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader</parameter>
    <parameter key="fos_rest.routing.loader.xml_collection.class">FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader</parameter>
    <parameter key="fos_rest.routing.loader.processor.class">FOS\RestBundle\Routing\Loader\RestRouteProcessor</parameter>
    <parameter key="fos_rest.routing.loader.reader.controller.class">FOS\RestBundle\Routing\Loader\Reader\RestControllerReader</parameter>
    <parameter key="fos_rest.routing.loader.reader.action.class">FOS\RestBundle\Routing\Loader\Reader\RestActionReader</parameter>
    <parameter key="fos_rest.format_negotiator.class">FOS\RestBundle\Util\FormatNegotiator</parameter>
    <parameter key="fos_rest.inflector.class">FOS\RestBundle\Util\Inflector\DoctrineInflector</parameter>
    <parameter key="fos_rest.request_matcher.class">Symfony\Component\HttpFoundation\RequestMatcher</parameter>
    <parameter key="fos_rest.violation_formatter.class">FOS\RestBundle\Util\ViolationFormatter</parameter>
    <parameter key="fos_rest.request.param_fetcher.class">FOS\RestBundle\Request\ParamFetcher</parameter>
    <parameter key="fos_rest.request.param_fetcher.reader.class">FOS\RestBundle\Request\ParamReader</parameter>
    <parameter key="fos_rest.cache_dir">/var/www/sonata-3/app/cache/dev/fos_rest</parameter>
    <parameter key="fos_rest.serializer.serialize_null">false</parameter>
    <parameter key="fos_rest.formats" type="collection">
      <parameter key="json">false</parameter>
      <parameter key="xml">false</parameter>
      <parameter key="html">true</parameter>
    </parameter>
    <parameter key="fos_rest.default_engine">twig</parameter>
    <parameter key="fos_rest.force_redirects" type="collection">
      <parameter key="html">302</parameter>
    </parameter>
    <parameter key="fos_rest.failed_validation">400</parameter>
    <parameter key="fos_rest.empty_content">204</parameter>
    <parameter key="fos_rest.serialize_null">false</parameter>
    <parameter key="fos_rest.view_response_listener.class">FOS\RestBundle\EventListener\ViewResponseListener</parameter>
    <parameter key="fos_rest.view_response_listener.force_view">true</parameter>
    <parameter key="fos_rest.routing.loader.default_format">null</parameter>
    <parameter key="fos_rest.routing.loader.include_format">true</parameter>
    <parameter key="fos_rest.exception_listener.class">Symfony\Component\HttpKernel\EventListener\ExceptionListener</parameter>
    <parameter key="fos_rest.controller.exception.class">FOS\RestBundle\Controller\ExceptionController</parameter>
    <parameter key="fos_rest.exception_listener.controller">fos_rest.controller.exception:showAction</parameter>
    <parameter key="fos_rest.exception.codes" type="collection"/>
    <parameter key="fos_rest.exception.messages" type="collection">
      <parameter key="Symfony\Component\HttpKernel\Exception\NotFoundHttpException">true</parameter>
    </parameter>
    <parameter key="fos_rest.normalizer.camel_keys.class">FOS\RestBundle\Normalizer\CamelKeysNormalizer</parameter>
    <parameter key="fos_rest.decoder.json.class">FOS\RestBundle\Decoder\JsonDecoder</parameter>
    <parameter key="fos_rest.decoder.jsontoform.class">FOS\RestBundle\Decoder\JsonToFormDecoder</parameter>
    <parameter key="fos_rest.decoder.xml.class">FOS\RestBundle\Decoder\XmlDecoder</parameter>
    <parameter key="fos_rest.decoder_provider.class">FOS\RestBundle\Decoder\ContainerDecoderProvider</parameter>
    <parameter key="fos_rest.body_listener.class">FOS\RestBundle\EventListener\BodyListener</parameter>
    <parameter key="fos_rest.throw_exception_on_unsupported_content_type">false</parameter>
    <parameter key="fos_rest.body_default_format">null</parameter>
    <parameter key="fos_rest.decoders" type="collection">
      <parameter key="json">fos_rest.decoder.json</parameter>
      <parameter key="xml">fos_rest.decoder.xml</parameter>
    </parameter>
    <parameter key="fos_rest.mime_types" type="collection"/>
    <parameter key="fos_rest.param_fetcher_listener.class">FOS\RestBundle\EventListener\ParamFetcherListener</parameter>
    <parameter key="fos_rest.param_fetcher_listener.set_params_as_attributes">false</parameter>
    <parameter key="fos_rest.converter.request_body.validation_errors_argument">validationErrors</parameter>
    <parameter key="nelmio_api_doc.motd.template">NelmioApiDocBundle::Components/motd.html.twig</parameter>
    <parameter key="nelmio_api_doc.exclude_sections" type="collection"/>
    <parameter key="nelmio_api_doc.default_sections_opened">true</parameter>
    <parameter key="nelmio_api_doc.api_name">API documentation</parameter>
    <parameter key="nelmio_api_doc.sandbox.enabled">true</parameter>
    <parameter key="nelmio_api_doc.sandbox.endpoint">null</parameter>
    <parameter key="nelmio_api_doc.sandbox.accept_type">null</parameter>
    <parameter key="nelmio_api_doc.sandbox.body_format.formats" type="collection">
      <parameter>form</parameter>
      <parameter>json</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.sandbox.body_format.default_format">form</parameter>
    <parameter key="nelmio_api_doc.sandbox.request_format.method">format_param</parameter>
    <parameter key="nelmio_api_doc.sandbox.request_format.default_format">json</parameter>
    <parameter key="nelmio_api_doc.sandbox.request_format.formats" type="collection">
      <parameter key="json">application/json</parameter>
      <parameter key="xml">application/xml</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.formatter.abstract_formatter.class">Nelmio\ApiDocBundle\Formatter\AbstractFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.markdown_formatter.class">Nelmio\ApiDocBundle\Formatter\MarkdownFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.simple_formatter.class">Nelmio\ApiDocBundle\Formatter\SimpleFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.html_formatter.class">Nelmio\ApiDocBundle\Formatter\HtmlFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.swagger_formatter.class">Nelmio\ApiDocBundle\Formatter\SwaggerFormatter</parameter>
    <parameter key="nelmio_api_doc.sandbox.authentication">null</parameter>
    <parameter key="nelmio_api_doc.extractor.api_doc_extractor.class">Nelmio\ApiDocBundle\Extractor\ApiDocExtractor</parameter>
    <parameter key="nelmio_api_doc.form.extension.description_form_type_extension.class">Nelmio\ApiDocBundle\Form\Extension\DescriptionFormTypeExtension</parameter>
    <parameter key="nelmio_api_doc.twig.extension.extra_markdown.class">Nelmio\ApiDocBundle\Twig\Extension\MarkdownExtension</parameter>
    <parameter key="nelmio_api_doc.doc_comment_extractor.class">Nelmio\ApiDocBundle\Util\DocCommentExtractor</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.fos_rest.class">Nelmio\ApiDocBundle\Extractor\Handler\FosRestHandler</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.jms_security.class">Nelmio\ApiDocBundle\Extractor\Handler\JmsSecurityExtraHandler</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.sensio_framework_extra.class">Nelmio\ApiDocBundle\Extractor\Handler\SensioFrameworkExtraHandler</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.phpdoc.class">Nelmio\ApiDocBundle\Extractor\Handler\PhpDocHandler</parameter>
    <parameter key="nelmio_api_doc.parser.collection_parser.class">Nelmio\ApiDocBundle\Parser\CollectionParser</parameter>
    <parameter key="nelmio_api_doc.parser.form_errors_parser.class">Nelmio\ApiDocBundle\Parser\FormErrorsParser</parameter>
    <parameter key="nelmio_api_doc.request_listener.parameter">_doc</parameter>
    <parameter key="nelmio_api_doc.event_listener.request.class">Nelmio\ApiDocBundle\EventListener\RequestListener</parameter>
    <parameter key="nelmio_api_doc.swagger.base_path">/api</parameter>
    <parameter key="nelmio_api_doc.swagger.swagger_version">1.2</parameter>
    <parameter key="nelmio_api_doc.swagger.api_version">0.1</parameter>
    <parameter key="nelmio_api_doc.swagger.info" type="collection">
      <parameter key="title">Symfony2</parameter>
      <parameter key="description">My awesome Symfony2 app!</parameter>
      <parameter key="TermsOfServiceUrl">null</parameter>
      <parameter key="contact">null</parameter>
      <parameter key="license">null</parameter>
      <parameter key="licenseUrl">null</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.swagger.model_naming_strategy">dot_notation</parameter>
    <parameter key="sonata.customer.selector.class">Sonata\Component\Customer\CustomerSelector</parameter>
    <parameter key="sonata.basket.basket.class">Application\Sonata\BasketBundle\Entity\Basket</parameter>
    <parameter key="sonata.basket.basket_element.class">Application\Sonata\BasketBundle\Entity\BasketElement</parameter>
    <parameter key="sonata.address.manager.class">Sonata\CustomerBundle\Entity\AddressManager</parameter>
    <parameter key="sonata.customer.manager.class">Sonata\CustomerBundle\Entity\CustomerManager</parameter>
    <parameter key="sonata.customer.admin.customer.class">Sonata\CustomerBundle\Admin\CustomerAdmin</parameter>
    <parameter key="sonata.customer.admin.customer.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.customer.admin.address.class">Sonata\CustomerBundle\Admin\AddressAdmin</parameter>
    <parameter key="sonata.customer.admin.address.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.customer.block.breadcrumb_address.class">Sonata\CustomerBundle\Block\Breadcrumb\CustomerAddressBreadcrumbBlockService</parameter>
    <parameter key="sonata.customer.customer.class">Application\Sonata\CustomerBundle\Entity\Customer</parameter>
    <parameter key="sonata.customer.address.class">Application\Sonata\CustomerBundle\Entity\Address</parameter>
    <parameter key="sonata.customer.admin.customer.entity">Application\Sonata\CustomerBundle\Entity\Customer</parameter>
    <parameter key="sonata.customer.admin.address.entity">Application\Sonata\CustomerBundle\Entity\Address</parameter>
    <parameter key="sonata.delivery.selector.class">Sonata\Component\Delivery\Selector</parameter>
    <parameter key="sonata.delivery.pool.class">Sonata\Component\Delivery\Pool</parameter>
    <parameter key="sonata.invoice.manager.class">Sonata\InvoiceBundle\Entity\InvoiceManager</parameter>
    <parameter key="sonata.invoice_element.manager.class">Sonata\InvoiceBundle\Entity\InvoiceElementManager</parameter>
    <parameter key="sonata.invoice.admin.invoice.class">Sonata\InvoiceBundle\Admin\InvoiceAdmin</parameter>
    <parameter key="sonata.invoice.invoice.class">Application\Sonata\InvoiceBundle\Entity\Invoice</parameter>
    <parameter key="sonata.invoice.invoice_element.class">Application\Sonata\InvoiceBundle\Entity\InvoiceElement</parameter>
    <parameter key="sonata.invoice.admin.invoice.entity">Application\Sonata\InvoiceBundle\Entity\Invoice</parameter>
    <parameter key="sonata.invoice.admin.invoice_element.entity">Application\Sonata\InvoiceBundle\Entity\InvoiceElement</parameter>
    <parameter key="sonata.order.order.manager.class">Sonata\OrderBundle\Entity\OrderManager</parameter>
    <parameter key="sonata.order.order_element.manager.class">Sonata\OrderBundle\Entity\OrderElementManager</parameter>
    <parameter key="sonata.order.admin.order.class">Sonata\OrderBundle\Admin\OrderAdmin</parameter>
    <parameter key="sonata.order.admin.order.controller">SonataOrderBundle:OrderCRUD</parameter>
    <parameter key="sonata.order.admin.order_element.class">Sonata\OrderBundle\Admin\OrderElementAdmin</parameter>
    <parameter key="sonata.order.admin.order_element.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.order.block.breadcrumb_order.class">Sonata\OrderBundle\Block\Breadcrumb\UserOrderBreadcrumbBlockService</parameter>
    <parameter key="sonata.order.order.class">Application\Sonata\OrderBundle\Entity\Order</parameter>
    <parameter key="sonata.order.order_element.class">Application\Sonata\OrderBundle\Entity\OrderElement</parameter>
    <parameter key="sonata.order.admin.order.entity">Application\Sonata\OrderBundle\Entity\Order</parameter>
    <parameter key="sonata.order.admin.order_element.entity">Application\Sonata\OrderBundle\Entity\OrderElement</parameter>
    <parameter key="sonata.payment.consumer.order_process.class">Sonata\PaymentBundle\Consumer\PaymentProcessOrderConsumer</parameter>
    <parameter key="sonata.payment.consumer.order_element_process.class">Sonata\PaymentBundle\Consumer\PaymentProcessOrderElementConsumer</parameter>
    <parameter key="sonata.transaction.manager.class">Sonata\PaymentBundle\Entity\TransactionManager</parameter>
    <parameter key="sonata.payment.pool.class">Sonata\Component\Payment\Pool</parameter>
    <parameter key="sonata.payment.handler.class">Sonata\Component\Payment\PaymentHandler</parameter>
    <parameter key="sonata.payment.method.paypal.class">Sonata\Component\Payment\Paypal</parameter>
    <parameter key="sonata.payment.method.check.class">Sonata\Component\Payment\CheckPayment</parameter>
    <parameter key="sonata.payment.method.pass.class">Sonata\Component\Payment\PassPayment</parameter>
    <parameter key="sonata.payment.method.scellius.class">Sonata\Component\Payment\Scellius\ScelliusPayment</parameter>
    <parameter key="sonata.payment.provider.scellius.none_generator.class">Sonata\Component\Payment\Scellius\NodeScelliusTransactionGenerator</parameter>
    <parameter key="sonata.payment.provider.scellius.order_generator.class">Sonata\Component\Payment\Scellius\OrderScelliusTransactionGenerator</parameter>
    <parameter key="sonata.payment.method.debug.class">Sonata\Component\Payment\Debug\DebugPayment</parameter>
    <parameter key="sonata.payment.method.ogone.class">Sonata\Component\Payment\Ogone\OgonePayment</parameter>
    <parameter key="sonata.payment.generator.mysql.class">Sonata\Component\Generator\MysqlReference</parameter>
    <parameter key="sonata.basket_transformer.class">Sonata\Component\Transformer\BasketTransformer</parameter>
    <parameter key="sonata.invoice_transformer.class">Sonata\Component\Transformer\InvoiceTransformer</parameter>
    <parameter key="sonata.payment.transaction.class">Application\Sonata\PaymentBundle\Entity\Transaction</parameter>
    <parameter key="sonata.product.pool.class">Sonata\Component\Product\Pool</parameter>
    <parameter key="sonata.product.subscriber.orm.class">Sonata\Component\Subscriber\ORMInheritanceSubscriber</parameter>
    <parameter key="sonata.product.seo_iterator.class">Sonata\Component\Product\SeoProductIterator</parameter>
    <parameter key="sonata.product.finder.class">Sonata\Component\Product\ProductFinder</parameter>
    <parameter key="sonata.product.seo.twitter.class">Sonata\ProductBundle\Seo\Services\Twitter</parameter>
    <parameter key="sonata.product.seo.product.site">@sonataproject</parameter>
    <parameter key="sonata.product.seo.product.creator">@th0masr</parameter>
    <parameter key="sonata.product.seo.product.domain">http://demo.sonata-project.org</parameter>
    <parameter key="sonata.product.seo.product.media_prefix">http://demo.sonata-project.org</parameter>
    <parameter key="sonata.product.seo.product.media_format">reference</parameter>
    <parameter key="sonata.product.seo.facebook.class">Sonata\ProductBundle\Seo\Services\Facebook</parameter>
    <parameter key="sonata.delivery.manager.class">Sonata\ProductBundle\Entity\DeliveryManager</parameter>
    <parameter key="sonata.package.manager.class">Sonata\ProductBundle\Entity\PackageManager</parameter>
    <parameter key="sonata.product.set.manager.class">Sonata\ProductBundle\Entity\ProductSetManager</parameter>
    <parameter key="sonata.product_category.manager.class">Sonata\ProductBundle\Entity\ProductCategoryManager</parameter>
    <parameter key="sonata.product_collection.manager.class">Sonata\ProductBundle\Entity\ProductCollectionManager</parameter>
    <parameter key="sonata.product.admin.product.class">Sonata\ProductBundle\Admin\ProductAdmin</parameter>
    <parameter key="sonata.product.admin.product.controller">SonataProductBundle:ProductAdmin</parameter>
    <parameter key="sonata.product.admin.product.variation.class">Sonata\ProductBundle\Admin\ProductVariationAdmin</parameter>
    <parameter key="sonata.product.admin.product.variation.controller">SonataProductBundle:ProductVariationAdmin</parameter>
    <parameter key="sonata.product.admin.product_category.class">Sonata\ProductBundle\Admin\ProductCategoryAdmin</parameter>
    <parameter key="sonata.product.admin.product_category.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.product.admin.product_collection.class">Sonata\ProductBundle\Admin\ProductCollectionAdmin</parameter>
    <parameter key="sonata.product.admin.product_collection.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.product.admin.delivery.class">Sonata\ProductBundle\Admin\DeliveryAdmin</parameter>
    <parameter key="sonata.product.admin.delivery.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.product.admin.product.manager">Sonata\ProductBundle\Model\DoctrineModelManager</parameter>
    <parameter key="sonata.product.product.class">Application\Sonata\ProductBundle\Entity\Product</parameter>
    <parameter key="sonata.product.package.class">Application\Sonata\ProductBundle\Entity\Package</parameter>
    <parameter key="sonata.product.product_category.class">Application\Sonata\ProductBundle\Entity\ProductCategory</parameter>
    <parameter key="sonata.product.product_collection.class">Application\Sonata\ProductBundle\Entity\ProductCollection</parameter>
    <parameter key="sonata.product.category.class">Application\Sonata\ClassificationBundle\Entity\Category</parameter>
    <parameter key="sonata.product.collection.class">Application\Sonata\ClassificationBundle\Entity\Collection</parameter>
    <parameter key="sonata.product.delivery.class">Application\Sonata\ProductBundle\Entity\Delivery</parameter>
    <parameter key="sonata.product.admin.product.entity">Application\Sonata\ProductBundle\Entity\Product</parameter>
    <parameter key="sonata.product.admin.package.entity">Application\Sonata\ProductBundle\Entity\Package</parameter>
    <parameter key="sonata.product.admin.product_category.entity">Application\Sonata\ProductBundle\Entity\ProductCategory</parameter>
    <parameter key="sonata.product.admin.product_collection.entity">Application\Sonata\ProductBundle\Entity\ProductCollection</parameter>
    <parameter key="sonata.product.admin.category.entity">Application\Sonata\ClassificationBundle\Entity\Category</parameter>
    <parameter key="sonata.product.admin.collection.entity">Application\Sonata\ClassificationBundle\Entity\Collection</parameter>
    <parameter key="sonata.product.admin.delivery.entity">Application\Sonata\ProductBundle\Entity\Delivery</parameter>
    <parameter key="sonata.price.currency.detector.class">Sonata\Component\Currency\CurrencyDetector</parameter>
    <parameter key="sonata.price.currency.manager.class">Sonata\Component\Currency\CurrencyManager</parameter>
    <parameter key="sonata.price.currency.calculator.class">Sonata\Component\Currency\CurrencyPriceCalculator</parameter>
    <parameter key="sonata.price.currency.data_transformer.class">Sonata\Component\Currency\CurrencyDataTransformer</parameter>
    <parameter key="sonata.price.currency.form_type.class">Sonata\Component\Currency\CurrencyFormType</parameter>
    <parameter key="sonata.price.currency">EUR</parameter>
    <parameter key="sonata.price.precision">3</parameter>
    <parameter key="jms_serializer.metadata.file_locator.class">Metadata\Driver\FileLocator</parameter>
    <parameter key="jms_serializer.metadata.annotation_driver.class">JMS\Serializer\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_serializer.metadata.chain_driver.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="jms_serializer.metadata.yaml_driver.class">JMS\Serializer\Metadata\Driver\YamlDriver</parameter>
    <parameter key="jms_serializer.metadata.xml_driver.class">JMS\Serializer\Metadata\Driver\XmlDriver</parameter>
    <parameter key="jms_serializer.metadata.php_driver.class">JMS\Serializer\Metadata\Driver\PhpDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrineTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_phpcr_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_serializer.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_serializer.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_serializer.event_dispatcher.class">JMS\Serializer\EventDispatcher\LazyEventDispatcher</parameter>
    <parameter key="jms_serializer.camel_case_naming_strategy.class">JMS\Serializer\Naming\CamelCaseNamingStrategy</parameter>
    <parameter key="jms_serializer.serialized_name_annotation_strategy.class">JMS\Serializer\Naming\SerializedNameAnnotationStrategy</parameter>
    <parameter key="jms_serializer.cache_naming_strategy.class">JMS\Serializer\Naming\CacheNamingStrategy</parameter>
    <parameter key="jms_serializer.doctrine_object_constructor.class">JMS\Serializer\Construction\DoctrineObjectConstructor</parameter>
    <parameter key="jms_serializer.unserialize_object_constructor.class">JMS\Serializer\Construction\UnserializeObjectConstructor</parameter>
    <parameter key="jms_serializer.version_exclusion_strategy.class">JMS\Serializer\Exclusion\VersionExclusionStrategy</parameter>
    <parameter key="jms_serializer.serializer.class">JMS\Serializer\Serializer</parameter>
    <parameter key="jms_serializer.twig_extension.class">JMS\Serializer\Twig\SerializerExtension</parameter>
    <parameter key="jms_serializer.templating.helper.class">JMS\SerializerBundle\Templating\SerializerHelper</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.class">JMS\Serializer\JsonSerializationVisitor</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.options">0</parameter>
    <parameter key="jms_serializer.json_deserialization_visitor.class">JMS\Serializer\JsonDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_serialization_visitor.class">JMS\Serializer\XmlSerializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.class">JMS\Serializer\XmlDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.doctype_whitelist" type="collection"/>
    <parameter key="jms_serializer.yaml_serialization_visitor.class">JMS\Serializer\YamlSerializationVisitor</parameter>
    <parameter key="jms_serializer.handler_registry.class">JMS\Serializer\Handler\LazyHandlerRegistry</parameter>
    <parameter key="jms_serializer.datetime_handler.class">JMS\Serializer\Handler\DateHandler</parameter>
    <parameter key="jms_serializer.array_collection_handler.class">JMS\Serializer\Handler\ArrayCollectionHandler</parameter>
    <parameter key="jms_serializer.php_collection_handler.class">JMS\Serializer\Handler\PhpCollectionHandler</parameter>
    <parameter key="jms_serializer.form_error_handler.class">JMS\Serializer\Handler\FormErrorHandler</parameter>
    <parameter key="jms_serializer.constraint_violation_handler.class">JMS\Serializer\Handler\ConstraintViolationHandler</parameter>
    <parameter key="jms_serializer.doctrine_proxy_subscriber.class">JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber</parameter>
    <parameter key="jms_serializer.stopwatch_subscriber.class">JMS\SerializerBundle\Serializer\StopwatchEventSubscriber</parameter>
    <parameter key="jms_serializer.infer_types_from_doctrine_metadata">true</parameter>
    <parameter key="fos_comment.model.thread.class">Application\Sonata\CommentBundle\Entity\Thread</parameter>
    <parameter key="fos_comment.model.comment.class">Application\Sonata\CommentBundle\Entity\Comment</parameter>
    <parameter key="fos_comment.model.vote.class">FOS\CommentBundle\Entity\Vote</parameter>
    <parameter key="fos_comment.manager.thread.default.class">FOS\CommentBundle\Entity\ThreadManager</parameter>
    <parameter key="fos_comment.manager.comment.default.class">FOS\CommentBundle\Entity\CommentManager</parameter>
    <parameter key="fos_comment.manager.vote.default.class">FOS\CommentBundle\Entity\VoteManager</parameter>
    <parameter key="fos_comment.listener.comment_vote_score.class">FOS\CommentBundle\EventListener\CommentVoteScoreListener</parameter>
    <parameter key="fos_comment.listener.thread_counters.class">FOS\CommentBundle\EventListener\ThreadCountersListener</parameter>
    <parameter key="fos_comment.listener.thread_permalink.class">FOS\CommentBundle\EventListener\ThreadPermalinkListener</parameter>
    <parameter key="fos_comment.listener.comment_blamer.class">FOS\CommentBundle\EventListener\CommentBlamerListener</parameter>
    <parameter key="fos_comment.listener.vote_blamer.class">FOS\CommentBundle\EventListener\VoteBlamerListener</parameter>
    <parameter key="fos_comment.listener.closed_threads.class">FOS\CommentBundle\EventListener\ClosedThreadListener</parameter>
    <parameter key="fos_comment.sorting_factory.class">FOS\CommentBundle\Sorting\SortingFactory</parameter>
    <parameter key="fos_comment.sorter.date.class">FOS\CommentBundle\Sorting\DateSorting</parameter>
    <parameter key="fos_comment.template.engine">twig</parameter>
    <parameter key="fos_comment.model_manager_name">null</parameter>
    <parameter key="fos_comment.form.comment.type">sonata_comment_comment</parameter>
    <parameter key="fos_comment.form.comment.name">fos_comment_comment</parameter>
    <parameter key="fos_comment.form.thread.type">fos_comment_thread</parameter>
    <parameter key="fos_comment.form.thread.name">fos_comment_thread</parameter>
    <parameter key="fos_comment.form.commentable_thread.type">fos_comment_commentable_thread</parameter>
    <parameter key="fos_comment.form.commentable_thread.name">fos_comment_commentable_thread</parameter>
    <parameter key="fos_comment.form.delete_comment.type">fos_comment_delete_comment</parameter>
    <parameter key="fos_comment.form.delete_comment.name">fos_comment_delete_comment</parameter>
    <parameter key="fos_comment.form.vote.type">fos_comment_vote</parameter>
    <parameter key="fos_comment.form.vote.name">fos_comment_vote</parameter>
    <parameter key="fos_comment.sorting_factory.default_sorter">date_desc</parameter>
    <parameter key="sonata.comment.admin.groupname">sonata_comment</parameter>
    <parameter key="sonata.comment.manager.comment.class">Sonata\CommentBundle\Manager\CommentManager</parameter>
    <parameter key="sonata.comment.manager.thread.class">Sonata\CommentBundle\Manager\ThreadManager</parameter>
    <parameter key="sonata.comment.block.thread.async.class">Sonata\CommentBundle\Block\CommentThreadAsyncBlockService</parameter>
    <parameter key="sonata.comment.admin.comment.class">Sonata\CommentBundle\Admin\Entity\CommentAdmin</parameter>
    <parameter key="sonata.comment.admin.thread.class">Sonata\CommentBundle\Admin\Entity\ThreadAdmin</parameter>
    <parameter key="sonata.comment.class.comment.entity">Application\Sonata\CommentBundle\Entity\Comment</parameter>
    <parameter key="sonata.comment.class.thread.entity">Application\Sonata\CommentBundle\Entity\Thread</parameter>
    <parameter key="sonata.comment.admin.comment.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.comment.admin.thread.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.comment.admin.comment.translation_domain">SonataCommentBundle</parameter>
    <parameter key="sonata.comment.admin.thread.translation_domain">SonataCommentBundle</parameter>
    <parameter key="sonata.comment.class.comment.signed">false</parameter>
    <parameter key="sonata.core.flashmessage.manager.class">Sonata\CoreBundle\FlashMessage\FlashManager</parameter>
    <parameter key="sonata.core.twig.extension.flashmessage.class">Sonata\CoreBundle\Twig\Extension\FlashMessageExtension</parameter>
    <parameter key="sonata.core.form_type">standard</parameter>
    <parameter key="sonata.intl.locale_detector.request.class">Sonata\IntlBundle\Locale\RequestDetector</parameter>
    <parameter key="sonata.intl.locale_detector.session.class">Sonata\IntlBundle\Locale\SessionDetector</parameter>
    <parameter key="sonata.intl.templating.helper.locale.class">Sonata\IntlBundle\Templating\Helper\LocaleHelper</parameter>
    <parameter key="sonata.intl.templating.helper.number.class">Sonata\IntlBundle\Templating\Helper\NumberHelper</parameter>
    <parameter key="sonata.intl.templating.helper.datetime.class">Sonata\IntlBundle\Templating\Helper\DateTimeHelper</parameter>
    <parameter key="sonata.intl.timezone_detector.chain.class">Sonata\IntlBundle\Timezone\ChainTimezoneDetector</parameter>
    <parameter key="sonata.intl.timezone_detector.user.class">Sonata\IntlBundle\Timezone\UserBasedTimezoneDetector</parameter>
    <parameter key="sonata.intl.timezone_detector.locale.class">Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector</parameter>
    <parameter key="sonata.intl.twig.helper.locale.class">Sonata\IntlBundle\Twig\Extension\LocaleExtension</parameter>
    <parameter key="sonata.intl.twig.helper.number.class">Sonata\IntlBundle\Twig\Extension\NumberExtension</parameter>
    <parameter key="sonata.intl.twig.helper.datetime.class">Sonata\IntlBundle\Twig\Extension\DateTimeExtension</parameter>
    <parameter key="sonata_intl.timezone.detectors" type="collection">
      <parameter>sonata.intl.timezone_detector.user</parameter>
      <parameter>sonata.intl.timezone_detector.locale</parameter>
    </parameter>
    <parameter key="sonata.formatter.text.markdown.class">Sonata\FormatterBundle\Formatter\MarkdownFormatter</parameter>
    <parameter key="sonata.formatter.text.text.class">Sonata\FormatterBundle\Formatter\TextFormatter</parameter>
    <parameter key="sonata.formatter.text.raw.class">Sonata\FormatterBundle\Formatter\RawFormatter</parameter>
    <parameter key="sonata.formatter.text.twigengine.class">Sonata\FormatterBundle\Formatter\TwigFormatter</parameter>
    <parameter key="sonata.formatter.block.formatter.class">Sonata\FormatterBundle\Block\FormatterBlockService</parameter>
    <parameter key="sonata.formatter.ckeditor.extension.class">Sonata\FormatterBundle\Admin\CkeditorAdminExtension</parameter>
    <parameter key="sonata.formatter.ckeditor.configuration.templates" type="collection">
      <parameter key="browser">SonataFormatterBundle:Ckeditor:browser.html.twig</parameter>
      <parameter key="upload">SonataFormatterBundle:Ckeditor:upload.html.twig</parameter>
    </parameter>
    <parameter key="sonata.block.service.container.class">Sonata\BlockBundle\Block\Service\ContainerBlockService</parameter>
    <parameter key="sonata.block.service.empty.class">Sonata\BlockBundle\Block\Service\EmptyBlockService</parameter>
    <parameter key="sonata.block.service.text.class">Sonata\BlockBundle\Block\Service\TextBlockService</parameter>
    <parameter key="sonata.block.service.rss.class">Sonata\BlockBundle\Block\Service\RssBlockService</parameter>
    <parameter key="sonata.block.service.menu.class">Sonata\BlockBundle\Block\Service\MenuBlockService</parameter>
    <parameter key="sonata.block.service.template.class">Sonata\BlockBundle\Block\Service\TemplateBlockService</parameter>
    <parameter key="sonata.block.exception.strategy.manager.class">Sonata\BlockBundle\Exception\Strategy\StrategyManager</parameter>
    <parameter key="sonata.block.container.types" type="collection">
      <parameter>sonata.block.service.container</parameter>
      <parameter>sonata.page.block.container</parameter>
      <parameter>cmf.block.container</parameter>
      <parameter>cmf.block.slideshow</parameter>
    </parameter>
    <parameter key="sonata_block.blocks" type="collection">
      <parameter key="sonata.admin.block.admin_list" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.block.search_result" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.text" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.container" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.rss" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.menu" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.template" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.page.block.container" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.page.block.children_pages" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.page.block.breadcrumb" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.media.block.media" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.media.block.gallery" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.media.block.feature_media" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.news.block.recent_comments" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.news.block.recent_posts" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.order.block.recent_orders" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.product.block.recent_products" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.product.block.similar_products" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.product.block.categories_menu" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.product.block.filters_menu" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.product.block.variations_form" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.customer.block.recent_customers" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.basket.block.nb_items" type="collection">
        <parameter key="cache">sonata.page.cache.js_async</parameter>
        <parameter key="contexts" type="collection">
          <parameter>user</parameter>
        </parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.timeline.block.timeline" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.account" type="collection">
        <parameter key="cache">sonata.page.cache.js_async</parameter>
        <parameter key="contexts" type="collection">
          <parameter>user</parameter>
        </parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.menu" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>user</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.email.share_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.facebook.like_box" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.facebook.like_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.facebook.send_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.facebook.share_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.pinterest.pin_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.twitter.share_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.twitter.follow_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.twitter.hashtag_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.twitter.mention_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.twitter.embed" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.demo.block.newsletter" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.formatter.block.formatter" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.breadcrumb.homepage" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata_block.blocks_by_class" type="collection"/>
    <parameter key="sonata_block.cache_blocks" type="collection">
      <parameter key="by_type" type="collection">
        <parameter key="sonata.admin.block.admin_list">sonata.cache.noop</parameter>
        <parameter key="sonata.admin.block.search_result">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.text">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.container">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.rss">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.menu">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.template">sonata.cache.noop</parameter>
        <parameter key="sonata.page.block.container">sonata.cache.noop</parameter>
        <parameter key="sonata.page.block.children_pages">sonata.cache.noop</parameter>
        <parameter key="sonata.page.block.breadcrumb">sonata.cache.noop</parameter>
        <parameter key="sonata.media.block.media">sonata.cache.noop</parameter>
        <parameter key="sonata.media.block.gallery">sonata.cache.noop</parameter>
        <parameter key="sonata.media.block.feature_media">sonata.cache.noop</parameter>
        <parameter key="sonata.news.block.recent_comments">sonata.cache.noop</parameter>
        <parameter key="sonata.news.block.recent_posts">sonata.cache.noop</parameter>
        <parameter key="sonata.order.block.recent_orders">sonata.cache.noop</parameter>
        <parameter key="sonata.product.block.recent_products">sonata.cache.noop</parameter>
        <parameter key="sonata.product.block.similar_products">sonata.cache.noop</parameter>
        <parameter key="sonata.product.block.categories_menu">sonata.cache.noop</parameter>
        <parameter key="sonata.product.block.filters_menu">sonata.cache.noop</parameter>
        <parameter key="sonata.product.block.variations_form">sonata.cache.noop</parameter>
        <parameter key="sonata.customer.block.recent_customers">sonata.cache.noop</parameter>
        <parameter key="sonata.basket.block.nb_items">sonata.page.cache.js_async</parameter>
        <parameter key="sonata.timeline.block.timeline">sonata.cache.noop</parameter>
        <parameter key="sonata.user.block.account">sonata.page.cache.js_async</parameter>
        <parameter key="sonata.user.block.menu">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.email.share_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.facebook.like_box">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.facebook.like_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.facebook.send_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.facebook.share_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.pinterest.pin_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.twitter.share_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.twitter.follow_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.twitter.hashtag_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.twitter.mention_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.twitter.embed">sonata.cache.noop</parameter>
        <parameter key="sonata.demo.block.newsletter">sonata.cache.noop</parameter>
        <parameter key="sonata.formatter.block.formatter">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.breadcrumb.homepage">sonata.cache.noop</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.seo.block.social.container.class">Sonata\SeoBundle\Block\Social\SocialBlockContainer</parameter>
    <parameter key="sonata.seo.block.email.share_button.class">Sonata\SeoBundle\Block\Social\EmailShareButtonBlockService</parameter>
    <parameter key="sonata.seo.block.facebook.like_box.class">Sonata\SeoBundle\Block\Social\FacebookLikeBoxBlockService</parameter>
    <parameter key="sonata.seo.block.facebook.like_button.class">Sonata\SeoBundle\Block\Social\FacebookLikeButtonBlockService</parameter>
    <parameter key="sonata.seo.block.facebook.send_button.class">Sonata\SeoBundle\Block\Social\FacebookSendButtonBlockService</parameter>
    <parameter key="sonata.seo.block.facebook.share_button.class">Sonata\SeoBundle\Block\Social\FacebookShareButtonBlockService</parameter>
    <parameter key="sonata.seo.block.twitter.share_button.class">Sonata\SeoBundle\Block\Social\TwitterShareButtonBlockService</parameter>
    <parameter key="sonata.seo.block.twitter.follow_button.class">Sonata\SeoBundle\Block\Social\TwitterFollowButtonBlockService</parameter>
    <parameter key="sonata.seo.block.twitter.hashtag_button.class">Sonata\SeoBundle\Block\Social\TwitterHashtagButtonBlockService</parameter>
    <parameter key="sonata.seo.block.twitter.mention_button.class">Sonata\SeoBundle\Block\Social\TwitterMentionButtonBlockService</parameter>
    <parameter key="sonata.seo.block.twitter.embed.class">Sonata\SeoBundle\Block\Social\TwitterEmbedTweetBlockService</parameter>
    <parameter key="sonata.seo.block.pinterest.pin_button.class">Sonata\SeoBundle\Block\Social\PinterestPinButtonBlockService</parameter>
    <parameter key="sonata.seo.block.breadcrumb.homepage.class">Sonata\SeoBundle\Block\Breadcrumb\HomepageBreadcrumbBlockService</parameter>
    <parameter key="sonata.seo.exporter.database_source_iterator.class">Exporter\Source\DoctrineDBALConnectionSourceIterator</parameter>
    <parameter key="sonata.seo.exporter.sitemap_source_iterator.class">Exporter\Source\SymfonySitemapSourceIterator</parameter>
    <parameter key="sonata.seo.page.default.class">Sonata\SeoBundle\Seo\SeoPage</parameter>
    <parameter key="sonata.seo.twig.extension.class">Sonata\SeoBundle\Twig\Extension\SeoExtension</parameter>
    <parameter key="sonata.seo.sitemap.manager.class">Sonata\SeoBundle\Sitemap\SourceManager</parameter>
    <parameter key="sonata.classification.manager.category.class">Sonata\ClassificationBundle\Entity\CategoryManager</parameter>
    <parameter key="sonata.classification.manager.tag.class">Sonata\ClassificationBundle\Entity\TagManager</parameter>
    <parameter key="sonata.classification.manager.collection.class">Sonata\ClassificationBundle\Entity\CollectionManager</parameter>
    <parameter key="sonata.classification.admin.tag.entity">Application\Sonata\ClassificationBundle\Entity\Tag</parameter>
    <parameter key="sonata.classification.admin.category.entity">Application\Sonata\ClassificationBundle\Entity\Category</parameter>
    <parameter key="sonata.classification.admin.collection.entity">Application\Sonata\ClassificationBundle\Entity\Collection</parameter>
    <parameter key="sonata.classification.manager.tag.entity">Application\Sonata\ClassificationBundle\Entity\Tag</parameter>
    <parameter key="sonata.classification.manager.category.entity">Application\Sonata\ClassificationBundle\Entity\Category</parameter>
    <parameter key="sonata.classification.manager.collection.entity">Application\Sonata\ClassificationBundle\Entity\Collection</parameter>
    <parameter key="sonata.classification.admin.category.class">Sonata\ClassificationBundle\Admin\CategoryAdmin</parameter>
    <parameter key="sonata.classification.admin.category.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.classification.admin.category.translation_domain">SonataClassificationBundle</parameter>
    <parameter key="sonata.classification.admin.tag.class">Sonata\ClassificationBundle\Admin\TagAdmin</parameter>
    <parameter key="sonata.classification.admin.tag.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.classification.admin.tag.translation_domain">SonataClassificationBundle</parameter>
    <parameter key="sonata.classification.admin.collection.class">Sonata\ClassificationBundle\Admin\CollectionAdmin</parameter>
    <parameter key="sonata.classification.admin.collection.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.classification.admin.collection.translation_domain">SonataClassificationBundle</parameter>
    <parameter key="sonata.notification.backend">sonata.notification.backend.postpone</parameter>
    <parameter key="sonata.notification.message.class">Application\Sonata\NotificationBundle\Entity\Message</parameter>
    <parameter key="sonata.notification.admin.message.entity">Application\Sonata\NotificationBundle\Entity\Message</parameter>
    <parameter key="sonata.notification.manager.message.entity">Application\Sonata\NotificationBundle\Entity\Message</parameter>
    <parameter key="sonata.notification.event.iteration_listeners" type="collection">
      <parameter>sonata.notification.event.doctrine_optimize</parameter>
    </parameter>
    <parameter key="sonata.notification.admin.message.class">Sonata\NotificationBundle\Admin\MessageAdmin</parameter>
    <parameter key="sonata.notification.admin.message.controller">SonataNotificationBundle:MessageAdmin</parameter>
    <parameter key="sonata.notification.admin.message.translation_domain">SonataNotificationBundle</parameter>
    <parameter key="cmf_routing.chain_router.class">Symfony\Cmf\Component\Routing\ChainRouter</parameter>
    <parameter key="cmf_routing.replace_symfony_router">true</parameter>
    <parameter key="cmf_routing.route_type_type.class">Symfony\Cmf\Bundle\RoutingBundle\Form\Type\RouteTypeType</parameter>
    <parameter key="spy_timeline.filter.manager.class">Spy\Timeline\Filter\FilterManager</parameter>
    <parameter key="spy_timeline.filter.duplicate_key.class">Spy\Timeline\Filter\DuplicateKey</parameter>
    <parameter key="spy_timeline.filter.data_hydrator.class">Spy\Timeline\Filter\DataHydrator</parameter>
    <parameter key="spy_timeline.filter.data_hydrator.locator.doctrine_orm.class">Spy\TimelineBundle\Filter\DataHydrator\Locator\DoctrineORM</parameter>
    <parameter key="spy_timeline.filter.data_hydrator.locator.doctrine_odm.class">Spy\TimelineBundle\Filter\DataHydrator\Locator\DoctrineODM</parameter>
    <parameter key="spy_timeline.unread_notifications.class">Spy\Timeline\Notification\Unread\UnreadNotificationManager</parameter>
    <parameter key="spy_timeline.paginator.knp.class">Spy\Timeline\ResultBuilder\Pager\KnpPager</parameter>
    <parameter key="spy_timeline.resolve_component.doctrine.class">Spy\TimelineBundle\ResolveComponent\DoctrineComponentDataResolver</parameter>
    <parameter key="spy_timeline.resolve_component.basic.class">Spy\Timeline\ResolveComponent\BasicComponentDataResolver</parameter>
    <parameter key="spy_timeline.result_builder.class">Spy\Timeline\ResultBuilder\ResultBuilder</parameter>
    <parameter key="spy_timeline.spread.deployer.class">Spy\Timeline\Spread\Deployer</parameter>
    <parameter key="spy_timeline.spread.entry_collection.class">Spy\Timeline\Spread\Entry\EntryCollection</parameter>
    <parameter key="spy_timeline.class.timeline">Application\Sonata\TimelineBundle\Entity\Timeline</parameter>
    <parameter key="spy_timeline.class.action">Application\Sonata\TimelineBundle\Entity\Action</parameter>
    <parameter key="spy_timeline.class.component">Application\Sonata\TimelineBundle\Entity\Component</parameter>
    <parameter key="spy_timeline.class.action_component">Application\Sonata\TimelineBundle\Entity\ActionComponent</parameter>
    <parameter key="spy_timeline.timeline_manager.orm.class">Spy\TimelineBundle\Driver\ORM\TimelineManager</parameter>
    <parameter key="spy_timeline.action_manager.orm.class">Spy\TimelineBundle\Driver\ORM\ActionManager</parameter>
    <parameter key="spy_timeline.pager.orm.class">Spy\TimelineBundle\Driver\ORM\Pager</parameter>
    <parameter key="spy_timeline.query_executor.orm.class">Spy\TimelineBundle\Driver\ORM\QueryExecutor</parameter>
    <parameter key="spy_timeline.query_builder.class">Spy\TimelineBundle\Driver\ORM\QueryBuilder\QueryBuilder</parameter>
    <parameter key="spy_timeline.filter.data_hydrator.locators_config" type="collection">
      <parameter>spy_timeline.filter.data_hydrator.locator.doctrine_orm</parameter>
    </parameter>
    <parameter key="spy_timeline.spread.deployer.delivery">immediate</parameter>
    <parameter key="spy_timeline.spread.on_subject">true</parameter>
    <parameter key="spy_timeline.spread.on_global_context">true</parameter>
    <parameter key="spy_timeline.spread.deployer.batch_size">50</parameter>
    <parameter key="spy_timeline.render.path">SpyTimelineBundle:Timeline</parameter>
    <parameter key="spy_timeline.render.fallback">SpyTimelineBundle:Timeline:default.html.twig</parameter>
    <parameter key="spy_timeline.render.i18n.fallback">null</parameter>
    <parameter key="spy_timeline.twig.resources" type="collection">
      <parameter>SpyTimelineBundle:Action:components.html.twig</parameter>
    </parameter>
    <parameter key="spy_timeline.query_builder.factory.class">Spy\Timeline\Driver\QueryBuilder\QueryBuilderFactory</parameter>
    <parameter key="spy_timeline.query_builder.asserter.class">Spy\Timeline\Driver\QueryBuilder\Criteria\Asserter</parameter>
    <parameter key="spy_timeline.query_builder.operator.class">Spy\Timeline\Driver\QueryBuilder\Criteria\Operator</parameter>
    <parameter key="spy_timeline.resolve_component.doctrine_registries">true</parameter>
    <parameter key="sonata.timeline.admin.timeline.entity">Application\Sonata\TimelineBundle\Entity\Timeline</parameter>
    <parameter key="sonata.timeline.admin.action.entity">Application\Sonata\TimelineBundle\Entity\Action</parameter>
    <parameter key="sonata.timeline.admin.actioncomponent.entity">Application\Sonata\TimelineBundle\Entity\ActionComponent</parameter>
    <parameter key="sonata.timeline.admin.component.entity">Application\Sonata\TimelineBundle\Entity\Component</parameter>
    <parameter key="mopa_bootstrap.twig.extension.form.class">Mopa\Bundle\BootstrapBundle\Twig\FormExtension</parameter>
    <parameter key="mopa_bootstrap.twig.extension.icon.class">Mopa\Bundle\BootstrapBundle\Twig\IconExtension</parameter>
    <parameter key="mopa_bootstrap.bootstrap.install_path">Resources/public/bootstrap</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.button.class">Mopa\Bundle\BootstrapBundle\Form\Extension\IconButtonExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.help.class">Mopa\Bundle\BootstrapBundle\Form\Extension\HelpFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.legend.class">Mopa\Bundle\BootstrapBundle\Form\Extension\LegendFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.error.class">Mopa\Bundle\BootstrapBundle\Form\Extension\ErrorTypeFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.widget.class">Mopa\Bundle\BootstrapBundle\Form\Extension\WidgetFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.horizontal.class">Mopa\Bundle\BootstrapBundle\Form\Extension\HorizontalFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.widget_collection.class">Mopa\Bundle\BootstrapBundle\Form\Extension\WidgetCollectionFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.date.class">Mopa\Bundle\BootstrapBundle\Form\Extension\DateTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.tabbed.class">Mopa\Bundle\BootstrapBundle\Form\Extension\TabbedFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type.tab.class">Mopa\Bundle\BootstrapBundle\Form\Type\TabType</parameter>
    <parameter key="mopa_bootstrap.form.show_legend">false</parameter>
    <parameter key="mopa_bootstrap.form.render_optional_text">false</parameter>
    <parameter key="mopa_bootstrap.form.render_required_asterisk">true</parameter>
    <parameter key="mopa_bootstrap.form.templating">MopaBootstrapBundle:Form:fields.html.twig</parameter>
    <parameter key="mopa_bootstrap.form.horizontal_label_class">col-lg-3 control-label</parameter>
    <parameter key="mopa_bootstrap.form.horizontal_label_offset_class">col-lg-offset-3</parameter>
    <parameter key="mopa_bootstrap.form.horizontal_input_wrapper_class">col-lg-9</parameter>
    <parameter key="mopa_bootstrap.form.render_fieldset">true</parameter>
    <parameter key="mopa_bootstrap.form.render_collection_item">true</parameter>
    <parameter key="mopa_bootstrap.form.show_child_legend">false</parameter>
    <parameter key="mopa_bootstrap.form.checkbox_label">both</parameter>
    <parameter key="mopa_bootstrap.form.error_type">null</parameter>
    <parameter key="mopa_bootstrap.form.tabs.class">nav nav-tabs</parameter>
    <parameter key="mopa_bootstrap.form.help_widget.popover" type="collection">
      <parameter key="title">null</parameter>
      <parameter key="content">null</parameter>
      <parameter key="trigger">hover</parameter>
      <parameter key="toggle">popover</parameter>
      <parameter key="placement">right</parameter>
    </parameter>
    <parameter key="mopa_bootstrap.form.help_label.tooltip" type="collection">
      <parameter key="title">null</parameter>
      <parameter key="text">null</parameter>
      <parameter key="icon">info-sign</parameter>
      <parameter key="placement">top</parameter>
    </parameter>
    <parameter key="mopa_bootstrap.form.help_label.popover" type="collection">
      <parameter key="title">null</parameter>
      <parameter key="content">null</parameter>
      <parameter key="text">null</parameter>
      <parameter key="icon">info-sign</parameter>
      <parameter key="placement">top</parameter>
    </parameter>
    <parameter key="mopa_bootstrap.form.collection.widget_remove_btn" type="collection">
      <parameter key="attr" type="collection">
        <parameter key="class">btn btn-default</parameter>
      </parameter>
      <parameter key="label">remove_item</parameter>
      <parameter key="icon">null</parameter>
      <parameter key="icon_color">null</parameter>
    </parameter>
    <parameter key="mopa_bootstrap.form.collection.widget_add_btn" type="collection">
      <parameter key="attr" type="collection">
        <parameter key="class">btn btn-default</parameter>
      </parameter>
      <parameter key="label">add_item</parameter>
      <parameter key="icon">null</parameter>
      <parameter key="icon_color">null</parameter>
    </parameter>
    <parameter key="mopa_bootstrap.icons.icon_set">glyphicons</parameter>
    <parameter key="mopa_bootstrap.icons.shortcut">icon</parameter>
    <parameter key="web_profiler.controller.profiler.class">Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController</parameter>
    <parameter key="web_profiler.controller.router.class">Symfony\Bundle\WebProfilerBundle\Controller\RouterController</parameter>
    <parameter key="web_profiler.controller.exception.class">Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController</parameter>
    <parameter key="twig.extension.webprofiler.class">Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension</parameter>
    <parameter key="web_profiler.debug_toolbar.position">bottom</parameter>
    <parameter key="web_profiler.debug_toolbar.class">Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="faker.generator.class">Faker\Factory</parameter>
    <parameter key="faker.populator.class">Faker\ORM\Propel\Populator</parameter>
    <parameter key="faker.entity.class">Faker\ORM\Propel\EntityPopulator</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="sonata.block.data_collector" type="collection">
        <parameter>block</parameter>
        <parameter>SonataBlockBundle:Profiler:block.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection"/>
    <parameter key="nelmio_api_doc.parser.form_type_parser.class">Nelmio\ApiDocBundle\Parser\FormTypeParser</parameter>
    <parameter key="nelmio_api_doc.parser.validation_parser.class">Nelmio\ApiDocBundle\Parser\ValidationParser</parameter>
    <parameter key="nelmio_api_doc.parser.jms_metadata_parser.class">Nelmio\ApiDocBundle\Parser\JmsMetadataParser</parameter>
  </parameters>
  <services>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument>en</argument>
      <argument type="service" id="cmf_routing.router" on-invalid="ignore"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="20"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/var/www/sonata-3/app/Resources</argument>
              </service>
            </argument>
            <argument type="service" id="templating.locator"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="10"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="cmf_routing.router"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="service_container"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/var/www/sonata-3/app/Resources</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="doctrine"/>
          </service>
        </argument>
        <argument type="service" id="sonata.admin.route.cache_warmup"/>
      </argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection"/>
    </service>
    <service id="request" scope="request" synthetic="true" synchronized="true"/>
    <service id="service_container" synthetic="true"/>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/var/www/sonata-3/app/Resources</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\Fragment\FragmentHandler">
      <argument type="collection"/>
      <argument>true</argument>
      <argument type="service" id="request_stack"/>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.inline"/>
      </call>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.hinclude"/>
      </call>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.esi"/>
      </call>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.ssi"/>
      </call>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Bundle\FrameworkBundle\Fragment\ContainerAwareHIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.ssi" class="Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\Translation\MessageSelector" public="false"/>
      </argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/sonata-3/app/cache/dev/translations</argument>
        <argument key="debug">true</argument>
      </argument>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
        <argument>id</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
        <argument>cs</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
        <argument>cy</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
        <argument>mn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
        <argument>th</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
        <argument>sv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
        <argument>sr_Cyrl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
        <argument>vi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
        <argument>zh_TW</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
        <argument>sk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
        <argument>pt_BR</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
        <argument>de</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
        <argument>nl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
        <argument>he</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
        <argument>hu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
        <argument>fa</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
        <argument>ar</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nb.xlf</argument>
        <argument>nb</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
        <argument>uk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
        <argument>sr_Latn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
        <argument>hr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
        <argument>pt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
        <argument>gl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
        <argument>lb</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
        <argument>ru</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
        <argument>pl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
        <argument>tr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
        <argument>no</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
        <argument>ro</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
        <argument>lt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
        <argument>hy</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
        <argument>zh_CN</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
        <argument>da</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
        <argument>sl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
        <argument>el</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
        <argument>sq</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
        <argument>ja</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
        <argument>et</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
        <argument>bg</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
        <argument>ca</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
        <argument>fi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
        <argument>it</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
        <argument>es</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
        <argument>af</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
        <argument>eu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf</argument>
        <argument>az</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
        <argument>id</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
        <argument>cs</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
        <argument>mn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
        <argument>sv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
        <argument>sr_Cyrl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
        <argument>sk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
        <argument>pt_BR</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
        <argument>de</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
        <argument>nl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
        <argument>he</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
        <argument>hu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
        <argument>fa</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
        <argument>ar</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nb.xlf</argument>
        <argument>nb</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
        <argument>uk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
        <argument>sr_Latn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
        <argument>hr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
        <argument>pt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
        <argument>gl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
        <argument>lb</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
        <argument>ru</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
        <argument>pl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
        <argument>ro</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
        <argument>lt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
        <argument>hy</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
        <argument>zh_CN</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
        <argument>da</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
        <argument>sl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
        <argument>el</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
        <argument>ja</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
        <argument>et</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
        <argument>bg</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
        <argument>ca</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
        <argument>fi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
        <argument>it</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
        <argument>es</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
        <argument>lv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
        <argument>eu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf</argument>
        <argument>az</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_BR.xlf</argument>
        <argument>pt_BR</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pl.xlf</argument>
        <argument>pl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.it.xlf</argument>
        <argument>it</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ro.xlf</argument>
        <argument>ro</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.de.xlf</argument>
        <argument>de</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Cyrl.xlf</argument>
        <argument>sr_Cyrl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.en.xlf</argument>
        <argument>en</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fa.xlf</argument>
        <argument>fa</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ru.xlf</argument>
        <argument>ru</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_PT.xlf</argument>
        <argument>pt_PT</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.gl.xlf</argument>
        <argument>gl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sk.xlf</argument>
        <argument>sk</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.hu.xlf</argument>
        <argument>hu</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ua.xlf</argument>
        <argument>ua</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.da.xlf</argument>
        <argument>da</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.cs.xlf</argument>
        <argument>cs</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ar.xlf</argument>
        <argument>ar</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.az.xlf</argument>
        <argument>az</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.es.xlf</argument>
        <argument>es</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.tr.xlf</argument>
        <argument>tr</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sl.xlf</argument>
        <argument>sl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ca.xlf</argument>
        <argument>ca</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.nl.xlf</argument>
        <argument>nl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.no.xlf</argument>
        <argument>no</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.el.xlf</argument>
        <argument>el</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.lb.xlf</argument>
        <argument>lb</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Latn.xlf</argument>
        <argument>sr_Latn</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.he.xlf</argument>
        <argument>he</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sv.xlf</argument>
        <argument>sv</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fr.xlf</argument>
        <argument>fr</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.lv.yml</argument>
        <argument>lv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.lt.yml</argument>
        <argument>lt</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.sv.yml</argument>
        <argument>sv</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.cs.yml</argument>
        <argument>cs</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.es.yml</argument>
        <argument>es</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.de.yml</argument>
        <argument>de</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.ja.yml</argument>
        <argument>ja</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.da.yml</argument>
        <argument>da</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.en.yml</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.ja.yml</argument>
        <argument>ja</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.hu.yml</argument>
        <argument>hu</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.lv.yml</argument>
        <argument>lv</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.sk.yml</argument>
        <argument>sk</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.it.yml</argument>
        <argument>it</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.hr.yml</argument>
        <argument>hr</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.lt.yml</argument>
        <argument>lt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.nl.yml</argument>
        <argument>nl</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.sl.yml</argument>
        <argument>sl</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.pl.yml</argument>
        <argument>pl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.zh_CN.yml</argument>
        <argument>zh_CN</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.pt_BR.yml</argument>
        <argument>pt_BR</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.en.yml</argument>
        <argument>en</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.fi.yml</argument>
        <argument>fi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.uk.yml</argument>
        <argument>uk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.pt.yml</argument>
        <argument>pt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.zh_CN.yml</argument>
        <argument>zh_CN</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.tr.yml</argument>
        <argument>tr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.lb.yml</argument>
        <argument>lb</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.nl.yml</argument>
        <argument>nl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.sr_Latn.yml</argument>
        <argument>sr_Latn</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.bg.yml</argument>
        <argument>bg</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.ru.yml</argument>
        <argument>ru</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.fr.yml</argument>
        <argument>fr</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.fa.yml</argument>
        <argument>fa</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.ro.yml</argument>
        <argument>ro</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.es.yml</argument>
        <argument>es</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.et.yml</argument>
        <argument>et</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.bg.yml</argument>
        <argument>bg</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.da.yml</argument>
        <argument>da</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.sl.yml</argument>
        <argument>sl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.ca.yml</argument>
        <argument>ca</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.pl.yml</argument>
        <argument>pl</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.de.yml</argument>
        <argument>de</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.cs.yml</argument>
        <argument>cs</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.tr.yml</argument>
        <argument>tr</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.uk.yml</argument>
        <argument>uk</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.pt_PT.yml</argument>
        <argument>pt_PT</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.pt_BR.yml</argument>
        <argument>pt_BR</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.sv.yml</argument>
        <argument>sv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.fi.yml</argument>
        <argument>fi</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.fr.yml</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.ru.yml</argument>
        <argument>ru</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.hu.yml</argument>
        <argument>hu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.sr_Latn.yml</argument>
        <argument>sr_Latn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.hr.yml</argument>
        <argument>hr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.fa.yml</argument>
        <argument>fa</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.it.yml</argument>
        <argument>it</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.sk.yml</argument>
        <argument>sk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.lt.xliff</argument>
        <argument>lt</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.ca.xliff</argument>
        <argument>ca</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.pt.xliff</argument>
        <argument>pt</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.bg.xliff</argument>
        <argument>bg</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.it.xliff</argument>
        <argument>it</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.zh_TW.xliff</argument>
        <argument>zh_TW</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.fa.xliff</argument>
        <argument>fa</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/SonataPageBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataPageBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/SonataPageBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataPageBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/validators.sk.xliff</argument>
        <argument>sk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/SonataPageBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataPageBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/validators.nl.xliff</argument>
        <argument>nl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/validators.es.xliff</argument>
        <argument>es</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/SonataPageBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataPageBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/validators.de.xliff</argument>
        <argument>de</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/validators.en.xliff</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/validators.ja.xliff</argument>
        <argument>ja</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/validators.fr.xliff</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/validators.sl.xliff</argument>
        <argument>sl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/SonataPageBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataPageBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/SonataPageBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataPageBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/SonataPageBundle.bg.xliff</argument>
        <argument>bg</argument>
        <argument>SonataPageBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/SonataPageBundle.ja.xliff</argument>
        <argument>ja</argument>
        <argument>SonataPageBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/SonataPageBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataPageBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/validators.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/translations/SonataPageBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataPageBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/translations/SonataNewsBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataNewsBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/translations/SonataNewsBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataNewsBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/translations/SonataNewsBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataNewsBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/translations/SonataNewsBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataNewsBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/translations/SonataNewsBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataNewsBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/translations/SonataNewsBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataNewsBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/translations/SonataNewsBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataNewsBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/translations/SonataNewsBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataNewsBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/translations/SonataNewsBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataNewsBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.bg.xliff</argument>
        <argument>bg</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.hu.xliff</argument>
        <argument>hu</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.lt.xliff</argument>
        <argument>lt</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.fa.xliff</argument>
        <argument>fa</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ar.xliff</argument>
        <argument>ar</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ro.xliff</argument>
        <argument>ro</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ja.xliff</argument>
        <argument>ja</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.lt.xliff</argument>
        <argument>lt</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pt.xliff</argument>
        <argument>pt</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.zh_CN.xliff</argument>
        <argument>zh_CN</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.eu.xliff</argument>
        <argument>eu</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.it.xliff</argument>
        <argument>it</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.hu.xliff</argument>
        <argument>hu</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ca.xliff</argument>
        <argument>ca</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.uk.xliff</argument>
        <argument>uk</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.hr.xliff</argument>
        <argument>hr</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.lb.xliff</argument>
        <argument>lb</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.bg.xliff</argument>
        <argument>bg</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/app/Resources/SonataAdminBundle/translations/SonataAdminBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/app/Resources/SonataAdminBundle/translations/SonataAdminBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/translations/SonataBasketBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataBasketBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/translations/validators.en.xliff</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/translations/validators.fr.xliff</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/translations/SonataBasketBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataBasketBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/translations/SonataCustomerBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataCustomerBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/translations/SonataCustomerBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataCustomerBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/DeliveryBundle/Resources/translations/SonataDeliveryBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataDeliveryBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/DeliveryBundle/Resources/translations/SonataDeliveryBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataDeliveryBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/translations/SonataInvoiceBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataInvoiceBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/translations/SonataInvoiceBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataInvoiceBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/translations/SonataOrderBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataOrderBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/translations/SonataOrderBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataOrderBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/translations/SonataPaymentBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataPaymentBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/translations/SonataPaymentBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataPaymentBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/translations/SonataProductBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataProductBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/translations/validators.en.xliff</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/translations/validators.fr.xliff</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/translations/SonataProductBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataProductBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/translations/SonataProductBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataProductBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/translations/SonataProductBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataProductBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.es.yml</argument>
        <argument>es</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.et.yml</argument>
        <argument>et</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.pl.yml</argument>
        <argument>pl</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.fa_IR.yml</argument>
        <argument>fa_IR</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.mn.yml</argument>
        <argument>mn</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.sl.yml</argument>
        <argument>sl</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.en.yml</argument>
        <argument>en</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.da.yml</argument>
        <argument>da</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.de.yml</argument>
        <argument>de</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.fr.yml</argument>
        <argument>fr</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.bg.yml</argument>
        <argument>bg</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.ru.yml</argument>
        <argument>ru</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.nl.yml</argument>
        <argument>nl</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.zh_CN.yml</argument>
        <argument>zh_CN</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.sr_Latn.yml</argument>
        <argument>sr_Latn</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.pt.yml</argument>
        <argument>pt</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.fi.yml</argument>
        <argument>fi</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.it.yml</argument>
        <argument>it</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/translations/FOSCommentBundle.sr_Cyrl.yml</argument>
        <argument>sr_Cyrl</argument>
        <argument>FOSCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/translations/SonataCommentBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/translations/SonataCommentBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataCommentBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lb.xliff</argument>
        <argument>lb</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.zh_CN.xliff</argument>
        <argument>zh_CN</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lt.xliff</argument>
        <argument>lt</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ja.xliff</argument>
        <argument>ja</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ro.xliff</argument>
        <argument>ro</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ar.xliff</argument>
        <argument>ar</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ca.xliff</argument>
        <argument>ca</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.eu.xliff</argument>
        <argument>eu</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hu.xliff</argument>
        <argument>hu</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.uk.xliff</argument>
        <argument>uk</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.bg.xliff</argument>
        <argument>bg</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fa.xliff</argument>
        <argument>fa</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt.xliff</argument>
        <argument>pt</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.it.xliff</argument>
        <argument>it</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hr.xliff</argument>
        <argument>hr</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/seo-bundle/Resources/translations/SonataSeoBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataSeoBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/seo-bundle/Resources/translations/SonataSeoBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataSeoBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/seo-bundle/Resources/translations/SonataSeoBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataSeoBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/translations/SonataNotificationBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataNotificationBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/translations/SonataNotificationBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataNotificationBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/translations/SonataNotificationBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataNotificationBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/translations/SonataNotificationBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataNotificationBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/translations/SonataNotificationBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataNotificationBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/translations/SonataNotificationBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataNotificationBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/translations/SonataNotificationBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataNotificationBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/translations/SonataNotificationBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataNotificationBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.hu.xliff</argument>
        <argument>hu</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.it.xliff</argument>
        <argument>it</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.fa.xliff</argument>
        <argument>fa</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.hr.xliff</argument>
        <argument>hr</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.lb.xliff</argument>
        <argument>lb</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.bg.xliff</argument>
        <argument>bg</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.eu.xliff</argument>
        <argument>eu</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.pt.xliff</argument>
        <argument>pt</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.ro.xliff</argument>
        <argument>ro</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.uk.xliff</argument>
        <argument>uk</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.lt.xliff</argument>
        <argument>lt</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.ja.xliff</argument>
        <argument>ja</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.zh_CN.xliff</argument>
        <argument>zh_CN</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/translations/SonataDatagridBundle.ca.xliff</argument>
        <argument>ca</argument>
        <argument>SonataDatagridBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/symfony-cmf/routing-bundle/Resources/translations/CmfRoutingBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>CmfRoutingBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/symfony-cmf/routing-bundle/Resources/translations/CmfRoutingBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>CmfRoutingBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/symfony-cmf/routing-bundle/Resources/translations/CmfRoutingBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>CmfRoutingBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/symfony-cmf/routing-bundle/Resources/translations/CmfRoutingBundle.it.xliff</argument>
        <argument>it</argument>
        <argument>CmfRoutingBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/symfony-cmf/routing-bundle/Resources/translations/CmfRoutingBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>CmfRoutingBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/symfony-cmf/routing-bundle/Resources/translations/CmfRoutingBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>CmfRoutingBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/src/Sonata/Bundle/DemoBundle/Resources/translations/SonataDemoBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataDemoBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/src/Sonata/Bundle/DemoBundle/Resources/translations/SonataDemoBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataDemoBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/translations/SonataTimelineBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataTimelineBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/translations/SonataTimelineBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataTimelineBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/translations/SonataTimelineBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataTimelineBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/translations/SonataTimelineBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataTimelineBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/translations/SonataTimelineBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataTimelineBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/translations/SonataTimelineBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataTimelineBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/translations/SonataTimelineBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataTimelineBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/translations/SonataTimelineBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataTimelineBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/translations/SonataTimelineBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataTimelineBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/translations/pagination.es.yml</argument>
        <argument>es</argument>
        <argument>pagination</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/translations/pagination.sk.yml</argument>
        <argument>sk</argument>
        <argument>pagination</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/translations/pagination.sl.yml</argument>
        <argument>sl</argument>
        <argument>pagination</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/translations/pagination.pl.yml</argument>
        <argument>pl</argument>
        <argument>pagination</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/translations/pagination.en.yml</argument>
        <argument>en</argument>
        <argument>pagination</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/translations/pagination.uk.yml</argument>
        <argument>uk</argument>
        <argument>pagination</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/translations/pagination.ru.yml</argument>
        <argument>ru</argument>
        <argument>pagination</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/translations/pagination.nl.yml</argument>
        <argument>nl</argument>
        <argument>pagination</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/translations/pagination.fr.yml</argument>
        <argument>fr</argument>
        <argument>pagination</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/translations/pagination.de.yml</argument>
        <argument>de</argument>
        <argument>pagination</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/translations/pagination.it.yml</argument>
        <argument>it</argument>
        <argument>pagination</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/translations/pagination.pt.yml</argument>
        <argument>pt</argument>
        <argument>pagination</argument>
      </call>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
      </argument>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection">
        <argument key="gc_probability">1</argument>
      </argument>
      <argument type="service" id="session.handler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument type="service" id="session.handler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session_listener" class="Symfony\Bundle\FrameworkBundle\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="security.secure_random" class="Symfony\Component\Security\Core\Util\SecureRandom">
      <tag name="monolog.logger" channel="security"/>
      <argument>/var/www/sonata-3/app/cache/dev/secure_random.seed</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="ignore"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service">
        <service class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
      </argument>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
            <argument type="service" id="service_container"/>
            <argument type="collection">
              <argument key="form">form.type.form</argument>
              <argument key="birthday">form.type.birthday</argument>
              <argument key="checkbox">form.type.checkbox</argument>
              <argument key="choice">form.type.choice</argument>
              <argument key="collection">form.type.collection</argument>
              <argument key="country">form.type.country</argument>
              <argument key="date">form.type.date</argument>
              <argument key="datetime">form.type.datetime</argument>
              <argument key="email">form.type.email</argument>
              <argument key="file">form.type.file</argument>
              <argument key="hidden">form.type.hidden</argument>
              <argument key="integer">form.type.integer</argument>
              <argument key="language">form.type.language</argument>
              <argument key="locale">form.type.locale</argument>
              <argument key="money">form.type.money</argument>
              <argument key="number">form.type.number</argument>
              <argument key="password">form.type.password</argument>
              <argument key="percent">form.type.percent</argument>
              <argument key="radio">form.type.radio</argument>
              <argument key="repeated">form.type.repeated</argument>
              <argument key="search">form.type.search</argument>
              <argument key="textarea">form.type.textarea</argument>
              <argument key="text">form.type.text</argument>
              <argument key="time">form.type.time</argument>
              <argument key="timezone">form.type.timezone</argument>
              <argument key="url">form.type.url</argument>
              <argument key="button">form.type.button</argument>
              <argument key="submit">form.type.submit</argument>
              <argument key="reset">form.type.reset</argument>
              <argument key="currency">form.type.currency</argument>
              <argument key="entity">form.type.entity</argument>
              <argument key="fos_user_username">fos_user.username_form_type</argument>
              <argument key="fos_user_profile">fos_user.profile.form.type</argument>
              <argument key="fos_user_registration">fos_user.registration.form.type</argument>
              <argument key="fos_user_change_password">fos_user.change_password.form.type</argument>
              <argument key="fos_user_resetting">fos_user.resetting.form.type</argument>
              <argument key="fos_user_group">fos_user.group.form.type</argument>
              <argument key="sonata_security_roles">sonata.user.form.type.security_roles</argument>
              <argument key="sonata_user_profile">sonata.user.profile.form.type</argument>
              <argument key="sonata_user_gender">sonata.user.form.gender_list</argument>
              <argument key="sonata_page_api_form_site">sonata.page.api.form.type.site</argument>
              <argument key="sonata_page_api_form_page">sonata.page.api.form.type.page</argument>
              <argument key="sonata_page_api_form_block">sonata.page.api.form.type.block</argument>
              <argument key="sonata_page_selector">sonata.page.form.type.page_selector</argument>
              <argument key="sonata_page_create_snapshot">sonata.page.form.create_snapshot</argument>
              <argument key="sonata_page_template">sonata.page.form.template_choice</argument>
              <argument key="sonata_page_type_choice">sonata.page.form.page_type_choice</argument>
              <argument key="sonata_post_comment">sonata.news.form.type.comment</argument>
              <argument key="sonata_news_comment_status">sonata.news.form.comment.status_type</argument>
              <argument key="sonata_news_api_form_comment">sonata.news.api.form.type.comment</argument>
              <argument key="sonata_news_api_form_post">sonata.news.api.form.type.post</argument>
              <argument key="sonata_media_type">sonata.media.form.type.media</argument>
              <argument key="sonata_media_api_form_doctrine_media">sonata.media.api.form.type.doctrine.media</argument>
              <argument key="sonata_media_api_form_media">sonata.media.api.form.type.media</argument>
              <argument key="sonata_media_api_form_gallery">sonata.media.api.form.type.gallery</argument>
              <argument key="sonata_media_api_form_gallery_has_media">sonata.media.api.form.type.gallery_has_media</argument>
              <argument key="ckeditor">ivory_ck_editor.form.type</argument>
              <argument key="sonata_type_admin">sonata.admin.form.type.admin</argument>
              <argument key="sonata_type_model">sonata.admin.form.type.model_choice</argument>
              <argument key="sonata_type_model_list">sonata.admin.form.type.model_list</argument>
              <argument key="sonata_type_model_reference">sonata.admin.form.type.model_reference</argument>
              <argument key="sonata_type_model_hidden">sonata.admin.form.type.model_hidden</argument>
              <argument key="sonata_type_model_autocomplete">sonata.admin.form.type.model_autocomplete</argument>
              <argument key="sonata_type_native_collection">sonata.admin.form.type.collection</argument>
              <argument key="sonata_type_filter_number">sonata.admin.form.filter.type.number</argument>
              <argument key="sonata_type_filter_choice">sonata.admin.form.filter.type.choice</argument>
              <argument key="sonata_type_filter_default">sonata.admin.form.filter.type.default</argument>
              <argument key="sonata_type_filter_date">sonata.admin.form.filter.type.date</argument>
              <argument key="sonata_type_filter_date_range">sonata.admin.form.filter.type.daterange</argument>
              <argument key="sonata_type_filter_datetime">sonata.admin.form.filter.type.datetime</argument>
              <argument key="sonata_type_filter_datetime_range">sonata.admin.form.filter.type.datetime_range</argument>
              <argument key="sonata_basket_basket">sonata.basket.form.type.basket</argument>
              <argument key="sonata_basket_address">sonata.basket.form.type.address</argument>
              <argument key="sonata_basket_shipping">sonata.basket.form.type.shipping</argument>
              <argument key="sonata_basket_payment">sonata.basket.form.type.payment</argument>
              <argument key="sonata_basket_api_form_basket_parent">sonata.basket.api.form.type.basket.parent</argument>
              <argument key="sonata_basket_api_form_basket">sonata.basket.api.form.type.basket</argument>
              <argument key="sonata_basket_api_form_basket_element_parent">sonata.basket.api.form.type.basket.element.parent</argument>
              <argument key="sonata_basket_api_form_basket_element">sonata.basket.api.form.type.basket_element</argument>
              <argument key="sonata_customer_address">sonata.customer.form.address_type</argument>
              <argument key="sonata_customer_address_types">sonata.customer.form.address_types_type</argument>
              <argument key="sonata_customer_api_form_customer">sonata.customer.api.form.type.customer</argument>
              <argument key="sonata_customer_api_form_address">sonata.customer.api.form.type.address</argument>
              <argument key="sonata_delivery_choice">sonata.delivery.form.delivery_choice_type</argument>
              <argument key="sonata_invoice_status">sonata.invoice.form.status_type</argument>
              <argument key="sonata_order_status">sonata.order.form.status_type</argument>
              <argument key="sonata_payment_transaction_status">sonata.payment.form.transaction_status</argument>
              <argument key="sonata_product_delivery_status">sonata.product.form.delivery_type</argument>
              <argument key="sonata_product_variation_choices">sonata.product.form.variation_choices_type</argument>
              <argument key="sonata_product_api_form_product_parent">sonata.product.api.form.type.product.parent</argument>
              <argument key="sonata_product_api_form_product">sonata.product.api.form.type.product</argument>
              <argument key="sonata_currency">sonata.price.currency.form_type</argument>
              <argument key="fos_comment_comment">fos_comment.form_type.comment.default</argument>
              <argument key="fos_comment_commentable_thread">fos_comment.form_type.commentable_thread.default</argument>
              <argument key="fos_comment_delete_comment">fos_comment.form_type.delete_comment.default</argument>
              <argument key="fos_comment_thread">fos_comment.form_type.thread.default</argument>
              <argument key="fos_comment_vote">fos_comment.form_type.vote.default</argument>
              <argument key="sonata_comment_comment">sonata.comment.form.comment_type</argument>
              <argument key="sonata_comment_status">sonata.comment.form.comment_status_type</argument>
              <argument key="sonata_type_immutable_array">sonata.core.form.type.array</argument>
              <argument key="sonata_type_boolean">sonata.core.form.type.boolean</argument>
              <argument key="sonata_type_collection">sonata.core.form.type.collection</argument>
              <argument key="sonata_type_translatable_choice">sonata.core.form.type.translatable_choice</argument>
              <argument key="sonata_type_date_range">sonata.core.form.type.date_range</argument>
              <argument key="sonata_type_datetime_range">sonata.core.form.type.datetime_range</argument>
              <argument key="sonata_type_date_picker">sonata.core.form.type.date_picker</argument>
              <argument key="sonata_type_datetime_picker">sonata.core.form.type.datetime_picker</argument>
              <argument key="sonata_type_equal">sonata.core.form.type.equal</argument>
              <argument key="sonata_formatter_type">sonata.formatter.form.type.selector</argument>
              <argument key="sonata_block_service_choice">sonata.block.form.type.block</argument>
              <argument key="sonata_type_container_template_choice">sonata.block.form.type.container_template</argument>
              <argument key="sonata_category_selector">sonata.classification.form.type.category_selector</argument>
              <argument key="sonata_classification_api_form_category">sonata.classification.api.form.type.category</argument>
              <argument key="sonata_classification_api_form_collection">sonata.classification.api.form.type.collection</argument>
              <argument key="sonata_classification_api_form_tag">sonata.classification.api.form.type.tag</argument>
              <argument key="cmf_routing_route_type">cmf_routing.route_type_form_type</argument>
              <argument key="sonata_demo_form_type_car">sonata.demo.form.type.car</argument>
              <argument key="sonata_demo_form_type_engine">sonata.demo.form.type.engine</argument>
              <argument key="sonata_demo_form_type_newsletter">sonata.demo.form.type.newsletter</argument>
              <argument key="tab">mopa_bootstrap.form.type.tab</argument>
            </argument>
            <argument type="collection">
              <argument key="form" type="collection">
                <argument>form.type_extension.form.http_foundation</argument>
                <argument>form.type_extension.form.validator</argument>
                <argument>form.type_extension.csrf</argument>
                <argument>form.type_extension.form.data_collector</argument>
                <argument>sonata.admin.form.extension.field</argument>
                <argument>nelmio_api_doc.form.extension.description_form_type_extension</argument>
                <argument>mopa_bootstrap.form.type_extension.help</argument>
                <argument>mopa_bootstrap.form.type_extension.legend</argument>
                <argument>mopa_bootstrap.form.type_extension.error</argument>
                <argument>mopa_bootstrap.form.type_extension.widget</argument>
                <argument>mopa_bootstrap.form.type_extension.horizontal</argument>
                <argument>mopa_bootstrap.form.type_extension.widget_collection</argument>
                <argument>mopa_bootstrap.form.type_extension.tabbed</argument>
              </argument>
              <argument key="repeated" type="collection">
                <argument>form.type_extension.repeated.validator</argument>
              </argument>
              <argument key="submit" type="collection">
                <argument>form.type_extension.submit.validator</argument>
              </argument>
              <argument key="sonata_demo_car" type="collection">
                <argument>sonata.demo.form.type.advanced_rescue_engine</argument>
              </argument>
              <argument key="button" type="collection">
                <argument>mopa_bootstrap.form.type_extension.button</argument>
              </argument>
              <argument key="date" type="collection">
                <argument>mopa_bootstrap.form.type_extension.date</argument>
              </argument>
            </argument>
            <argument type="collection">
              <argument>form.type_guesser.validator</argument>
              <argument>form.type_guesser.doctrine</argument>
            </argument>
          </service>
        </argument>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type" alias="form"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType">
      <tag name="form.type" alias="birthday"/>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType">
      <tag name="form.type" alias="checkbox"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type" alias="choice"/>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType">
      <tag name="form.type" alias="collection"/>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType">
      <tag name="form.type" alias="country"/>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType">
      <tag name="form.type" alias="date"/>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType">
      <tag name="form.type" alias="datetime"/>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType">
      <tag name="form.type" alias="email"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <tag name="form.type" alias="file"/>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType">
      <tag name="form.type" alias="hidden"/>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType">
      <tag name="form.type" alias="integer"/>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType">
      <tag name="form.type" alias="language"/>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType">
      <tag name="form.type" alias="locale"/>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType">
      <tag name="form.type" alias="money"/>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType">
      <tag name="form.type" alias="number"/>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType">
      <tag name="form.type" alias="password"/>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType">
      <tag name="form.type" alias="percent"/>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType">
      <tag name="form.type" alias="radio"/>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType">
      <tag name="form.type" alias="repeated"/>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType">
      <tag name="form.type" alias="search"/>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType">
      <tag name="form.type" alias="textarea"/>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType">
      <tag name="form.type" alias="text"/>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType">
      <tag name="form.type" alias="time"/>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType">
      <tag name="form.type" alias="timezone"/>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType">
      <tag name="form.type" alias="url"/>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType">
      <tag name="form.type" alias="button"/>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType">
      <tag name="form.type" alias="submit"/>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType">
      <tag name="form.type" alias="reset"/>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType">
      <tag name="form.type" alias="currency"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service">
        <service class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false"/>
      </argument>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension" alias="repeated"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" alias="submit"/>
    </service>
    <service id="form.csrf_provider" class="Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter">
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service" id="form.csrf_provider"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false">
          <argument type="service" id="security.secure_random"/>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
          <argument type="service" id="session"/>
        </service>
      </argument>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>/var/www/sonata-3/app/cache/dev</argument>
    </service>
    <service id="templating.helper.slots" class="Symfony\Component\Templating\Helper\SlotsHelper">
      <tag name="templating.helper" alias="slots"/>
    </service>
    <service id="templating.helper.assets" class="Symfony\Component\Templating\Helper\CoreAssetsHelper" scope="request">
      <tag name="templating.helper" alias="assets"/>
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Templating\Asset\PathPackage" scope="request" public="false">
          <argument type="service" id="request"/>
          <argument>null</argument>
          <argument>%%s?%%s</argument>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="templating.asset.package_factory" class="Symfony\Bundle\FrameworkBundle\Templating\Asset\PackageFactory">
      <argument type="service" id="service_container"/>
    </service>
    <service id="templating.helper.request" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper">
      <tag name="templating.helper" alias="request"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="templating.helper.session" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper">
      <tag name="templating.helper" alias="session"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="templating.helper.router" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper">
      <tag name="templating.helper" alias="router"/>
      <argument type="service" id="cmf_routing.router"/>
    </service>
    <service id="templating.helper.actions" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper">
      <tag name="templating.helper" alias="actions"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="templating.helper.code" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper">
      <tag name="templating.helper" alias="code"/>
      <argument>null</argument>
      <argument>/var/www/sonata-3/app</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="templating.helper.translator" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper">
      <tag name="templating.helper" alias="translator"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="templating.helper.form" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper">
      <tag name="templating.helper" alias="form"/>
      <argument type="service">
        <service class="Symfony\Component\Form\FormRenderer" public="false">
          <argument type="service">
            <service class="Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine" public="false">
              <argument type="service" id="debug.templating.engine.php"/>
              <argument type="collection">
                <argument>FrameworkBundle:Form</argument>
              </argument>
            </service>
          </argument>
          <argument type="service" id="form.csrf_provider" on-invalid="null"/>
        </service>
      </argument>
    </service>
    <service id="templating.helper.stopwatch" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper">
      <tag name="templating.helper" alias="stopwatch"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="templating.globals" class="Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/vendor/symfony-cmf/routing-bundle/Resources/config/validation.xml</argument>
          <argument>/var/www/sonata-3/src/Sonata/Bundle/DemoBundle/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotation_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="setApiVersion">
        <argument>3</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
          <argument type="service">
            <service class="FOS\UserBundle\Validator\Initializer" public="false">
              <tag name="validator.initializer"/>
              <argument type="service" id="fos_user.user_manager"/>
            </service>
          </argument>
        </argument>
      </call>
      <call method="addXmlMapping">
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/DependencyInjection/Compiler/../../Resources/config/validation/orm.xml</argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="validator.expression">validator.expression</argument>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator">validator.email</argument>
        <argument key="security.validator.user_password">security.validator.user_password</argument>
        <argument key="doctrine.orm.validator.unique">doctrine.orm.validator.unique</argument>
        <argument key="sonata.page.validator.unique_url">sonata.page.validator.unique_url</argument>
        <argument key="sonata.media.validator.format">sonata.media.validator.format</argument>
        <argument key="sonata.admin.validator.inline">sonata.admin.validator.inline</argument>
        <argument key="sonata_basket_validator">sonata.basket.validator.basket</argument>
        <argument key="sonata.core.validator.inline">sonata.core.validator.inline</argument>
        <argument key="sonata.formatter.validator.formatter">sonata.formatter.validator.formatter</argument>
      </argument>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler">
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service">
        <service class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
          <argument>file:/var/www/sonata-3/app/cache/dev/profiler</argument>
          <argument></argument>
          <argument></argument>
          <argument>86400</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="255"/>
            <call method="setKernel">
              <argument type="service" id="kernel" on-invalid="ignore"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\DataCollector\AjaxDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="255"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="255"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="255"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="255"/>
            <tag name="monolog.logger" channel="profiler"/>
            <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="255"/>
            <argument type="service" id="kernel" on-invalid="ignore"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="255"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
            <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security"/>
            <argument type="service" id="security.token_storage" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
            <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
            <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db"/>
            <argument type="service" id="doctrine"/>
            <call method="addLogger">
              <argument>default</argument>
              <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Sonata\BlockBundle\Profiler\DataCollector\BlockDataCollector" public="false">
            <tag name="data_collector" id="block" template="SonataBlockBundle:Profiler:block.html.twig"/>
            <argument type="service" id="sonata.block.templating.helper"/>
            <argument type="collection">
              <argument>sonata.block.service.container</argument>
              <argument>sonata.page.block.container</argument>
              <argument>cmf.block.container</argument>
              <argument>cmf.block.slideshow</argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="profiler"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="255"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="255"/>
    </service>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="255"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.router" on-invalid="null"/>
      <argument type="service">
        <service class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service" id="sonata.admin.route_loader"/>
          </call>
          <call method="addLoader">
            <argument type="service" id="fos_rest.routing.loader.controller"/>
          </call>
          <call method="addLoader">
            <argument type="service" id="fos_rest.routing.loader.yaml_collection"/>
          </call>
          <call method="addLoader">
            <argument type="service" id="fos_rest.routing.loader.xml_collection"/>
          </call>
        </service>
      </argument>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="service_container"/>
      <argument>/var/www/sonata-3/app/config/routing_dev.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/sonata-3/app/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appDevUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appDevUrlMatcher</argument>
        <argument key="strict_requirements">null</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument></argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service">
        <service class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListenerService">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument>data_collector.router</argument>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>knp_menu.listener.voters</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>knp_paginator.subscriber.sliding_pagination</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument>fos_user.security.interactive_login_listener</argument>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument>sonata.user.google.authenticator.interactive_login_listener</argument>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>sonata.user.google.authenticator.request_listener</argument>
          <argument>onCoreRequest</argument>
        </argument>
        <argument>-1</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>sonata.page.site.selector.host_with_path</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>47</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>sonata.page.site.selector.host_with_path</argument>
          <argument>onKernelRequestRedirect</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>sonata.page.response_listener</argument>
          <argument>onCoreResponse</argument>
        </argument>
        <argument>-1</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>sonata.page.request_listener</argument>
          <argument>onCoreRequest</argument>
        </argument>
        <argument>30</argument>
      </call>
      <call method="addListenerService">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument>sonata.page.cms_manager_selector</argument>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument>sonata.page.kernel.exception_listener</argument>
          <argument>onKernelException</argument>
        </argument>
        <argument>-127</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>simplethings_entityaudit.request.current_user_listener</argument>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument>fos_rest.view_response_listener</argument>
          <argument>onKernelController</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument>fos_rest.view_response_listener</argument>
          <argument>onKernelView</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>fos_rest.body_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument>fos_rest.param_fetcher_listener</argument>
          <argument>onKernelController</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>nelmio_api_doc.event_listener.request</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.block.event.sonata.comment</argument>
        <argument type="collection">
          <argument>sonata.comment.event.sonata.comment</argument>
          <argument>onBlock</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>sonata.block.cache.handler.default</argument>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.block.event.breadcrumb</argument>
        <argument type="collection">
          <argument>sonata.seo.event.breadcrumb</argument>
          <argument>onBlock</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument>sonata.notification.backend.postpone</argument>
          <argument>onEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.notification.event.message_iterate_event</argument>
        <argument type="collection">
          <argument>sonata.notification.event.doctrine_optimize</argument>
          <argument>iterate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addSubscriberService">
        <argument>response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>streamed_response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>locale_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>translator_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\TranslatorListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session_listener</argument>
        <argument>Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session.save_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\SaveSessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fragment.listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\FragmentListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>profiler_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ProfilerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>data_collector.request</argument>
        <argument>Symfony\Component\HttpKernel\DataCollector\RequestDataCollector</argument>
      </call>
      <call method="addSubscriberService">
        <argument>router_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\RouterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.debug_handlers_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.firewall</argument>
        <argument>Symfony\Component\Security\Http\Firewall</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.rememberme.response_listener</argument>
        <argument>Symfony\Component\Security\Http\RememberMe\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>swiftmailer.email_sender.listener</argument>
        <argument>Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.controller.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.converter.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.cache.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\CacheListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_rest.exception_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ExceptionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_comment.listener.comment_vote_score</argument>
        <argument>FOS\CommentBundle\EventListener\CommentVoteScoreListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_comment.listener.thread_counters</argument>
        <argument>FOS\CommentBundle\EventListener\ThreadCountersListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_comment.listener.thread_permalink</argument>
        <argument>FOS\CommentBundle\EventListener\ThreadPermalinkListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_comment.listener.comment_blamer</argument>
        <argument>FOS\CommentBundle\EventListener\CommentBlamerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_comment.listener.vote_blamer</argument>
        <argument>FOS\CommentBundle\EventListener\VoteBlamerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_comment.listener.closed_threads</argument>
        <argument>FOS\CommentBundle\EventListener\ClosedThreadListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>web_profiler.debug_toolbar</argument>
        <argument>Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener</argument>
      </call>
      <call method="addListenerService">
        <argument>knp_pager.before</argument>
        <argument type="collection">
          <argument>knp_paginator.subscriber.paginate</argument>
          <argument>before</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>knp_pager.pagination</argument>
        <argument type="collection">
          <argument>knp_paginator.subscriber.paginate</argument>
          <argument>pagination</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>knp_pager.before</argument>
        <argument type="collection">
          <argument>knp_paginator.subscriber.sortable</argument>
          <argument>before</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListenerService">
        <argument>knp_pager.before</argument>
        <argument type="collection">
          <argument>knp_paginator.subscriber.filtration</argument>
          <argument>before</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListenerService">
        <argument>knp_pager.pagination</argument>
        <argument type="collection">
          <argument>knp_paginator.subscriber.sliding_pagination</argument>
          <argument>pagination</argument>
        </argument>
        <argument>1</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
          <tag name="monolog.logger" channel="request"/>
          <argument type="service" id="service_container"/>
          <argument type="service" id="controller_name_converter"/>
          <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="security.context" class="Symfony\Component\Security\Core\SecurityContext">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="fos_user.user_manager"/>
            <argument type="service" id="security.user_checker"/>
            <argument>admin</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
            <argument>58b3fe935b707</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="security.user.provider.concrete.in_memory"/>
            <argument type="service" id="security.user_checker"/>
            <argument>api</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="fos_user.user_manager"/>
            <argument type="service" id="security.user_checker"/>
            <argument>main</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
            <argument>58b3fe935b707</argument>
          </service>
        </argument>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.access.decision_manager" class="JMS\SecurityExtraBundle\Security\Authorization\RememberingAccessDecisionManager">
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
          <argument type="collection">
            <argument type="service">
              <service class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
                <tag name="security.voter" priority="245"/>
                <argument type="service" id="security.role_hierarchy"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
                <tag name="security.voter" priority="245"/>
                <argument type="service">
                  <service class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
                </argument>
                <argument type="service" id="security.authentication.trust_resolver"/>
                <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
                <tag name="security.voter" priority="250"/>
                <argument type="service" id="security.authentication.trust_resolver"/>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\SecurityExtraBundle\Security\Acl\Voter\AclVoter" public="false">
                <tag name="monolog.logger" channel="security"/>
                <tag name="security.voter" priority="255"/>
                <argument type="service" id="security.acl.provider"/>
                <argument type="service" id="security.acl.object_identity_retrieval_strategy"/>
                <argument type="service" id="security.acl.security_identity_retrieval_strategy"/>
                <argument type="service" id="security.acl.permission.map"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <argument>true</argument>
              </service>
            </argument>
          </argument>
          <argument>affirmative</argument>
          <argument>false</argument>
          <argument>true</argument>
        </service>
      </argument>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy">
      <argument type="collection">
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_ALLOWED_TO_SWITCH</argument>
          <argument>ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT</argument>
          <argument>ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT</argument>
        </argument>
        <argument key="SONATA" type="collection"/>
      </argument>
    </service>
    <service id="security.firewall" class="Symfony\Component\Security\Http\Firewall">
      <tag name="kernel.event_subscriber"/>
      <argument type="service">
        <service class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="security.firewall.map.context.dev" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/(_(profiler|wdt)|css|images|js|admin/_(wdt|profiler)|api/_(wdt|profiler))/</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.admin" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>/admin(.*)</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.api" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>/api/(.*)</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.main" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>.*</argument>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="cmf_routing.router" on-invalid="null"/>
      <argument type="service" id="cmf_routing.router" on-invalid="null"/>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
          <argument>80</argument>
          <argument>443</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/login$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/register</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/resetting</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/login$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/logout$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/login-check$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/profile/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/shop/basket/step/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/shop/user/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/.*</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="cmf_routing.router"/>
      <call method="registerListener">
        <argument>admin</argument>
        <argument>/admin/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.context" on-invalid="ignore"/>
    </service>
    <service id="security.user.provider.concrete.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false">
      <call method="createUser">
        <argument type="service">
          <service class="Symfony\Component\Security\Core\User\User" public="false">
            <argument>admin</argument>
            <argument>admin</argument>
            <argument type="collection">
              <argument>ROLE_ADMIN</argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.context"/>
      <argument type="collection">
        <argument type="service" id="fos_user.user_manager"/>
        <argument type="service" id="security.user.provider.concrete.in_memory"/>
      </argument>
      <argument>user</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.firewall.map.context.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.http_utils"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument>/</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">logout</argument>
              <argument key="logout_path">/admin/logout</argument>
            </argument>
            <call method="addHandler">
              <argument type="service">
                <service class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
              </argument>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
            <tag name="security.remember_me_aware" id="admin" provider="security.user.provider.concrete.fos_userbundle"/>
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service" id="security.http_utils"/>
            <argument>admin</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/admin/login</argument>
                    <argument key="always_use_default_target_path">false</argument>
                    <argument key="default_target_path">/</argument>
                    <argument key="target_path_parameter">_target_path</argument>
                    <argument key="use_referer">false</argument>
                  </argument>
                </call>
                <call method="setProviderKey">
                  <argument>admin</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/admin/login</argument>
                    <argument key="failure_path">null</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="use_forward">false</argument>
              <argument key="check_path">/admin/login_check</argument>
              <argument key="require_previous_session">true</argument>
              <argument key="username_parameter">_username</argument>
              <argument key="password_parameter">_password</argument>
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">authenticate</argument>
              <argument key="post_only">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument>null</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
            <argument type="service" id="security.context"/>
            <argument>58b3fe935b707</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.context"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>admin</argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
              <argument type="service" id="http_kernel"/>
              <argument type="service" id="security.http_utils"/>
              <argument>/admin/login</argument>
              <argument>false</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
        </service>
      </argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument>api</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false">
                <argument>Secured Demo Area</argument>
              </service>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.context"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>api</argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false">
              <argument>Secured Demo Area</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
        </service>
      </argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.http_utils"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument>/</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">logout</argument>
              <argument key="logout_path">/logout</argument>
            </argument>
            <call method="addHandler">
              <argument type="service" id="sonata.page.cms_manager_selector"/>
            </call>
            <call method="addHandler">
              <argument type="service" id="sonata.basket.entity.factory"/>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
            <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.fos_userbundle"/>
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service" id="security.http_utils"/>
            <argument>main</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/login</argument>
                    <argument key="always_use_default_target_path">false</argument>
                    <argument key="default_target_path">/</argument>
                    <argument key="target_path_parameter">_target_path</argument>
                    <argument key="use_referer">false</argument>
                  </argument>
                </call>
                <call method="setProviderKey">
                  <argument>main</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/login</argument>
                    <argument key="failure_path">null</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="use_forward">false</argument>
              <argument key="check_path">/login_check</argument>
              <argument key="require_previous_session">true</argument>
              <argument key="username_parameter">_username</argument>
              <argument key="password_parameter">_password</argument>
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">authenticate</argument>
              <argument key="post_only">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument>null</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
            <argument type="service" id="security.context"/>
            <argument>58b3fe935b707</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.context"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>main</argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
              <argument type="service" id="http_kernel"/>
              <argument type="service" id="security.http_utils"/>
              <argument>/login</argument>
              <argument>false</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
        </service>
      </argument>
    </service>
    <service id="security.acl.object_identity_retrieval_strategy" class="Symfony\Component\Security\Acl\Domain\ObjectIdentityRetrievalStrategy" public="false"/>
    <service id="security.acl.security_identity_retrieval_strategy" class="Symfony\Component\Security\Acl\Domain\SecurityIdentityRetrievalStrategy" public="false">
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.acl.permission.map" class="Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap" public="false"/>
    <service id="security.acl.dbal.schema" class="Symfony\Component\Security\Acl\Dbal\Schema">
      <argument type="collection">
        <argument key="class_table_name">acl_classes</argument>
        <argument key="entry_table_name">acl_entries</argument>
        <argument key="oid_table_name">acl_object_identities</argument>
        <argument key="oid_ancestors_table_name">acl_object_identity_ancestors</argument>
        <argument key="sid_table_name">acl_security_identities</argument>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="security.acl.dbal.schema_listener" class="Symfony\Bundle\SecurityBundle\EventListener\AclSchemaListener">
      <tag name="doctrine.event_listener" connection="default" event="postGenerateSchema" lazy="1"/>
      <argument type="service" id="security.acl.dbal.schema"/>
    </service>
    <service id="twig" class="Twig_Environment">
      <argument type="service" id="twig.loader"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="base_template_class">Sonata\CacheBundle\Twig\TwigTemplate14</argument>
        <argument key="exception_controller">FOS\RestBundle\Controller\ExceptionController::showAction</argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
          <argument>SonataFormatterBundle:Form:formatter.html.twig</argument>
          <argument>SonataMediaBundle:Form:media_widgets.html.twig</argument>
          <argument>SonataCoreBundle:Form:datepicker.html.twig</argument>
        </argument>
        <argument key="autoescape" type="collection">
          <argument>Symfony\Bundle\TwigBundle\TwigDefaultEscapingStrategy</argument>
          <argument>guess</argument>
        </argument>
        <argument key="cache">/var/www/sonata-3/app/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="paths" type="collection"/>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\SecurityBundle\Twig\Extension\LogoutUrlExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="templating.helper.logout_url"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.context" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="translator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\Extension\AssetsExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="service_container"/>
            <argument type="service" id="router.request_context" on-invalid="null"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\Extension\ActionsExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
            <tag name="twig.extension"/>
            <argument>null</argument>
            <argument>/var/www/sonata-3/app</argument>
            <argument>UTF-8</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="cmf_routing.router"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="fragment.handler"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Symfony\Bridge\Twig\Form\TwigRenderer" public="false">
                <argument type="service">
                  <service class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
                    <argument type="collection">
                      <argument>IvoryCKEditorBundle:Form:ckeditor_widget.html.twig</argument>
                      <argument>form_div_layout.html.twig</argument>
                      <argument>MopaBootstrapBundle:Form:fields.html.twig</argument>
                      <argument>SonataFormatterBundle:Form:formatter.html.twig</argument>
                      <argument>SonataMediaBundle:Form:media_widgets.html.twig</argument>
                      <argument>SonataCoreBundle:Form:datepicker.html.twig</argument>
                      <argument>SonataUserBundle:Form:form_admin_fields.html.twig</argument>
                    </argument>
                  </service>
                </argument>
                <argument type="service" id="form.csrf_provider" on-invalid="null"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Debug" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Twig\AsseticExtension" public="false">
            <tag name="twig.extension"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service" id="assetic.asset_factory"/>
            <argument type="service" id="templating.name_parser"/>
            <argument>false</argument>
            <argument type="collection"/>
            <argument type="collection"/>
            <argument type="service">
              <service class="Symfony\Bundle\AsseticBundle\DefaultValueSupplier" public="false">
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Menu\Twig\MenuExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Knp\Menu\Twig\Helper" public="false">
                <argument type="service" id="knp_menu.renderer_provider"/>
                <argument type="service" id="knp_menu.menu_provider"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Bundle\MarkdownBundle\Twig\Extension\MarkdownTwigExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Knp\Bundle\MarkdownBundle\Helper\MarkdownHelper" public="false">
                <tag name="templating.helper" alias="markdown"/>
                <argument type="service" id="markdown.parser"/>
                <call method="addParser">
                  <argument type="service">
                    <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Min" public="false">
                      <tag name="markdown.parser" alias="min"/>
                    </service>
                  </argument>
                  <argument>min</argument>
                </call>
                <call method="addParser">
                  <argument type="service">
                    <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Light" public="false">
                      <tag name="markdown.parser" alias="light"/>
                    </service>
                  </argument>
                  <argument>light</argument>
                </call>
                <call method="addParser">
                  <argument type="service">
                    <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Medium" public="false">
                      <tag name="markdown.parser" alias="medium"/>
                    </service>
                  </argument>
                  <argument>medium</argument>
                </call>
                <call method="addParser">
                  <argument type="service" id="markdown.parser"/>
                  <argument>default</argument>
                </call>
                <call method="addParser">
                  <argument type="service">
                    <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Flavored" public="false">
                      <tag name="markdown.parser" alias="flavored"/>
                    </service>
                  </argument>
                  <argument>flavored</argument>
                </call>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="knp_paginator.twig.extension.pagination"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\PageBundle\Twig\Extension\PageExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.page.cms_manager_selector"/>
            <argument type="service" id="sonata.page.site.selector.host_with_path"/>
            <argument type="service" id="cmf_routing.router"/>
            <argument type="service" id="sonata.block.templating.helper"/>
            <argument type="service">
              <service class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
                <tag name="twig.extension"/>
                <argument type="service" id="fragment.handler"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\NewsBundle\Twig\Extension\NewsExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="cmf_routing.router"/>
            <argument type="service" id="sonata.classification.manager.tag"/>
            <argument type="service" id="sonata.news.blog"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.media.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="ivory_ck_editor.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="nelmio_api_doc.twig.extension.extra_markdown"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\CustomerBundle\Twig\Extension\AddressExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.delivery.selector.default"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\ProductBundle\Twig\Extension\ProductExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.product.pool"/>
            <argument type="service" id="form.factory"/>
            <argument>Application\Sonata\BasketBundle\Entity\BasketElement</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="JMS\Serializer\Twig\SerializerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="jms_serializer"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="FOS\CommentBundle\Twig\CommentExtension" public="false">
            <tag name="twig.extension"/>
            <argument>null</argument>
            <argument>null</argument>
            <argument>null</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.flashmessage.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.wrapping"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.text"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.status_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\IntlBundle\Twig\Extension\LocaleExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.intl.templating.helper.locale"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\IntlBundle\Twig\Extension\NumberExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.intl.templating.helper.number"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\IntlBundle\Twig\Extension\DateTimeExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.intl.templating.helper.datetime"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\FormatterBundle\Twig\Extension\TextFormatterExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.formatter.pool"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\BlockBundle\Twig\Extension\BlockExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.block.templating.helper"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\SeoBundle\Twig\Extension\SeoExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.seo.page.default"/>
            <argument>UTF-8</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="spy_timeline.twig.extension.timeline"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="mopa_bootstrap.twig.extension.bootstrap_form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="mopa_bootstrap.twig.extension.bootstrap_icon"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="templating.globals"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_user</argument>
        <argument type="service" id="sonata.user.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_page</argument>
        <argument type="service" id="sonata.page.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_media</argument>
        <argument type="service" id="sonata.media.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_basket</argument>
        <argument type="service" id="sonata.basket.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_block</argument>
        <argument type="service" id="sonata.block.twig.global"/>
      </call>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController">
      <argument type="service" id="http_kernel"/>
      <argument>FOS\RestBundle\Controller\ExceptionController::showAction</argument>
    </service>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <argument>/var/www/sonata-3/app/logs/app_dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer">
      <argument type="service" id="swiftmailer.mailer.default.transport"/>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.datetime"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sensio_framework_extra.converter.datetime" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\CacheListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="jms_aop.pointcut_container" class="JMS\AopBundle\Aop\PointcutContainer"/>
    <service id="jms_aop.interceptor_loader" class="JMS\AopBundle\Aop\InterceptorLoader">
      <argument type="service" id="service_container"/>
    </service>
    <service id="security.access.method_interceptor" class="JMS\SecurityExtraBundle\Security\Authorization\Interception\MethodSecurityInterceptor">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument type="service">
        <service class="JMS\SecurityExtraBundle\Security\Authorization\AfterInvocation\AfterInvocationManager" public="false">
          <argument type="collection">
            <argument type="service">
              <service class="JMS\SecurityExtraBundle\Security\Authorization\AfterInvocation\AclAfterInvocationProvider" public="false">
                <tag name="security.after_invocation.provider"/>
                <argument type="service" id="security.acl.provider"/>
                <argument type="service" id="security.acl.object_identity_retrieval_strategy"/>
                <argument type="service" id="security.acl.security_identity_retrieval_strategy"/>
                <argument type="service" id="security.acl.permission.map"/>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\SecurityExtraBundle\Security\Authorization\RunAsManager" public="false">
          <argument>RunAsToken</argument>
          <argument>ROLE_</argument>
        </service>
      </argument>
      <argument type="service" id="security.extra.metadata_factory"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access.pointcut" class="JMS\SecurityExtraBundle\Security\Authorization\Interception\SecurityPointcut">
      <tag name="jms_aop.pointcut" interceptor="security.access.method_interceptor"/>
      <argument type="service" id="security.extra.metadata_factory"/>
      <argument>false</argument>
      <argument type="collection"/>
      <call method="setSecuredClasses">
        <argument type="collection"/>
      </call>
    </service>
    <service id="security.extra.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service">
        <service class="Metadata\Driver\LazyLoadingDriver" public="false">
          <argument type="service" id="service_container"/>
          <argument>security.extra.metadata_driver</argument>
        </service>
      </argument>
      <argument type="service">
        <service class="Metadata\Cache\FileCache" public="false">
          <argument>/var/www/sonata-3/app/cache/dev/jms_security</argument>
          <argument>true</argument>
        </service>
      </argument>
      <call method="setIncludeInterfaces">
        <argument>true</argument>
      </call>
    </service>
    <service id="assetic.filter_manager" class="Symfony\Bundle\AsseticBundle\FilterManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="cssrewrite">assetic.filter.cssrewrite</argument>
        <argument key="yui_js">assetic.filter.yui_js</argument>
        <argument key="yui_css">assetic.filter.yui_css</argument>
      </argument>
    </service>
    <service id="assetic.asset_manager" class="Assetic\Factory\LazyAssetManager">
      <argument type="service" id="assetic.asset_factory"/>
      <argument type="collection">
        <argument key="config" type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader" public="false">
            <tag name="assetic.formula_loader" alias="config"/>
          </service>
        </argument>
        <argument key="twig" type="service">
          <service class="Assetic\Factory\Loader\CachedFormulaLoader" public="false">
            <tag name="assetic.formula_loader" alias="twig"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service">
              <service class="Assetic\Extension\Twig\TwigFormulaLoader" public="false">
                <tag name="assetic.templating.twig"/>
                <tag name="monolog.logger" channel="assetic"/>
                <argument type="service" id="twig"/>
                <argument type="service" id="monolog.logger.assetic" on-invalid="ignore"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Assetic\Cache\ConfigCache" public="false">
                <argument>/var/www/sonata-3/app/cache/dev/assetic/config</argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </argument>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource" public="false">
            <tag name="assetic.formula_resource" loader="config"/>
            <argument type="collection">
              <argument key="sonata_jqueryui_js" type="collection">
                <argument type="collection">
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/ui/jquery.ui.core.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/ui/jquery.ui.widget.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/ui/jquery.ui.mouse.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/ui/jquery.ui.draggable.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/ui/jquery.ui.droppable.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/ui/jquery.ui.resizable.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/ui/jquery.ui.selectable.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/ui/jquery.ui.sortable.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/ui/jquery.ui.effect.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/ui/jquery.ui.position.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/ui/jquery.ui.tooltip.js</argument>
                </argument>
                <argument type="collection">
                  <argument>yui_js</argument>
                </argument>
                <argument type="collection"/>
              </argument>
              <argument key="sonata_jqueryui_css" type="collection">
                <argument type="collection">
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
                </argument>
                <argument type="collection">
                  <argument>cssrewrite</argument>
                  <argument>yui_css</argument>
                </argument>
                <argument type="collection"/>
              </argument>
              <argument key="sonata_formatter_js" type="collection">
                <argument type="collection">
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataformatter/vendor/markitup-markitup/markitup/jquery.markitup.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataformatter/markitup/sets/markdown/set.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataformatter/markitup/sets/html/set.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataformatter/markitup/sets/textile/set.js</argument>
                </argument>
                <argument type="collection">
                  <argument>yui_js</argument>
                </argument>
                <argument type="collection"/>
              </argument>
              <argument key="sonata_formatter_css" type="collection">
                <argument type="collection">
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataformatter/markitup/skins/sonata/style.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataformatter/markitup/sets/markdown/style.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataformatter/markitup/sets/html/style.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataformatter/markitup/sets/textile/style.css</argument>
                </argument>
                <argument type="collection">
                  <argument>cssrewrite</argument>
                  <argument>yui_css</argument>
                </argument>
                <argument type="collection"/>
              </argument>
              <argument key="sonata_admin_js" type="collection">
                <argument type="collection">
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jquery/dist/jquery.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/bootstrap/dist/js/bootstrap.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/select2/select2.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/jquery/jquery.form.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/App.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/Admin.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonatapage/sonata-page.back.js</argument>
                </argument>
                <argument type="collection">
                  <argument>yui_js</argument>
                </argument>
                <argument type="collection"/>
              </argument>
              <argument key="sonata_admin_css" type="collection">
                <argument type="collection">
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/AdminLTE/css/font-awesome.min.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/AdminLTE/css/ionicons.min.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/AdminLTE/css/AdminLTE.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jqueryui/themes/flick/jquery-ui.min.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/select2/select2.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/select2/select2-bootstrap.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/css/styles.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/css/layout.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonatapage/sonata-page.back.min.css</argument>
                </argument>
                <argument type="collection">
                  <argument>cssrewrite</argument>
                  <argument>yui_css</argument>
                </argument>
                <argument type="collection"/>
              </argument>
              <argument key="sonata_front_js" type="collection">
                <argument type="collection">
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/jquery/dist/jquery.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/bootstrap/dist/js/bootstrap.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataproduct/js/product.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonatacore/js/base.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonatacore/vendor/select2/select2.min.js</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonatademo/js/demo.js</argument>
                </argument>
                <argument type="collection">
                  <argument>yui_js</argument>
                </argument>
                <argument type="collection"/>
              </argument>
              <argument key="sonata_front_css" type="collection">
                <argument type="collection">
                  <argument>/var/www/sonata-3/app/../web/bundles/sonataadmin/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonatacore/vendor/select2/select2.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/mopabootstrap/css/datepicker.css</argument>
                  <argument>/var/www/sonata-3/app/../web/bundles/sonatademo/css/demo.css</argument>
                </argument>
                <argument type="collection">
                  <argument>cssrewrite</argument>
                  <argument>yui_css</argument>
                </argument>
                <argument type="collection"/>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>config</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="service" id="templating.loader"/>
            <argument></argument>
            <argument>/var/www/sonata-3/app/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
    </service>
    <service id="assetic.asset_factory" class="Symfony\Bundle\AsseticBundle\Factory\AssetFactory" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\DependencyInjection\ParameterBag\ParameterBag" public="false">
          <factory service="service_container" method="getParameterBag"/>
        </service>
      </argument>
      <argument>/var/www/sonata-3/app/../web</argument>
      <argument>false</argument>
    </service>
    <service id="assetic.filter.cssrewrite" class="Assetic\Filter\CssRewriteFilter">
      <tag name="assetic.filter" alias="cssrewrite"/>
    </service>
    <service id="assetic.filter.yui_js" class="Assetic\Filter\Yui\JsCompressorFilter">
      <tag name="assetic.filter" alias="yui_js"/>
      <argument>/var/www/sonata-3/app/../bin/yuicompressor.jar</argument>
      <argument>/usr/bin/java</argument>
      <call method="setCharset">
        <argument>UTF-8</argument>
      </call>
      <call method="setTimeout">
        <argument>null</argument>
      </call>
      <call method="setStackSize">
        <argument>null</argument>
      </call>
      <call method="setNomunge">
        <argument>null</argument>
      </call>
      <call method="setPreserveSemi">
        <argument>null</argument>
      </call>
      <call method="setDisableOptimizations">
        <argument>null</argument>
      </call>
      <call method="setLineBreak">
        <argument>null</argument>
      </call>
    </service>
    <service id="assetic.filter.yui_css" class="Assetic\Filter\Yui\CssCompressorFilter">
      <tag name="assetic.filter" alias="yui_css"/>
      <argument>/var/www/sonata-3/app/../bin/yuicompressor.jar</argument>
      <argument>/usr/bin/java</argument>
      <call method="setCharset">
        <argument>UTF-8</argument>
      </call>
      <call method="setTimeout">
        <argument>null</argument>
      </call>
      <call method="setStackSize">
        <argument>null</argument>
      </call>
      <call method="setLineBreak">
        <argument>null</argument>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection">
        <argument key="json" type="collection">
          <argument key="class">Sonata\Doctrine\Types\JsonType</argument>
          <argument key="commented">true</argument>
        </argument>
        <argument key="currency" type="collection">
          <argument key="class">Sonata\Component\Currency\CurrencyDoctrineType</argument>
          <argument key="commented">true</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="default">doctrine.dbal.default_connection</argument>
      </argument>
      <argument type="collection">
        <argument key="default">doctrine.orm.default_entity_manager</argument>
      </argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="dbname">sonata3</argument>
        <argument key="user">root</argument>
        <argument key="host">127.0.0.1</argument>
        <argument key="password">panda2014</argument>
        <argument key="charset">UTF8</argument>
        <argument key="port">null</argument>
        <argument key="driverOptions" type="collection"/>
      </argument>
      <argument type="service">
        <service class="Doctrine\DBAL\Configuration" public="false">
          <call method="setSQLLogger">
            <argument type="service">
              <service class="Doctrine\DBAL\Logging\LoggerChain" public="false">
                <call method="addLogger">
                  <argument type="service">
                    <service class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
                      <tag name="monolog.logger" channel="doctrine"/>
                      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
                      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
                    </service>
                  </argument>
                </call>
                <call method="addLogger">
                  <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
                </call>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
          <argument type="service" id="service_container"/>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.easy_extends.doctrine.mapper"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.cache.orm.event_subscriber"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.product.subscriber.orm"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="simplethings_entityaudit.create_schema_listener"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="simplethings_entityaudit.log_revisions_listener"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.media.doctrine.event_subscriber"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="FOS\UserBundle\Entity\UserListener" public="false">
                <tag name="doctrine.event_subscriber"/>
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>postGenerateSchema</argument>
            </argument>
            <argument>security.acl.dbal.schema_listener</argument>
          </call>
        </service>
      </argument>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_a1d9e2e194c47ebc3617c2e6bf9cb631f25548ec9ecf46ffe040d2de579d3325</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_a1d9e2e194c47ebc3617c2e6bf9cb631f25548ec9ecf46ffe040d2de579d3325</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_a1d9e2e194c47ebc3617c2e6bf9cb631f25548ec9ecf46ffe040d2de579d3325</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\ORM\Mapping\DefaultEntityListenerResolver"/>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service">
        <service class="Doctrine\ORM\Configuration" public="false">
          <call method="setEntityNamespaces">
            <argument type="collection">
              <argument key="ApplicationSonataPageBundle">Application\Sonata\PageBundle\Entity</argument>
              <argument key="SonataPageBundle">Sonata\PageBundle\Entity</argument>
              <argument key="ApplicationSonataMediaBundle">Application\Sonata\MediaBundle\Entity</argument>
              <argument key="SonataMediaBundle">Sonata\MediaBundle\Entity</argument>
              <argument key="ApplicationSonataNewsBundle">Application\Sonata\NewsBundle\Entity</argument>
              <argument key="SonataNewsBundle">Sonata\NewsBundle\Entity</argument>
              <argument key="FOSUserBundle">FOS\UserBundle\Entity</argument>
              <argument key="ApplicationSonataUserBundle">Application\Sonata\UserBundle\Entity</argument>
              <argument key="SonataUserBundle">Sonata\UserBundle\Entity</argument>
              <argument key="SonataNotificationBundle">Sonata\NotificationBundle\Entity</argument>
              <argument key="ApplicationSonataNotificationBundle">Application\Sonata\NotificationBundle\Entity</argument>
              <argument key="ApplicationSonataOrderBundle">Application\Sonata\OrderBundle\Entity</argument>
              <argument key="SonataOrderBundle">Sonata\OrderBundle\Entity</argument>
              <argument key="ApplicationSonataPaymentBundle">Application\Sonata\PaymentBundle\Entity</argument>
              <argument key="SonataPaymentBundle">Sonata\PaymentBundle\Entity</argument>
              <argument key="ApplicationSonataProductBundle">Application\Sonata\ProductBundle\Entity</argument>
              <argument key="SonataProductBundle">Sonata\ProductBundle\Entity</argument>
              <argument key="ApplicationSonataInvoiceBundle">Application\Sonata\InvoiceBundle\Entity</argument>
              <argument key="SonataInvoiceBundle">Sonata\InvoiceBundle\Entity</argument>
              <argument key="ApplicationSonataCustomerBundle">Application\Sonata\CustomerBundle\Entity</argument>
              <argument key="SonataCustomerBundle">Sonata\CustomerBundle\Entity</argument>
              <argument key="ApplicationSonataBasketBundle">Application\Sonata\BasketBundle\Entity</argument>
              <argument key="SonataBasketBundle">Sonata\BasketBundle\Entity</argument>
              <argument key="FOSCommentBundle">FOS\CommentBundle\Entity</argument>
              <argument key="SonataCommentBundle">Sonata\CommentBundle\Entity</argument>
              <argument key="ApplicationSonataCommentBundle">Application\Sonata\CommentBundle\Entity</argument>
              <argument key="SonataClassificationBundle">Sonata\ClassificationBundle\Entity</argument>
              <argument key="ApplicationSonataClassificationBundle">Application\Sonata\ClassificationBundle\Entity</argument>
              <argument key="SonataDemoBundle">Sonata\Bundle\DemoBundle\Entity</argument>
              <argument key="SpyTimelineBundle">Spy\TimelineBundle\Entity</argument>
              <argument key="SonataTimelineBundle">Sonata\TimelineBundle\Entity</argument>
              <argument key="ApplicationSonataTimelineBundle">Application\Sonata\TimelineBundle\Entity</argument>
            </argument>
          </call>
          <call method="setMetadataCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
          </call>
          <call method="setQueryCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
          </call>
          <call method="setResultCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
          </call>
          <call method="setMetadataDriverImpl">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\PageBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\PageBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\MediaBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\MediaBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\NewsBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\NewsBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>FOS\UserBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\UserBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\UserBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\NotificationBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\NotificationBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\OrderBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\OrderBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\PaymentBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\PaymentBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\ProductBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\ProductBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\InvoiceBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\InvoiceBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\CustomerBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\CustomerBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\BasketBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\BasketBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>FOS\CommentBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\CommentBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\CommentBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\ClassificationBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\ClassificationBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Spy\TimelineBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/doctrine">Application\Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/doctrine">Sonata\PageBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/doctrine">Application\Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/doctrine">Sonata\NewsBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/doctrine">Application\Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/doctrine">Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/doctrine">Application\Sonata\NotificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/doctrine">Application\Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/doctrine">Sonata\OrderBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/doctrine">Application\Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/doctrine">Sonata\PaymentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/doctrine">Application\Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/doctrine">Sonata\ProductBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/doctrine">Application\Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/doctrine">Sonata\InvoiceBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/doctrine">Application\Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/doctrine">Sonata\CustomerBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/doctrine">Application\Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/doctrine">Sonata\BasketBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/doctrine">FOS\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/doctrine">Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/doctrine">Application\Sonata\CommentBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/doctrine">Application\Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/doctrine">Spy\TimelineBundle\Entity</argument>
                        <argument key="/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/doctrine">Application\Sonata\TimelineBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Application\Sonata\TimelineBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>/var/www/sonata-3/src/Sonata/Bundle/DemoBundle/Entity</argument>
                        <argument>/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>Sonata\Bundle\DemoBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>/var/www/sonata-3/src/Sonata/Bundle/DemoBundle/Entity</argument>
                        <argument>/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>Sonata\TimelineBundle\Entity</argument>
                </call>
              </service>
            </argument>
          </call>
          <call method="setProxyDir">
            <argument>/var/www/sonata-3/app/cache/dev/doctrine/orm/Proxies</argument>
          </call>
          <call method="setProxyNamespace">
            <argument>Proxies</argument>
          </call>
          <call method="setAutoGenerateProxyClasses">
            <argument>true</argument>
          </call>
          <call method="setClassMetadataFactoryName">
            <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
          </call>
          <call method="setDefaultRepositoryClassName">
            <argument>Doctrine\ORM\EntityRepository</argument>
          </call>
          <call method="setNamingStrategy">
            <argument type="service">
              <service class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
            </argument>
          </call>
          <call method="setEntityListenerResolver">
            <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
          </call>
        </service>
      </argument>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="knp_menu.factory" class="Knp\Menu\MenuFactory">
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Menu\Integration\Symfony\RoutingExtension" public="false">
            <tag name="knp_menu.factory_extension"/>
            <argument type="service" id="cmf_routing.router"/>
          </service>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="knp_menu.matcher" class="Knp\Menu\Matcher\Matcher">
      <call method="addVoter">
        <argument type="service" id="knp_menu.voter.router"/>
      </call>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider">
      <argument type="service" id="service_container"/>
      <argument>twig</argument>
      <argument type="collection">
        <argument key="list">knp_menu.renderer.list</argument>
        <argument key="twig">knp_menu.renderer.twig</argument>
      </argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.listener.voters" class="Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <call method="addVoter">
        <argument type="service" id="knp_menu.voter.router"/>
      </call>
    </service>
    <service id="knp_menu.voter.router" class="Knp\Menu\Matcher\Voter\RouteVoter">
      <tag name="knp_menu.voter" request="1"/>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>knp_menu.html.twig</argument>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
    </service>
    <service id="knp_paginator" class="Knp\Component\Pager\Paginator">
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setDefaultPaginatorOptions">
        <argument type="collection">
          <argument key="pageParameterName">page</argument>
          <argument key="sortFieldParameterName">sort</argument>
          <argument key="sortDirectionParameterName">direction</argument>
          <argument key="filterFieldParameterName">filterField</argument>
          <argument key="filterValueParameterName">filterValue</argument>
          <argument key="distinct">true</argument>
        </argument>
      </call>
    </service>
    <service id="knp_paginator.subscriber.paginate" class="Knp\Component\Pager\Event\Subscriber\Paginate\PaginationSubscriber">
      <tag name="knp_paginator.subscriber"/>
    </service>
    <service id="knp_paginator.subscriber.sortable" class="Knp\Component\Pager\Event\Subscriber\Sortable\SortableSubscriber">
      <tag name="knp_paginator.subscriber"/>
    </service>
    <service id="knp_paginator.subscriber.filtration" class="Knp\Component\Pager\Event\Subscriber\Filtration\FiltrationSubscriber">
      <tag name="knp_paginator.subscriber"/>
    </service>
    <service id="knp_paginator.subscriber.sliding_pagination" class="Knp\Bundle\PaginatorBundle\Subscriber\SlidingPaginationSubscriber">
      <tag name="knp_paginator.subscriber"/>
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <argument type="collection">
        <argument key="defaultPaginationTemplate">MopaBootstrapBundle:Pagination:sliding.html.twig</argument>
        <argument key="defaultSortableTemplate">KnpPaginatorBundle:Pagination:sortable_link.html.twig</argument>
        <argument key="defaultFiltrationTemplate">KnpPaginatorBundle:Pagination:filtration.html.twig</argument>
        <argument key="defaultPageRange">5</argument>
      </argument>
    </service>
    <service id="knp_paginator.helper.processor" class="Knp\Bundle\PaginatorBundle\Helper\Processor">
      <argument type="service" id="templating.helper.router"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="knp_paginator.templating.helper.pagination" class="Knp\Bundle\PaginatorBundle\Templating\PaginationHelper">
      <tag name="templating.helper" alias="knp_pagination"/>
      <argument type="service" id="knp_paginator.helper.processor"/>
      <argument type="service" id="debug.templating.engine.php"/>
    </service>
    <service id="knp_paginator.twig.extension.pagination" class="Knp\Bundle\PaginatorBundle\Twig\Extension\PaginationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="knp_paginator.helper.processor"/>
    </service>
    <service id="fos_user.entity_manager" class="Doctrine\ORM\EntityManager" factory-method="getManager" factory-service="doctrine" public="false">
      <argument>null</argument>
    </service>
    <service id="fos_user.security.interactive_login_listener" class="FOS\UserBundle\Security\InteractiveLoginListener">
      <tag name="kernel.event_listener" event="security.interactive_login" method="onSecurityInteractiveLogin"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.security.login_manager" class="FOS\UserBundle\Security\LoginManager">
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="fos_user.util.user_manipulator" class="FOS\UserBundle\Util\UserManipulator">
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.username_form_type" class="FOS\UserBundle\Form\Type\UsernameFormType">
      <tag name="form.type" alias="fos_user_username"/>
      <argument type="service">
        <service class="FOS\UserBundle\Form\DataTransformer\UserToUsernameTransformer" public="false">
          <argument type="service" id="fos_user.user_manager"/>
        </service>
      </argument>
    </service>
    <service id="fos_user.profile.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_profile_form</argument>
      <argument>fos_user_profile</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Profile</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.profile.form.type" class="FOS\UserBundle\Form\Type\ProfileFormType">
      <tag name="form.type" alias="fos_user_profile"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.registration.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_registration_form</argument>
      <argument>fos_user_registration</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Registration</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.registration.form.type" class="FOS\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="fos_user_registration"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.change_password.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_change_password_form</argument>
      <argument>fos_user_change_password</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>ChangePassword</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.change_password.form.type" class="FOS\UserBundle\Form\Type\ChangePasswordFormType">
      <tag name="form.type" alias="fos_user_change_password"/>
    </service>
    <service id="fos_user.change_password.form.handler.default" class="FOS\UserBundle\Form\Handler\ChangePasswordFormHandler" scope="request">
      <argument type="service" id="fos_user.change_password.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.resetting.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_resetting_form</argument>
      <argument>fos_user_resetting</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>ResetPassword</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.resetting.form.type" class="FOS\UserBundle\Form\Type\ResettingFormType">
      <tag name="form.type" alias="fos_user_resetting"/>
    </service>
    <service id="fos_user.group.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_group_form</argument>
      <argument>fos_user_group</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Registration</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.group.form.type" class="FOS\UserBundle\Form\Type\GroupFormType">
      <tag name="form.type" alias="fos_user_group"/>
      <argument>Application\Sonata\UserBundle\Entity\Group</argument>
    </service>
    <service id="sonata.user.controller.api.user" class="Sonata\UserBundle\Controller\Api\UserController">
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="sonata.user.controller.api.group" class="Sonata\UserBundle\Controller\Api\GroupController">
      <argument type="service" id="fos_user.group_manager"/>
    </service>
    <service id="sonata.user.editable_role_builder" class="Sonata\UserBundle\Security\EditableRolesBuilder">
      <argument type="service" id="security.context"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_ALLOWED_TO_SWITCH</argument>
          <argument>ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT</argument>
          <argument>ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT</argument>
        </argument>
        <argument key="SONATA" type="collection"/>
      </argument>
    </service>
    <service id="sonata.user.form.type.security_roles" class="Sonata\UserBundle\Form\Type\SecurityRolesType">
      <tag name="form.type" alias="sonata_security_roles"/>
      <argument type="service" id="sonata.user.editable_role_builder"/>
    </service>
    <service id="sonata.user.admin.user" class="Sonata\UserBundle\Admin\Entity\UserAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.user.admin.groupname%" label="users" label_catalogue="SonataUserBundle" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.user.admin.user</argument>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setUserManager">
        <argument type="service" id="fos_user.user_manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataUserBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>users</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.user.admin.group" class="Sonata\UserBundle\Admin\Entity\GroupAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.user.admin.groupname%" label="groups" label_catalogue="SonataUserBundle" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.user.admin.group</argument>
      <argument>Application\Sonata\UserBundle\Entity\Group</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataUserBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>groups</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.user.block.menu" class="Sonata\UserBundle\Block\ProfileMenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.user.block.menu</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="sonata.user.profile.menu_builder"/>
    </service>
    <service id="sonata.user.block.account" class="Sonata\UserBundle\Block\AccountBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.user.block.account</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="security.context"/>
    </service>
    <service id="sonata.user.profile.menu_builder" class="Sonata\UserBundle\Menu\ProfileMenuBuilder">
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="translator"/>
      <argument type="collection">
        <argument type="collection">
          <argument key="route">sonata_user_profile_show</argument>
          <argument key="label">sonata_profile_title</argument>
          <argument key="domain">SonataUserBundle</argument>
          <argument key="route_parameters" type="collection"/>
        </argument>
        <argument type="collection">
          <argument key="route">sonata_user_profile_edit</argument>
          <argument key="label">link_edit_profile</argument>
          <argument key="domain">SonataUserBundle</argument>
          <argument key="route_parameters" type="collection"/>
        </argument>
        <argument type="collection">
          <argument key="route">sonata_customer_addresses</argument>
          <argument key="label">link_list_addresses</argument>
          <argument key="domain">SonataCustomerBundle</argument>
          <argument key="route_parameters" type="collection"/>
        </argument>
        <argument type="collection">
          <argument key="route">sonata_order_index</argument>
          <argument key="label">order_list</argument>
          <argument key="domain">SonataOrderBundle</argument>
          <argument key="route_parameters" type="collection"/>
        </argument>
      </argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.user.profile.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>sonata_user_profile_form</argument>
      <argument>sonata_user_profile</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Profile</argument>
          <argument>Default</argument>
        </argument>
        <argument key="translation_domain">SonataUserBundle</argument>
      </argument>
    </service>
    <service id="sonata.user.profile.form.type" class="Sonata\UserBundle\Form\Type\ProfileType">
      <tag name="form.type" alias="sonata_user_profile"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="sonata.user.form.gender_list" class="Sonata\CoreBundle\Form\Type\StatusType">
      <tag name="form.type" alias="sonata_user_gender"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
      <argument>getGenderList</argument>
      <argument>sonata_user_gender</argument>
    </service>
    <service id="sonata.user.google.authenticator" class="Google\Authenticator\GoogleAuthenticator"/>
    <service id="sonata.user.google.authenticator.provider" class="Sonata\UserBundle\GoogleAuthenticator\Helper">
      <argument>demo.sonata-project.org</argument>
      <argument type="service" id="sonata.user.google.authenticator"/>
    </service>
    <service id="sonata.user.google.authenticator.interactive_login_listener" class="Sonata\UserBundle\GoogleAuthenticator\InteractiveLoginListener">
      <tag name="kernel.event_listener" event="security.interactive_login" method="onSecurityInteractiveLogin"/>
      <argument type="service" id="sonata.user.google.authenticator.provider"/>
    </service>
    <service id="sonata.user.google.authenticator.request_listener" class="Sonata\UserBundle\GoogleAuthenticator\RequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onCoreRequest" priority="-1"/>
      <argument type="service" id="sonata.user.google.authenticator.provider"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.user.twig.global" class="Sonata\UserBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.user.block.breadcrumb_index" class="Sonata\UserBundle\Block\Breadcrumb\UserIndexBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>user_index</argument>
      <argument>sonata.user.block.breadcrumb_index</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.user.block.breadcrumb_profile" class="Sonata\UserBundle\Block\Breadcrumb\UserProfileBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>user_profile</argument>
      <argument>sonata.user.block.breadcrumb_profile</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.page.site.selector.host_with_path" class="Sonata\PageBundle\Site\HostPathSiteSelector">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="47"/>
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequestRedirect" priority="0"/>
      <argument type="service" id="sonata.page.manager.site"/>
      <argument type="service" id="sonata.page.decorator_strategy"/>
      <argument type="service" id="sonata.seo.page.default"/>
    </service>
    <service id="sonata.page.response_listener" class="Sonata\PageBundle\Listener\ResponseListener" scope="request">
      <tag name="kernel.event_listener" event="kernel.response" method="onCoreResponse" priority="-1"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument type="service" id="sonata.page.page_service_manager"/>
      <argument type="service" id="sonata.page.decorator_strategy"/>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.page.request_listener" class="Sonata\PageBundle\Listener\RequestListener" scope="request">
      <tag name="kernel.event_listener" event="kernel.request" method="onCoreRequest" priority="30"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument type="service" id="sonata.page.site.selector.host_with_path"/>
      <argument type="service" id="sonata.page.decorator_strategy"/>
    </service>
    <service id="sonata.page.cms_manager_selector" class="Sonata\PageBundle\CmsManager\CmsManagerSelector">
      <tag name="kernel.event_listener" event="security.interactive_login" method="onSecurityInteractiveLogin"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.page.cms.page" class="Sonata\PageBundle\CmsManager\CmsPageManager">
      <tag name="sonata.page.manager" type="page"/>
      <argument type="service" id="sonata.page.manager.page"/>
      <argument type="service" id="sonata.page.block_interactor"/>
    </service>
    <service id="sonata.page.cms.snapshot" class="Sonata\PageBundle\CmsManager\CmsSnapshotManager">
      <tag name="sonata.page.manager" type="snapshot"/>
      <argument type="service" id="sonata.page.manager.snapshot"/>
      <argument type="service" id="sonata.page.transformer"/>
    </service>
    <service id="sonata.page.decorator_strategy" class="Sonata\PageBundle\CmsManager\DecoratorStrategy">
      <argument type="collection">
        <argument>sonata_page_cache_esi</argument>
        <argument>sonata_page_cache_ssi</argument>
        <argument>sonata_page_js_sync_cache</argument>
        <argument>sonata_page_js_async_cache</argument>
        <argument>sonata_cache_esi</argument>
        <argument>sonata_cache_ssi</argument>
        <argument>sonata_cache_js_async</argument>
        <argument>sonata_cache_js_sync</argument>
        <argument>sonata_cache_apc</argument>
      </argument>
      <argument type="collection">
        <argument>(.*)admin(.*)</argument>
        <argument>^_(.*)</argument>
      </argument>
      <argument type="collection">
        <argument>^/admin(.*)</argument>
        <argument>^/api/(.*)</argument>
      </argument>
    </service>
    <service id="sonata.page.router" class="Sonata\PageBundle\Route\CmsPageRouter">
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument type="service" id="sonata.page.site.selector.host_with_path"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="sonata.page.route.page.generator" class="Sonata\PageBundle\Route\RoutePageGenerator">
      <argument type="service" id="router.default"/>
      <argument type="service" id="sonata.page.manager.page"/>
      <argument type="service" id="sonata.page.decorator_strategy"/>
      <argument type="service" id="sonata.page.kernel.exception_listener"/>
    </service>
    <service id="sonata.page.template_manager" class="Sonata\PageBundle\Page\TemplateManager">
      <argument type="service" id="templating"/>
      <argument type="collection">
        <argument key="error_codes" type="collection">
          <argument key="404">_page_internal_error_not_found</argument>
          <argument key="500">_page_internal_error_fatal</argument>
        </argument>
      </argument>
      <call method="setAll">
        <argument type="collection">
          <argument key="default" type="service">
            <service class="Sonata\PageBundle\Model\Template" public="false">
              <argument>default</argument>
              <argument>ApplicationSonataPageBundle::demo_layout.html.twig</argument>
              <argument type="collection">
                <argument key="header" type="collection">
                  <argument key="name">Header</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">0</argument>
                    <argument key="width">100</argument>
                    <argument key="height">20</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">80</argument>
                  </argument>
                </argument>
                <argument key="content_top" type="collection">
                  <argument key="name">Top content</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">20</argument>
                    <argument key="width">100</argument>
                    <argument key="height">20</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">60</argument>
                  </argument>
                </argument>
                <argument key="content" type="collection">
                  <argument key="name">Main content</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">40</argument>
                    <argument key="width">100</argument>
                    <argument key="height">20</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">40</argument>
                  </argument>
                </argument>
                <argument key="content_bottom" type="collection">
                  <argument key="name">Bottom content</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">60</argument>
                    <argument key="width">100</argument>
                    <argument key="height">20</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">20</argument>
                  </argument>
                </argument>
                <argument key="footer" type="collection">
                  <argument key="name">Footer</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">80</argument>
                    <argument key="width">100</argument>
                    <argument key="height">20</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">0</argument>
                  </argument>
                </argument>
              </argument>
            </service>
          </argument>
          <argument key="2columns" type="service">
            <service class="Sonata\PageBundle\Model\Template" public="false">
              <argument>2 columns layout</argument>
              <argument>ApplicationSonataPageBundle::demo_2columns_layout.html.twig</argument>
              <argument type="collection">
                <argument key="header" type="collection">
                  <argument key="name">Header</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">0</argument>
                    <argument key="width">100</argument>
                    <argument key="height">20</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">80</argument>
                  </argument>
                </argument>
                <argument key="content_top" type="collection">
                  <argument key="name">Top content</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">20</argument>
                    <argument key="width">100</argument>
                    <argument key="height">20</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">60</argument>
                  </argument>
                </argument>
                <argument key="left_col" type="collection">
                  <argument key="name">Left content</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">40</argument>
                    <argument key="width">50</argument>
                    <argument key="height">20</argument>
                    <argument key="right">50</argument>
                    <argument key="bottom">40</argument>
                  </argument>
                </argument>
                <argument key="right_col" type="collection">
                  <argument key="name">Right content</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">50</argument>
                    <argument key="y">40</argument>
                    <argument key="width">50</argument>
                    <argument key="height">20</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">40</argument>
                  </argument>
                </argument>
                <argument key="content_bottom" type="collection">
                  <argument key="name">Bottom content</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">60</argument>
                    <argument key="width">100</argument>
                    <argument key="height">20</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">20</argument>
                  </argument>
                </argument>
                <argument key="footer" type="collection">
                  <argument key="name">Footer</argument>
                  <argument key="shared">false</argument>
                  <argument key="type">1</argument>
                  <argument key="blocks" type="collection"/>
                  <argument key="placement" type="collection">
                    <argument key="x">0</argument>
                    <argument key="y">80</argument>
                    <argument key="width">100</argument>
                    <argument key="height">20</argument>
                    <argument key="right">0</argument>
                    <argument key="bottom">0</argument>
                  </argument>
                </argument>
              </argument>
            </service>
          </argument>
        </argument>
      </call>
      <call method="setDefaultTemplateCode">
        <argument>default</argument>
      </call>
    </service>
    <service id="sonata.page.page_service_manager" class="Sonata\PageBundle\Page\PageServiceManager">
      <argument type="service" id="cmf_routing.router"/>
      <call method="setDefault">
        <argument type="service" id="sonata.page.service.default"/>
      </call>
      <call method="add">
        <argument>sonata.page.service.default</argument>
        <argument type="service" id="sonata.page.service.default"/>
      </call>
    </service>
    <service id="sonata.page.service.default" class="Sonata\PageBundle\Page\Service\DefaultPageService">
      <tag name="sonata.page"/>
      <argument>Default</argument>
      <argument type="service" id="sonata.page.template_manager"/>
      <argument type="service" id="sonata.seo.page.default"/>
    </service>
    <service id="sonata.page.serializer.handler.page" class="Sonata\PageBundle\Serializer\PageSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.page.manager.page"/>
    </service>
    <service id="sonata.page.serializer.handler.block" class="Sonata\PageBundle\Serializer\BlockSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.page.manager.block"/>
    </service>
    <service id="sonata.page.serializer.handler.site" class="Sonata\PageBundle\Serializer\SiteSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.page.manager.site"/>
    </service>
    <service id="sonata.page.serializer.handler.snapshot" class="Sonata\PageBundle\Serializer\SnapshotSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.page.manager.snapshot"/>
    </service>
    <service id="sonata.page.controller.api.block" class="Sonata\PageBundle\Controller\Api\BlockController">
      <argument type="service" id="sonata.page.manager.block"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.page.controller.api.page" class="Sonata\PageBundle\Controller\Api\PageController">
      <argument type="service" id="sonata.page.manager.site"/>
      <argument type="service" id="sonata.page.manager.page"/>
      <argument type="service" id="sonata.page.manager.block"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.notification.backend.postpone"/>
    </service>
    <service id="sonata.page.controller.api.site" class="Sonata\PageBundle\Controller\Api\SiteController">
      <argument type="service" id="sonata.page.manager.site"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.page.controller.api.snapshot" class="Sonata\PageBundle\Controller\Api\SnapshotController">
      <argument type="service" id="sonata.page.manager.snapshot"/>
    </service>
    <service id="sonata.page.api.form.type.site" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_page_api_form_site"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_page_api_form_site</argument>
      <argument>Application\Sonata\PageBundle\Entity\Site</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.page.api.form.type.page" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_page_api_form_page"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_page_api_form_page</argument>
      <argument>Application\Sonata\PageBundle\Entity\Page</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.page.api.form.type.block" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_page_api_form_block"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_page_api_form_block</argument>
      <argument>Application\Sonata\PageBundle\Entity\Block</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.page.admin.page" class="Sonata\PageBundle\Admin\PageAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_page" label_catalogue="%sonata.page.admin.page.translation_domain%" label="page" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.page.admin.page</argument>
      <argument>Application\Sonata\PageBundle\Entity\Page</argument>
      <argument>SonataPageBundle:PageAdmin</argument>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\PageBundle\Admin\BlockAdmin" scope="prototype">
            <tag name="sonata.admin" manager_type="orm" show_in_dashboard="" group="sonata_page" label_catalogue="%sonata.page.admin.page.translation_domain%" label="block" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.page.admin.block</argument>
            <argument>Application\Sonata\PageBundle\Entity\Block</argument>
            <argument>SonataPageBundle:BlockAdmin</argument>
            <call method="setCacheManager">
              <argument type="service" id="sonata.cache.manager"/>
            </call>
            <call method="setBlockManager">
              <argument type="service" id="sonata.block.manager"/>
            </call>
            <call method="setTranslationDomain">
              <argument>SonataPageBundle</argument>
            </call>
            <call method="setContainerBlockTypes">
              <argument type="collection">
                <argument>sonata.block.service.container</argument>
                <argument>sonata.page.block.container</argument>
                <argument>cmf.block.container</argument>
                <argument>cmf.block.slideshow</argument>
              </argument>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataPageBundle:Form:form_admin_fields.html.twig</argument>
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setLabel">
              <argument>block</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection">
                <argument key="GUEST" type="collection">
                  <argument>VIEW</argument>
                  <argument>LIST</argument>
                </argument>
                <argument key="STAFF" type="collection">
                  <argument>EDIT</argument>
                  <argument>LIST</argument>
                  <argument>CREATE</argument>
                </argument>
                <argument key="EDITOR" type="collection">
                  <argument>OPERATOR</argument>
                  <argument>EXPORT</argument>
                </argument>
                <argument key="ADMIN" type="collection">
                  <argument>MASTER</argument>
                </argument>
              </argument>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
            <call method="addExtension">
              <argument type="service" id="sonata.timeline.admin.extension"/>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\PageBundle\Admin\SnapshotAdmin" scope="prototype">
            <tag name="sonata.admin" manager_type="orm" group="sonata_page" label_catalogue="%sonata.page.admin.snapshot.translation_domain%" label="snapshot" show_in_dashboard="" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.page.admin.snapshot</argument>
            <argument>Application\Sonata\PageBundle\Entity\Snapshot</argument>
            <argument>SonataPageBundle:SnapshotAdmin</argument>
            <call method="setCacheManager">
              <argument type="service" id="sonata.cache.manager"/>
            </call>
            <call method="setTranslationDomain">
              <argument>SonataPageBundle</argument>
            </call>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setLabel">
              <argument>snapshot</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection">
                <argument key="GUEST" type="collection">
                  <argument>VIEW</argument>
                  <argument>LIST</argument>
                </argument>
                <argument key="STAFF" type="collection">
                  <argument>EDIT</argument>
                  <argument>LIST</argument>
                  <argument>CREATE</argument>
                </argument>
                <argument key="EDITOR" type="collection">
                  <argument>OPERATOR</argument>
                  <argument>EXPORT</argument>
                </argument>
                <argument key="ADMIN" type="collection">
                  <argument>MASTER</argument>
                </argument>
              </argument>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
            <call method="addExtension">
              <argument type="service" id="sonata.timeline.admin.extension"/>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="setPageManager">
        <argument type="service" id="sonata.page.manager.page"/>
      </call>
      <call method="setCacheManager">
        <argument type="service" id="sonata.cache.manager"/>
      </call>
      <call method="setSiteManager">
        <argument type="service" id="sonata.page.manager.site"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataPageBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>page</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataPageBundle:PageAdmin:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.page.admin.block" class="Sonata\PageBundle\Admin\BlockAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard="" group="sonata_page" label_catalogue="%sonata.page.admin.page.translation_domain%" label="block" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.page.admin.block</argument>
      <argument>Application\Sonata\PageBundle\Entity\Block</argument>
      <argument>SonataPageBundle:BlockAdmin</argument>
      <call method="setCacheManager">
        <argument type="service" id="sonata.cache.manager"/>
      </call>
      <call method="setBlockManager">
        <argument type="service" id="sonata.block.manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataPageBundle</argument>
      </call>
      <call method="setContainerBlockTypes">
        <argument type="collection">
          <argument>sonata.block.service.container</argument>
          <argument>sonata.page.block.container</argument>
          <argument>cmf.block.container</argument>
          <argument>cmf.block.slideshow</argument>
        </argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataPageBundle:Form:form_admin_fields.html.twig</argument>
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>block</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.page.admin.shared_block" class="Sonata\PageBundle\Admin\SharedBlockAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard="1" group="sonata_page" label_catalogue="%sonata.page.admin.page.translation_domain%" label="shared_block" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.page.admin.shared_block</argument>
      <argument>Application\Sonata\PageBundle\Entity\Block</argument>
      <argument>SonataPageBundle:BlockAdmin</argument>
      <call method="setCacheManager">
        <argument type="service" id="sonata.cache.manager"/>
      </call>
      <call method="setBlockManager">
        <argument type="service" id="sonata.block.manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataPageBundle</argument>
      </call>
      <call method="setContainerBlockTypes">
        <argument type="collection">
          <argument>sonata.block.service.container</argument>
          <argument>sonata.page.block.container</argument>
          <argument>cmf.block.container</argument>
          <argument>cmf.block.slideshow</argument>
        </argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataPageBundle:Form:form_admin_fields.html.twig</argument>
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>shared_block</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.page.admin.snapshot" class="Sonata\PageBundle\Admin\SnapshotAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_page" label_catalogue="%sonata.page.admin.snapshot.translation_domain%" label="snapshot" show_in_dashboard="" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.page.admin.snapshot</argument>
      <argument>Application\Sonata\PageBundle\Entity\Snapshot</argument>
      <argument>SonataPageBundle:SnapshotAdmin</argument>
      <call method="setCacheManager">
        <argument type="service" id="sonata.cache.manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataPageBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>snapshot</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.page.admin.site" class="Sonata\PageBundle\Admin\SiteAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_page" label_catalogue="%sonata.page.admin.site.translation_domain%" label="site" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.page.admin.site</argument>
      <argument>Application\Sonata\PageBundle\Entity\Site</argument>
      <argument>SonataPageBundle:SiteAdmin</argument>
      <argument type="service" id="sonata.page.route.page.generator"/>
      <call method="setTranslationDomain">
        <argument>SonataPageBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>site</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.page.block.container" class="Sonata\PageBundle\Block\ContainerBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.page.block.container</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.page.block.children_pages" class="Sonata\PageBundle\Block\ChildrenPagesBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.page.block.children_pages</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.page.site.selector.host_with_path"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
    </service>
    <service id="sonata.page.block.ajax" class="Sonata\PageBundle\Controller\AjaxController">
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.page.block.context_manager"/>
    </service>
    <service id="sonata.page.block.context_manager" class="Sonata\PageBundle\Block\BlockContextManager">
      <argument type="service" id="sonata.block.loader.service"/>
      <argument type="service" id="sonata.block.manager"/>
    </service>
    <service id="sonata.page.block.breadcrumb" class="Sonata\PageBundle\Block\BreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>page</argument>
      <argument>sonata.page.block.breadcrumb</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
    </service>
    <service id="sonata.page.block.shared_block" class="Sonata\PageBundle\Block\SharedBlockBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.page.block.shared_block</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.page.manager.block"/>
    </service>
    <service id="sonata.page.manager.page" class="Sonata\PageBundle\Entity\PageManager">
      <argument>Application\Sonata\PageBundle\Entity\Page</argument>
      <argument type="service" id="doctrine"/>
      <argument type="collection">
        <argument key="templateCode">default</argument>
        <argument key="enabled">true</argument>
        <argument key="routeName">null</argument>
        <argument key="name">null</argument>
        <argument key="slug">null</argument>
        <argument key="url">null</argument>
        <argument key="requestMethod">null</argument>
        <argument key="decorate">true</argument>
      </argument>
      <argument type="collection">
        <argument key="homepage" type="collection">
          <argument key="templateCode">default</argument>
          <argument key="enabled">true</argument>
          <argument key="routeName">null</argument>
          <argument key="name">null</argument>
          <argument key="slug">null</argument>
          <argument key="url">null</argument>
          <argument key="requestMethod">null</argument>
          <argument key="decorate">false</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.page.manager.snapshot" class="Sonata\PageBundle\Entity\SnapshotManager">
      <argument>Application\Sonata\PageBundle\Entity\Snapshot</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.page.manager.block" class="Sonata\PageBundle\Entity\BlockManager">
      <argument>Application\Sonata\PageBundle\Entity\Block</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.page.manager.site" class="Sonata\PageBundle\Entity\SiteManager">
      <argument>Application\Sonata\PageBundle\Entity\Site</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.page.block_interactor" class="Sonata\PageBundle\Entity\BlockInteractor">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.page.manager.block"/>
    </service>
    <service id="sonata.page.transformer" class="Sonata\PageBundle\Entity\Transformer">
      <argument type="service" id="sonata.page.manager.snapshot"/>
      <argument type="service" id="sonata.page.manager.page"/>
      <argument type="service" id="sonata.page.manager.block"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.page.form.type.page_selector" class="Sonata\PageBundle\Form\Type\PageSelectorType">
      <tag name="form.type" alias="sonata_page_selector"/>
      <argument type="service" id="sonata.page.manager.page"/>
    </service>
    <service id="sonata.page.form.create_snapshot" class="Sonata\PageBundle\Form\Type\CreateSnapshotType">
      <tag name="form.type" alias="sonata_page_create_snapshot"/>
    </service>
    <service id="sonata.page.form.template_choice" class="Sonata\PageBundle\Form\Type\TemplateChoiceType">
      <tag name="form.type" alias="sonata_page_template"/>
      <argument type="service" id="sonata.page.template_manager"/>
    </service>
    <service id="sonata.page.form.page_type_choice" class="Sonata\PageBundle\Form\Type\PageTypeChoiceType">
      <tag name="form.type" alias="sonata_page_type_choice"/>
      <argument type="service" id="sonata.page.page_service_manager"/>
    </service>
    <service id="sonata.page.cache.esi" class="Sonata\PageBundle\Cache\BlockEsiCache">
      <tag name="sonata.cache"/>
      <argument>add an unique token here</argument>
      <argument type="collection">
        <argument>if [ ! -r "/etc/varnish/secret" ]; then echo "VALID ERROR :/"; else varnishadm -S /etc/varnish/secret -T 127.0.0.1:6082 {{ COMMAND }} "{{ EXPRESSION }}"; fi;</argument>
      </argument>
      <argument type="service" id="cmf_routing.router"/>
      <argument>ban</argument>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.page.block.context_manager"/>
      <argument type="collection">
        <argument key="page" type="service" id="sonata.page.cms.page"/>
        <argument key="snapshot" type="service" id="sonata.page.cms.snapshot"/>
      </argument>
      <argument type="service" id="sonata.cache.recorder"/>
    </service>
    <service id="sonata.page.cache.ssi" class="Sonata\PageBundle\Cache\BlockSsiCache">
      <tag name="sonata.cache"/>
      <argument>add an unique token here</argument>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.page.block.context_manager"/>
      <argument type="collection">
        <argument key="page" type="service" id="sonata.page.cms.page"/>
        <argument key="snapshot" type="service" id="sonata.page.cms.snapshot"/>
      </argument>
    </service>
    <service id="sonata.page.cache.js_sync" class="Sonata\PageBundle\Cache\BlockJsCache">
      <tag name="sonata.cache"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.page.block.context_manager"/>
      <argument>true</argument>
    </service>
    <service id="sonata.page.cache.js_async" class="Sonata\PageBundle\Cache\BlockJsCache">
      <tag name="sonata.cache"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.page.block.context_manager"/>
      <argument>false</argument>
    </service>
    <service id="sonata.page.twig.global" class="Sonata\PageBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.page.kernel.exception_listener" class="Sonata\PageBundle\Listener\ExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-127"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="sonata.page.site.selector.host_with_path"/>
      <argument type="service" id="sonata.page.cms_manager_selector"/>
      <argument>true</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.page.page_service_manager"/>
      <argument type="service" id="sonata.page.decorator_strategy"/>
      <argument type="collection">
        <argument key="404">_page_internal_error_not_found</argument>
        <argument key="500">_page_internal_error_fatal</argument>
      </argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="sonata.page.notification.create_snapshots" class="Sonata\PageBundle\Consumer\CreateSnapshotsConsumer">
      <tag name="sonata.notification.consumer" type="sonata.page.create_snapshots"/>
      <argument type="service" id="sonata.notification.backend.postpone"/>
      <argument type="service" id="sonata.notification.backend.runtime"/>
      <argument type="service" id="sonata.page.manager.page"/>
    </service>
    <service id="sonata.page.notification.create_snapshot" class="Sonata\PageBundle\Consumer\CreateSnapshotConsumer">
      <tag name="sonata.notification.consumer" type="sonata.page.create_snapshot"/>
      <argument type="service" id="sonata.page.manager.snapshot"/>
      <argument type="service" id="sonata.page.manager.page"/>
      <argument type="service" id="sonata.page.transformer"/>
    </service>
    <service id="sonata.page.notification.cleanup_snapshots" class="Sonata\PageBundle\Consumer\CleanupSnapshotsConsumer">
      <tag name="sonata.notification.consumer" type="sonata.page.cleanup_snapshots"/>
      <argument type="service" id="sonata.notification.backend.postpone"/>
      <argument type="service" id="sonata.notification.backend.runtime"/>
      <argument type="service" id="sonata.page.manager.page"/>
    </service>
    <service id="sonata.page.notification.cleanup_snapshot" class="Sonata\PageBundle\Consumer\CleanupSnapshotConsumer">
      <tag name="sonata.notification.consumer" type="sonata.page.cleanup_snapshot"/>
      <argument type="service" id="sonata.page.manager.snapshot"/>
      <argument type="service" id="sonata.page.manager.page"/>
    </service>
    <service id="sonata.page.validator.unique_url" class="Sonata\PageBundle\Validator\UniqueUrlValidator">
      <tag name="validator.constraint_validator" alias="sonata.page.validator.unique_url"/>
      <argument type="service" id="sonata.page.manager.page"/>
    </service>
    <service id="sonata.news.manager.comment" class="Sonata\NewsBundle\Entity\CommentManager">
      <argument>Application\Sonata\NewsBundle\Entity\Comment</argument>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.news.manager.post"/>
    </service>
    <service id="sonata.news.manager.post" class="Sonata\NewsBundle\Entity\PostManager">
      <argument>Application\Sonata\NewsBundle\Entity\Post</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.news.status.comment" class="Sonata\NewsBundle\Status\CommentStatusRenderer">
      <tag name="sonata.status.renderer"/>
    </service>
    <service id="sonata.news.form.type.comment" class="Sonata\NewsBundle\Form\Type\CommentType">
      <tag name="form.type" alias="sonata_post_comment"/>
    </service>
    <service id="sonata.news.form.comment.status_type" class="Sonata\CoreBundle\Form\Type\StatusType">
      <tag name="form.type" alias="sonata_news_comment_status"/>
      <argument>Application\Sonata\NewsBundle\Entity\Comment</argument>
      <argument>getStatusList</argument>
      <argument>sonata_news_comment_status</argument>
    </service>
    <service id="sonata.news.permalink.date" class="Sonata\NewsBundle\Permalink\DatePermalink">
      <argument>%%1$04d/%%2$d/%%3$d/%%4$s</argument>
    </service>
    <service id="sonata.news.permalink.collection" class="Sonata\NewsBundle\Permalink\CollectionPermalink"/>
    <service id="sonata.news.hash.generator" class="Sonata\NewsBundle\Util\HashGenerator">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="sonata.news.mailer" class="Sonata\NewsBundle\Mailer\Mailer">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="sonata.news.blog"/>
      <argument type="service" id="sonata.news.hash.generator"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="templating"/>
      <argument type="collection">
        <argument key="notification" type="collection">
          <argument key="emails" type="collection">
            <argument>mail@example.org</argument>
          </argument>
          <argument key="from">no-reply@example.org</argument>
          <argument key="template">SonataNewsBundle:Mail:comment_notification.txt.twig</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.news.block.recent_posts" class="Sonata\NewsBundle\Block\RecentPostsBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.news.block.recent_posts</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.news.manager.post"/>
    </service>
    <service id="sonata.news.block.recent_comments" class="Sonata\NewsBundle\Block\RecentCommentsBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.news.block.recent_comments</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.news.manager.comment"/>
    </service>
    <service id="sonata.news.block.breadcrumb_archive" class="Sonata\NewsBundle\Block\Breadcrumb\NewsArchiveBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>news_archive</argument>
      <argument>sonata.news.block.breadcrumb_archive</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.news.block.breadcrumb_post" class="Sonata\NewsBundle\Block\Breadcrumb\NewsPostBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>news_post</argument>
      <argument>sonata.news.block.breadcrumb_post</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="sonata.news.blog"/>
    </service>
    <service id="sonata.news.serializer.handler.post" class="Sonata\NewsBundle\Serializer\PostSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.news.manager.post"/>
    </service>
    <service id="sonata.news.controller.api.comment" class="Sonata\NewsBundle\Controller\Api\CommentController">
      <argument type="service" id="sonata.news.manager.comment"/>
    </service>
    <service id="sonata.news.controller.api.post" class="Sonata\NewsBundle\Controller\Api\PostController">
      <argument type="service" id="sonata.news.manager.post"/>
      <argument type="service" id="sonata.news.manager.comment"/>
      <argument type="service" id="sonata.news.mailer"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.formatter.pool"/>
    </service>
    <service id="sonata.news.api.form.type.comment" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_news_api_form_comment"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_news_api_form_comment</argument>
      <argument>Application\Sonata\NewsBundle\Entity\Comment</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.news.api.form.type.post" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_news_api_form_post"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_news_api_form_post</argument>
      <argument>Application\Sonata\NewsBundle\Entity\Post</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.news.admin.post" class="Sonata\NewsBundle\Admin\PostAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_blog" label="posts" label_catalogue="%sonata.news.admin.post.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.news.admin.post</argument>
      <argument>Application\Sonata\NewsBundle\Entity\Post</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setUserManager">
        <argument type="service" id="fos_user.user_manager"/>
      </call>
      <call method="setPoolFormatter">
        <argument type="service" id="sonata.formatter.pool"/>
      </call>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\NewsBundle\Admin\CommentAdmin" scope="prototype">
            <tag name="sonata.admin" manager_type="orm" group="sonata_blog" label="comments" label_catalogue="%sonata.news.admin.comment.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.news.admin.comment</argument>
            <argument>Application\Sonata\NewsBundle\Entity\Comment</argument>
            <argument>SonataNewsBundle:CommentAdmin</argument>
            <call method="setTranslationDomain">
              <argument>SonataNewsBundle</argument>
            </call>
            <call method="setCommentManager">
              <argument type="service" id="sonata.news.manager.comment"/>
            </call>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setLabel">
              <argument>comments</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataNewsBundle:Admin:inner_row_comment.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_flat_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection">
                <argument key="GUEST" type="collection">
                  <argument>VIEW</argument>
                  <argument>LIST</argument>
                </argument>
                <argument key="STAFF" type="collection">
                  <argument>EDIT</argument>
                  <argument>LIST</argument>
                  <argument>CREATE</argument>
                </argument>
                <argument key="EDITOR" type="collection">
                  <argument>OPERATOR</argument>
                  <argument>EXPORT</argument>
                </argument>
                <argument key="ADMIN" type="collection">
                  <argument>MASTER</argument>
                </argument>
              </argument>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
            <call method="addExtension">
              <argument type="service" id="sonata.timeline.admin.extension"/>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataNewsBundle</argument>
      </call>
      <call method="setPermalinkGenerator">
        <argument type="service" id="sonata.news.permalink.date"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>posts</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.news.admin.comment" class="Sonata\NewsBundle\Admin\CommentAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_blog" label="comments" label_catalogue="%sonata.news.admin.comment.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.news.admin.comment</argument>
      <argument>Application\Sonata\NewsBundle\Entity\Comment</argument>
      <argument>SonataNewsBundle:CommentAdmin</argument>
      <call method="setTranslationDomain">
        <argument>SonataNewsBundle</argument>
      </call>
      <call method="setCommentManager">
        <argument type="service" id="sonata.news.manager.comment"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>comments</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataNewsBundle:Admin:inner_row_comment.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_flat_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.news.blog" class="Sonata\NewsBundle\Model\Blog">
      <argument>My Awesome Blog</argument>
      <argument>http://awesome-blog.ltd</argument>
      <argument>My Awesome blog description</argument>
      <argument type="service" id="sonata.news.permalink.date"/>
    </service>
    <service id="sonata.media.pool" class="Sonata\MediaBundle\Provider\Pool">
      <argument>default</argument>
      <call method="addContext">
        <argument>default</argument>
        <argument type="collection">
          <argument>sonata.media.provider.dailymotion</argument>
          <argument>sonata.media.provider.youtube</argument>
          <argument>sonata.media.provider.image</argument>
          <argument>sonata.media.provider.file</argument>
          <argument>sonata.media.provider.vimeo</argument>
        </argument>
        <argument type="collection">
          <argument key="default_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="default_big" type="collection">
            <argument key="width">970</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="mode">http</argument>
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>news</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="news_abstract" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="news_wide" type="collection">
            <argument key="width">820</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>sonata_collection</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="sonata_collection_preview" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="sonata_collection_wide" type="collection">
            <argument key="width">820</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>sonata_category</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="sonata_category_preview" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="sonata_category_wide" type="collection">
            <argument key="width">820</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>sonata_product</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="sonata_product_preview" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="sonata_product_small" type="collection">
            <argument key="width">300</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="sonata_product_large" type="collection">
            <argument key="width">750</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addDownloadSecurity">
        <argument>sonata.media.security.superadmin_strategy</argument>
        <argument type="service" id="sonata.media.security.superadmin_strategy"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.image</argument>
        <argument type="service" id="sonata.media.provider.image"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.file</argument>
        <argument type="service" id="sonata.media.provider.file"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.youtube</argument>
        <argument type="service" id="sonata.media.provider.youtube"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.dailymotion</argument>
        <argument type="service" id="sonata.media.provider.dailymotion"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.vimeo</argument>
        <argument type="service" id="sonata.media.provider.vimeo"/>
      </call>
    </service>
    <service id="sonata.media.thumbnail.format" class="Sonata\MediaBundle\Thumbnail\FormatThumbnail">
      <argument>jpg</argument>
    </service>
    <service id="sonata.media.provider.image" class="Sonata\MediaBundle\Provider\ImageProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.image</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="collection">
        <argument>jpg</argument>
        <argument>png</argument>
        <argument>jpeg</argument>
      </argument>
      <argument type="collection">
        <argument>image/pjpeg</argument>
        <argument>image/jpeg</argument>
        <argument>image/png</argument>
        <argument>image/x-png</argument>
      </argument>
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_image.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">970</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>news_abstract</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>news_wide</argument>
        <argument type="collection">
          <argument key="width">820</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>sonata_collection_preview</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>sonata_collection_wide</argument>
        <argument type="collection">
          <argument key="width">820</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>sonata_category_preview</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>sonata_category_wide</argument>
        <argument type="collection">
          <argument key="width">820</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>sonata_product_preview</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>sonata_product_small</argument>
        <argument type="collection">
          <argument key="width">300</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>sonata_product_large</argument>
        <argument type="collection">
          <argument key="width">750</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="quality">80</argument>
          <argument key="width">100</argument>
          <argument key="format">jpg</argument>
          <argument key="height">false</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.file" class="Sonata\MediaBundle\Provider\FileProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.file</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="collection">
        <argument>pdf</argument>
        <argument>txt</argument>
        <argument>rtf</argument>
        <argument>doc</argument>
        <argument>docx</argument>
        <argument>xls</argument>
        <argument>xlsx</argument>
        <argument>ppt</argument>
        <argument>pptx</argument>
        <argument>odt</argument>
        <argument>odg</argument>
        <argument>odp</argument>
        <argument>ods</argument>
        <argument>odc</argument>
        <argument>odf</argument>
        <argument>odb</argument>
        <argument>csv</argument>
        <argument>xml</argument>
      </argument>
      <argument type="collection">
        <argument>application/pdf</argument>
        <argument>application/x-pdf</argument>
        <argument>application/rtf</argument>
        <argument>text/html</argument>
        <argument>text/rtf</argument>
        <argument>text/plain</argument>
        <argument>application/excel</argument>
        <argument>application/msword</argument>
        <argument>application/vnd.ms-excel</argument>
        <argument>application/vnd.ms-powerpoint</argument>
        <argument>application/vnd.ms-powerpoint</argument>
        <argument>application/vnd.oasis.opendocument.text</argument>
        <argument>application/vnd.oasis.opendocument.graphics</argument>
        <argument>application/vnd.oasis.opendocument.presentation</argument>
        <argument>application/vnd.oasis.opendocument.spreadsheet</argument>
        <argument>application/vnd.oasis.opendocument.chart</argument>
        <argument>application/vnd.oasis.opendocument.formula</argument>
        <argument>application/vnd.oasis.opendocument.database</argument>
        <argument>application/vnd.oasis.opendocument.image</argument>
        <argument>text/comma-separated-values</argument>
        <argument>text/xml</argument>
        <argument>application/xml</argument>
        <argument>application/zip</argument>
      </argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_file.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">970</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="quality">80</argument>
          <argument key="width">100</argument>
          <argument key="format">jpg</argument>
          <argument key="height">false</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.youtube" class="Sonata\MediaBundle\Provider\YouTubeProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.youtube</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <argument>false</argument>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_youtube.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">970</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="quality">80</argument>
          <argument key="width">100</argument>
          <argument key="format">jpg</argument>
          <argument key="height">false</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.dailymotion" class="Sonata\MediaBundle\Provider\DailyMotionProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.dailymotion</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_dailymotion.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">970</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="quality">80</argument>
          <argument key="width">100</argument>
          <argument key="format">jpg</argument>
          <argument key="height">false</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.vimeo" class="Sonata\MediaBundle\Provider\VimeoProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.vimeo</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_vimeo.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">970</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="quality">80</argument>
          <argument key="width">100</argument>
          <argument key="format">jpg</argument>
          <argument key="height">false</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.buzz.connector.file_get_contents" class="Buzz\Client\FileGetContents">
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setProxy">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.media.buzz.connector.curl" class="Buzz\Client\Curl">
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setProxy">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.media.buzz.browser" class="Buzz\Browser">
      <argument type="service" id="sonata.media.buzz.connector.file_get_contents"/>
    </service>
    <service id="sonata.media.adapter.image.gd" class="Imagine\Gd\Imagine"/>
    <service id="sonata.media.adapter.image.imagick" class="Imagine\Imagick\Imagine"/>
    <service id="sonata.media.adapter.image.gmagick" class="Imagine\Gmagick\Imagine"/>
    <service id="sonata.media.resizer.simple" class="Sonata\MediaBundle\Resizer\SimpleResizer">
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument>inset</argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
    </service>
    <service id="sonata.media.resizer.square" class="Sonata\MediaBundle\Resizer\SquareResizer">
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument>inset</argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
    </service>
    <service id="sonata.media.cdn.server" class="Sonata\MediaBundle\CDN\Server">
      <argument>/uploads/media</argument>
    </service>
    <service id="sonata.media.twig.extension" class="Sonata\MediaBundle\Twig\Extension\MediaExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.twig.global" class="Sonata\MediaBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.block.media" class="Sonata\MediaBundle\Block\MediaBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.media</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.block.feature_media" class="Sonata\MediaBundle\Block\FeatureMediaBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.feature_media</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.block.gallery" class="Sonata\MediaBundle\Block\GalleryBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.gallery</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
    </service>
    <service id="sonata.media.security.public_strategy" class="Sonata\MediaBundle\Security\PublicDownloadStrategy">
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.media.security.forbidden_strategy" class="Sonata\MediaBundle\Security\ForbiddenDownloadStrategy">
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.media.security.superadmin_strategy" class="Sonata\MediaBundle\Security\RolesDownloadStrategy">
      <argument type="service" id="translator"/>
      <argument type="service" id="security.context"/>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
        <argument>ROLE_ADMIN</argument>
      </argument>
    </service>
    <service id="sonata.media.security.connected_strategy" class="Sonata\MediaBundle\Security\RolesDownloadStrategy">
      <argument type="service" id="translator"/>
      <argument type="service" id="security.context"/>
      <argument type="collection">
        <argument>IS_AUTHENTICATED_FULLY</argument>
        <argument>IS_AUTHENTICATED_REMEMBERED</argument>
      </argument>
    </service>
    <service id="sonata.media.extra.pixlr" class="Sonata\MediaBundle\Extra\Pixlr">
      <argument>Demo - Sonata Project</argument>
      <argument>3fe96b37e0ebfa42333bd85d870649566ead4cc8</argument>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="sonata.media.manager.media"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.form.type.media" class="Sonata\MediaBundle\Form\Type\MediaType">
      <tag name="form.type" alias="sonata_media_type"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
    </service>
    <service id="sonata.media.adapter.filesystem.local" class="Sonata\MediaBundle\Filesystem\Local">
      <argument>/var/www/sonata-3/app/../web/uploads/media</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.media.adapter.service.s3" class="AmazonS3">
      <argument type="collection"/>
    </service>
    <service id="sonata.media.filesystem.local" class="Gaufrette\Filesystem">
      <argument type="service" id="sonata.media.adapter.filesystem.local"/>
    </service>
    <service id="sonata.media.metadata.proxy" class="Sonata\MediaBundle\Metadata\ProxyMetadataBuilder">
      <argument type="service" id="service_container"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.media.metadata.amazon" class="Sonata\MediaBundle\Metadata\AmazonMetadataBuilder"/>
    <service id="sonata.media.metadata.noop" class="Sonata\MediaBundle\Metadata\NoopMetadataBuilder"/>
    <service id="sonata.media.validator.format" class="Sonata\MediaBundle\Validator\FormatValidator">
      <tag name="validator.constraint_validator" alias="sonata.media.validator.format"/>
      <argument type="service" id="sonata.media.pool"/>
    </service>
    <service id="sonata.media.serializer.handler.media" class="Sonata\MediaBundle\Serializer\MediaSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.serializer.handler.gallery" class="Sonata\MediaBundle\Serializer\GallerySerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
    </service>
    <service id="sonata.media.api.form.type.doctrine.media" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_media_api_form_doctrine_media"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_media_api_form_doctrine_media</argument>
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.media.api.form.type.media" class="Sonata\MediaBundle\Form\Type\ApiMediaType">
      <tag name="form.type" alias="sonata_media_api_form_media"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
    </service>
    <service id="sonata.media.api.form.type.gallery" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_media_api_form_gallery"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_media_api_form_gallery</argument>
      <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.media.api.form.type.gallery_has_media" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_media_api_form_gallery_has_media"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_media_api_form_gallery_has_media</argument>
      <argument>Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.media.controller.api.gallery" class="Sonata\MediaBundle\Controller\Api\GalleryController">
      <argument type="service" id="sonata.media.manager.gallery"/>
      <argument type="service" id="sonata.media.manager.media"/>
      <argument type="service" id="form.factory"/>
      <argument>Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
    </service>
    <service id="sonata.media.controller.api.media" class="Sonata\MediaBundle\Controller\Api\MediaController">
      <argument type="service" id="sonata.media.manager.media"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.media.notification.create_thumbnail" class="Sonata\MediaBundle\Consumer\CreateThumbnailConsumer">
      <tag name="sonata.notification.consumer" type="sonata.media.create_thumbnail"/>
      <argument type="service" id="sonata.media.manager.media"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.thumbnail.consumer.format" class="Sonata\MediaBundle\Thumbnail\ConsumerThumbnail">
      <argument>sonata.media.thumbnail.format</argument>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.notification.backend.postpone"/>
    </service>
    <service id="sonata.media.formatter.twig" class="Sonata\MediaBundle\Twig\Extension\FormatterMediaExtension">
      <argument type="service" id="sonata.media.twig.extension"/>
    </service>
    <service id="sonata.media.block.breadcrumb_view" class="Sonata\MediaBundle\Block\Breadcrumb\GalleryViewBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>gallery_view</argument>
      <argument>sonata.media.block.breadcrumb_view</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.media.block.breadcrumb_index" class="Sonata\MediaBundle\Block\Breadcrumb\GalleryIndexBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>gallery_index</argument>
      <argument>sonata.media.block.breadcrumb_view</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.media.block.breadcrumb_view_media" class="Sonata\MediaBundle\Block\Breadcrumb\MediaViewBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>media_view</argument>
      <argument>sonata.media.block.breadcrumb_view_media</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.media.manager.media" class="Sonata\MediaBundle\Entity\MediaManager">
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.manager.gallery" class="Sonata\MediaBundle\Entity\GalleryManager">
      <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.generator.default" class="Sonata\MediaBundle\Generator\DefaultGenerator"/>
    <service id="sonata.media.doctrine.event_subscriber" class="Sonata\MediaBundle\Listener\ORM\MediaEventSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.admin.media" class="Sonata\MediaBundle\Admin\ORM\MediaAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_media" label_catalogue="%sonata.media.admin.media.translation_domain%" label="media" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.media.admin.media</argument>
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
      <argument>SonataMediaBundle:MediaAdmin</argument>
      <argument type="service" id="sonata.media.pool"/>
      <call method="setModelManager">
        <argument type="service" id="sonata.media.admin.media.manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>media</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataMediaBundle:MediaAdmin:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataMediaBundle:MediaAdmin:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataMediaBundle:MediaAdmin:inner_row_media.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_flat_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.ckeditor.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.admin.media.manager" class="Sonata\MediaBundle\Admin\Manager\DoctrineORMManager">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.admin.gallery" class="Sonata\MediaBundle\Admin\GalleryAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_media" label="gallery" label_catalogue="%sonata.media.admin.gallery.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.media.admin.gallery</argument>
      <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
      <argument>SonataMediaBundle:GalleryAdmin</argument>
      <argument type="service" id="sonata.media.pool"/>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>gallery</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataMediaBundle:GalleryAdmin:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.admin.gallery_has_media" class="Sonata\MediaBundle\Admin\GalleryHasMediaAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard="" group="sonata_media" label_catalogue="%sonata.media.admin.gallery_has_media.translation_domain%" label="gallery_has_media" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.media.admin.gallery_has_media</argument>
      <argument>Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>gallery_has_media</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="ivory_ck_editor.form.type" class="Ivory\CKEditorBundle\Form\Type\CKEditorType">
      <tag name="form.type" alias="ckeditor"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument>bundles/ivoryckeditor/</argument>
      <argument>bundles/ivoryckeditor/ckeditor.js</argument>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
      <argument type="service" id="ivory_ck_editor.plugin_manager"/>
      <argument type="service" id="ivory_ck_editor.styles_set_manager"/>
      <argument type="service" id="ivory_ck_editor.template_manager"/>
    </service>
    <service id="ivory_ck_editor.config_manager" class="Ivory\CKEditorBundle\Model\ConfigManager">
      <call method="setConfig">
        <argument>default</argument>
        <argument type="collection">
          <argument key="filebrowserBrowseRoute">admin_sonata_media_media_ckeditor_browser</argument>
          <argument key="filebrowserImageBrowseRoute">admin_sonata_media_media_ckeditor_browser</argument>
          <argument key="filebrowserImageBrowseRouteParameters" type="collection">
            <argument key="provider">sonata.media.provider.image</argument>
          </argument>
          <argument key="filebrowserUploadRoute">admin_sonata_media_media_ckeditor_upload</argument>
          <argument key="filebrowserUploadRouteParameters" type="collection">
            <argument key="provider">sonata.media.provider.file</argument>
          </argument>
          <argument key="filebrowserImageUploadRoute">admin_sonata_media_media_ckeditor_upload</argument>
          <argument key="filebrowserImageUploadRouteParameters" type="collection">
            <argument key="provider">sonata.media.provider.image</argument>
            <argument key="context">default</argument>
          </argument>
        </argument>
      </call>
      <call method="setConfig">
        <argument>news</argument>
        <argument type="collection">
          <argument key="filebrowserBrowseRoute">admin_sonata_media_media_ckeditor_browser</argument>
          <argument key="filebrowserImageBrowseRoute">admin_sonata_media_media_ckeditor_browser</argument>
          <argument key="filebrowserImageBrowseRouteParameters" type="collection">
            <argument key="provider">sonata.media.provider.image</argument>
          </argument>
          <argument key="filebrowserUploadRoute">admin_sonata_media_media_ckeditor_upload</argument>
          <argument key="filebrowserUploadRouteParameters" type="collection">
            <argument key="provider">sonata.media.provider.file</argument>
          </argument>
          <argument key="filebrowserImageUploadRoute">admin_sonata_media_media_ckeditor_upload</argument>
          <argument key="filebrowserImageUploadRouteParameters" type="collection">
            <argument key="provider">sonata.media.provider.image</argument>
            <argument key="context">news</argument>
          </argument>
        </argument>
      </call>
      <call method="setDefaultConfig">
        <argument>default</argument>
      </call>
    </service>
    <service id="ivory_ck_editor.plugin_manager" class="Ivory\CKEditorBundle\Model\PluginManager"/>
    <service id="ivory_ck_editor.styles_set_manager" class="Ivory\CKEditorBundle\Model\StylesSetManager"/>
    <service id="ivory_ck_editor.template_manager" class="Ivory\CKEditorBundle\Model\TemplateManager"/>
    <service id="ivory_ck_editor.templating.helper" class="Ivory\CKEditorBundle\Templating\CKEditorHelper">
      <tag name="templating.helper" alias="ivory_ckeditor"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="ivory_ck_editor.twig_extension" class="Ivory\CKEditorBundle\Twig\CKEditorExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="ivory_ck_editor.templating.helper"/>
    </service>
    <service id="sonata.admin.twig.extension" class="Sonata\AdminBundle\Twig\Extension\SonataAdminExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.admin.pool" class="Sonata\AdminBundle\Admin\Pool">
      <argument type="service" id="service_container"/>
      <argument>Sonata Project</argument>
      <argument>/bundles/sonataadmin/logo_title.png</argument>
      <argument type="collection">
        <argument key="html5_validate">false</argument>
        <argument key="pager_links">5</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="javascripts" type="collection">
          <argument>assetic/sonata_admin_js.js</argument>
          <argument>assetic/sonata_jqueryui_js.js</argument>
          <argument>assetic/sonata_formatter_js.js</argument>
          <argument>bundles/sonataformatter/vendor/ckeditor/ckeditor.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>assetic/sonata_admin_css.css</argument>
          <argument>assetic/sonata_formatter_css.css</argument>
          <argument>assetic/sonata_jqueryui_css.css</argument>
          <argument>bundles/sonatademo/css/demo.css</argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
        </argument>
      </call>
      <call method="setAdminServiceIds">
        <argument type="collection">
          <argument>sonata.user.admin.user</argument>
          <argument>sonata.user.admin.group</argument>
          <argument>sonata.page.admin.page</argument>
          <argument>sonata.page.admin.block</argument>
          <argument>sonata.page.admin.shared_block</argument>
          <argument>sonata.page.admin.snapshot</argument>
          <argument>sonata.page.admin.site</argument>
          <argument>sonata.news.admin.post</argument>
          <argument>sonata.news.admin.comment</argument>
          <argument>sonata.media.admin.media</argument>
          <argument>sonata.media.admin.gallery</argument>
          <argument>sonata.media.admin.gallery_has_media</argument>
          <argument>sonata.customer.admin.customer</argument>
          <argument>sonata.customer.admin.address</argument>
          <argument>sonata.invoice.admin.invoice</argument>
          <argument>sonata.order.admin.order</argument>
          <argument>sonata.order.admin.order_element</argument>
          <argument>sonata.product.admin.product</argument>
          <argument>sonata.product.admin.product.variation</argument>
          <argument>sonata.product.admin.product.category</argument>
          <argument>sonata.product.admin.product.collection</argument>
          <argument>sonata.product.admin.delivery</argument>
          <argument>sonata.comment.admin.comment</argument>
          <argument>sonata.comment.admin.thread</argument>
          <argument>sonata.classification.admin.category</argument>
          <argument>sonata.classification.admin.tag</argument>
          <argument>sonata.classification.admin.collection</argument>
          <argument>sonata.notification.admin.message</argument>
          <argument>sonata.demo.admin.car</argument>
          <argument>sonata.demo.admin.engine</argument>
          <argument>sonata.demo.admin.inspection</argument>
          <argument>sonata.demo.admin.color</argument>
          <argument>sonata.demo.admin.material</argument>
        </argument>
      </call>
      <call method="setAdminGroups">
        <argument type="collection">
          <argument key="sonata.admin.group.content" type="collection">
            <argument key="label">sonata_content</argument>
            <argument key="label_catalogue">SonataDemoBundle</argument>
            <argument key="icon">&lt;i class="fa fa-th"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument>sonata.news.admin.comment</argument>
              <argument>sonata.news.admin.post</argument>
              <argument>sonata.media.admin.media</argument>
              <argument>sonata.media.admin.gallery</argument>
              <argument>sonata.comment.admin.thread</argument>
            </argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="sonata.admin.group.ecommerce" type="collection">
            <argument key="label">sonata_ecommerce</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-dollar"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument>sonata.customer.admin.customer</argument>
              <argument>sonata.invoice.admin.invoice</argument>
              <argument>sonata.order.admin.order</argument>
              <argument>sonata.product.admin.product</argument>
            </argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="sonata.admin.group.classification" type="collection">
            <argument key="label">sonata_classification</argument>
            <argument key="label_catalogue">SonataClassificationBundle</argument>
            <argument key="icon">&lt;i class="fa fa-sitemap"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument>sonata.classification.admin.category</argument>
              <argument>sonata.classification.admin.tag</argument>
              <argument>sonata.classification.admin.collection</argument>
            </argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="sonata.admin.group.site_builder" type="collection">
            <argument key="label">Site Builder</argument>
            <argument key="label_catalogue">SonataDemoBundle</argument>
            <argument key="icon">&lt;i class="fa fa-puzzle-piece"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument>sonata.page.admin.page</argument>
              <argument>sonata.page.admin.site</argument>
            </argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="sonata.admin.group.administration" type="collection">
            <argument key="label">sonata_administration</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-cogs"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument>sonata.user.admin.user</argument>
              <argument>sonata.user.admin.group</argument>
              <argument>sonata.page.admin.site</argument>
              <argument>sonata.notification.admin.message</argument>
            </argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="sonata.admin.group.demo" type="collection">
            <argument key="label">Demo</argument>
            <argument key="icon">&lt;i class="fa fa-play-circle"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument>sonata.demo.admin.car</argument>
              <argument>sonata.demo.admin.engine</argument>
              <argument>sonata.demo.admin.color</argument>
              <argument>sonata.demo.admin.material</argument>
            </argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
            <argument key="label_catalogue">SonataAdminBundle</argument>
          </argument>
        </argument>
      </call>
      <call method="setAdminClasses">
        <argument type="collection">
          <argument key="Application\Sonata\UserBundle\Entity\User" type="collection">
            <argument>sonata.user.admin.user</argument>
          </argument>
          <argument key="Application\Sonata\UserBundle\Entity\Group" type="collection">
            <argument>sonata.user.admin.group</argument>
          </argument>
          <argument key="Application\Sonata\PageBundle\Entity\Page" type="collection">
            <argument>sonata.page.admin.page</argument>
          </argument>
          <argument key="Application\Sonata\PageBundle\Entity\Block" type="collection">
            <argument>sonata.page.admin.block</argument>
            <argument>sonata.page.admin.shared_block</argument>
          </argument>
          <argument key="Application\Sonata\PageBundle\Entity\Snapshot" type="collection">
            <argument>sonata.page.admin.snapshot</argument>
          </argument>
          <argument key="Application\Sonata\PageBundle\Entity\Site" type="collection">
            <argument>sonata.page.admin.site</argument>
          </argument>
          <argument key="Application\Sonata\NewsBundle\Entity\Post" type="collection">
            <argument>sonata.news.admin.post</argument>
          </argument>
          <argument key="Application\Sonata\NewsBundle\Entity\Comment" type="collection">
            <argument>sonata.news.admin.comment</argument>
          </argument>
          <argument key="Application\Sonata\MediaBundle\Entity\Media" type="collection">
            <argument>sonata.media.admin.media</argument>
          </argument>
          <argument key="Application\Sonata\MediaBundle\Entity\Gallery" type="collection">
            <argument>sonata.media.admin.gallery</argument>
          </argument>
          <argument key="Application\Sonata\MediaBundle\Entity\GalleryHasMedia" type="collection">
            <argument>sonata.media.admin.gallery_has_media</argument>
          </argument>
          <argument key="Application\Sonata\CustomerBundle\Entity\Customer" type="collection">
            <argument>sonata.customer.admin.customer</argument>
          </argument>
          <argument key="Application\Sonata\CustomerBundle\Entity\Address" type="collection">
            <argument>sonata.customer.admin.address</argument>
          </argument>
          <argument key="Application\Sonata\InvoiceBundle\Entity\Invoice" type="collection">
            <argument>sonata.invoice.admin.invoice</argument>
          </argument>
          <argument key="Application\Sonata\OrderBundle\Entity\Order" type="collection">
            <argument>sonata.order.admin.order</argument>
          </argument>
          <argument key="Application\Sonata\OrderBundle\Entity\OrderElement" type="collection">
            <argument>sonata.order.admin.order_element</argument>
          </argument>
          <argument key="Application\Sonata\ProductBundle\Entity\Product" type="collection">
            <argument>sonata.product.admin.product</argument>
            <argument>sonata.product.admin.product.variation</argument>
          </argument>
          <argument key="Application\Sonata\ProductBundle\Entity\ProductCategory" type="collection">
            <argument>sonata.product.admin.product.category</argument>
          </argument>
          <argument key="Application\Sonata\ProductBundle\Entity\ProductCollection" type="collection">
            <argument>sonata.product.admin.product.collection</argument>
          </argument>
          <argument key="Application\Sonata\ProductBundle\Entity\Delivery" type="collection">
            <argument>sonata.product.admin.delivery</argument>
          </argument>
          <argument key="Application\Sonata\CommentBundle\Entity\Comment" type="collection">
            <argument>sonata.comment.admin.comment</argument>
          </argument>
          <argument key="Application\Sonata\CommentBundle\Entity\Thread" type="collection">
            <argument>sonata.comment.admin.thread</argument>
          </argument>
          <argument key="Application\Sonata\ClassificationBundle\Entity\Category" type="collection">
            <argument>sonata.classification.admin.category</argument>
          </argument>
          <argument key="Application\Sonata\ClassificationBundle\Entity\Tag" type="collection">
            <argument>sonata.classification.admin.tag</argument>
          </argument>
          <argument key="Application\Sonata\ClassificationBundle\Entity\Collection" type="collection">
            <argument>sonata.classification.admin.collection</argument>
          </argument>
          <argument key="Application\Sonata\NotificationBundle\Entity\Message" type="collection">
            <argument>sonata.notification.admin.message</argument>
          </argument>
          <argument key="Sonata\Bundle\DemoBundle\Entity\Car" type="collection">
            <argument>sonata.demo.admin.car</argument>
          </argument>
          <argument key="Sonata\Bundle\DemoBundle\Entity\Engine" type="collection">
            <argument>sonata.demo.admin.engine</argument>
          </argument>
          <argument key="Sonata\Bundle\DemoBundle\Entity\Inspection" type="collection">
            <argument>sonata.demo.admin.inspection</argument>
          </argument>
          <argument key="Sonata\Bundle\DemoBundle\Entity\Color" type="collection">
            <argument>sonata.demo.admin.color</argument>
          </argument>
          <argument key="Sonata\Bundle\DemoBundle\Entity\Material" type="collection">
            <argument>sonata.demo.admin.material</argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.route_loader" class="Sonata\AdminBundle\Route\AdminPoolLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument>sonata.user.admin.user</argument>
        <argument>sonata.user.admin.group</argument>
        <argument>sonata.page.admin.page</argument>
        <argument>sonata.page.admin.block</argument>
        <argument>sonata.page.admin.shared_block</argument>
        <argument>sonata.page.admin.snapshot</argument>
        <argument>sonata.page.admin.site</argument>
        <argument>sonata.news.admin.post</argument>
        <argument>sonata.news.admin.comment</argument>
        <argument>sonata.media.admin.media</argument>
        <argument>sonata.media.admin.gallery</argument>
        <argument>sonata.media.admin.gallery_has_media</argument>
        <argument>sonata.customer.admin.customer</argument>
        <argument>sonata.customer.admin.address</argument>
        <argument>sonata.invoice.admin.invoice</argument>
        <argument>sonata.order.admin.order</argument>
        <argument>sonata.order.admin.order_element</argument>
        <argument>sonata.product.admin.product</argument>
        <argument>sonata.product.admin.product.variation</argument>
        <argument>sonata.product.admin.product.category</argument>
        <argument>sonata.product.admin.product.collection</argument>
        <argument>sonata.product.admin.delivery</argument>
        <argument>sonata.comment.admin.comment</argument>
        <argument>sonata.comment.admin.thread</argument>
        <argument>sonata.classification.admin.category</argument>
        <argument>sonata.classification.admin.tag</argument>
        <argument>sonata.classification.admin.collection</argument>
        <argument>sonata.notification.admin.message</argument>
        <argument>sonata.demo.admin.car</argument>
        <argument>sonata.demo.admin.engine</argument>
        <argument>sonata.demo.admin.inspection</argument>
        <argument>sonata.demo.admin.color</argument>
        <argument>sonata.demo.admin.material</argument>
      </argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.helper" class="Sonata\AdminBundle\Admin\AdminHelper">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.builder.filter.factory" class="Sonata\AdminBundle\Filter\FilterFactory">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="doctrine_orm_boolean">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="doctrine_orm_callback">sonata.admin.orm.filter.type.callback</argument>
        <argument key="doctrine_orm_choice">sonata.admin.orm.filter.type.choice</argument>
        <argument key="doctrine_orm_model">sonata.admin.orm.filter.type.model</argument>
        <argument key="doctrine_orm_string">sonata.admin.orm.filter.type.string</argument>
        <argument key="doctrine_orm_number">sonata.admin.orm.filter.type.number</argument>
        <argument key="doctrine_orm_date">sonata.admin.orm.filter.type.date</argument>
        <argument key="doctrine_orm_date_range">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="doctrine_orm_datetime">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="doctrine_orm_time">sonata.admin.orm.filter.type.time</argument>
        <argument key="doctrine_orm_datetime_range">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="doctrine_orm_class">sonata.admin.orm.filter.type.class</argument>
      </argument>
    </service>
    <service id="sonata.admin.label.strategy.bc" class="Sonata\AdminBundle\Translator\BCLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.native" class="Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.noop" class="Sonata\AdminBundle\Translator\NoopLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.underscore" class="Sonata\AdminBundle\Translator\UnderscoreLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.form_component" class="Sonata\AdminBundle\Translator\FormLabelTranslatorStrategy"/>
    <service id="sonata.admin.controller.admin" class="Sonata\AdminBundle\Controller\HelperController">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.helper"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="sonata.admin.audit.manager" class="Sonata\AdminBundle\Model\AuditManager">
      <argument type="service" id="service_container"/>
      <call method="setReader">
        <argument>sonata.admin.audit.orm.reader</argument>
        <argument type="collection">
          <argument key="0">Application\Sonata\UserBundle\Entity\User</argument>
          <argument key="1">Application\Sonata\UserBundle\Entity\Group</argument>
          <argument key="2">Application\Sonata\PageBundle\Entity\Page</argument>
          <argument key="3">Application\Sonata\PageBundle\Entity\Block</argument>
          <argument key="5">Application\Sonata\PageBundle\Entity\Snapshot</argument>
          <argument key="6">Application\Sonata\PageBundle\Entity\Site</argument>
          <argument key="7">Application\Sonata\NewsBundle\Entity\Post</argument>
          <argument key="8">Application\Sonata\NewsBundle\Entity\Comment</argument>
          <argument key="9">Application\Sonata\MediaBundle\Entity\Media</argument>
          <argument key="10">Application\Sonata\MediaBundle\Entity\Gallery</argument>
          <argument key="11">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
          <argument key="12">Application\Sonata\CustomerBundle\Entity\Customer</argument>
          <argument key="13">Application\Sonata\CustomerBundle\Entity\Address</argument>
          <argument key="14">Application\Sonata\InvoiceBundle\Entity\Invoice</argument>
          <argument key="15">Application\Sonata\OrderBundle\Entity\Order</argument>
          <argument key="16">Application\Sonata\OrderBundle\Entity\OrderElement</argument>
          <argument key="17">Application\Sonata\ProductBundle\Entity\Product</argument>
          <argument key="19">Application\Sonata\ProductBundle\Entity\ProductCategory</argument>
          <argument key="20">Application\Sonata\ProductBundle\Entity\ProductCollection</argument>
          <argument key="21">Application\Sonata\ProductBundle\Entity\Delivery</argument>
          <argument key="22">Application\Sonata\CommentBundle\Entity\Comment</argument>
          <argument key="23">Application\Sonata\CommentBundle\Entity\Thread</argument>
          <argument key="24">Application\Sonata\ClassificationBundle\Entity\Category</argument>
          <argument key="25">Application\Sonata\ClassificationBundle\Entity\Tag</argument>
          <argument key="26">Application\Sonata\ClassificationBundle\Entity\Collection</argument>
          <argument key="27">Application\Sonata\NotificationBundle\Entity\Message</argument>
          <argument key="28">Sonata\Bundle\DemoBundle\Entity\Car</argument>
          <argument key="29">Sonata\Bundle\DemoBundle\Entity\Engine</argument>
          <argument key="30">Sonata\Bundle\DemoBundle\Entity\Inspection</argument>
          <argument key="31">Sonata\Bundle\DemoBundle\Entity\Color</argument>
          <argument key="32">Sonata\Bundle\DemoBundle\Entity\Material</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.exporter" class="Sonata\AdminBundle\Export\Exporter"/>
    <service id="sonata.admin.search.handler" class="Sonata\AdminBundle\Search\SearchHandler">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.event.extension" class="Sonata\AdminBundle\Event\AdminEventExtension">
      <tag name="sonata.admin.extension" global="1"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.form.type.admin" class="Sonata\AdminBundle\Form\Type\AdminType">
      <tag name="form.type" alias="sonata_type_admin"/>
    </service>
    <service id="sonata.admin.form.type.model_choice" class="Sonata\AdminBundle\Form\Type\ModelType">
      <tag name="form.type" alias="sonata_type_model"/>
    </service>
    <service id="sonata.admin.form.type.model_list" class="Sonata\AdminBundle\Form\Type\ModelTypeList">
      <tag name="form.type" alias="sonata_type_model_list"/>
    </service>
    <service id="sonata.admin.form.type.model_reference" class="Sonata\AdminBundle\Form\Type\ModelReferenceType">
      <tag name="form.type" alias="sonata_type_model_reference"/>
    </service>
    <service id="sonata.admin.form.type.model_hidden" class="Sonata\AdminBundle\Form\Type\ModelHiddenType">
      <tag name="form.type" alias="sonata_type_model_hidden"/>
    </service>
    <service id="sonata.admin.form.type.model_autocomplete" class="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">
      <tag name="form.type" alias="sonata_type_model_autocomplete"/>
    </service>
    <service id="sonata.admin.form.type.collection" class="Sonata\AdminBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_native_collection"/>
    </service>
    <service id="sonata.admin.form.extension.field" class="Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="collection">
        <argument key="email"></argument>
        <argument key="textarea"></argument>
        <argument key="text"></argument>
        <argument key="choice"></argument>
        <argument key="integer"></argument>
        <argument key="datetime">sonata-medium-date</argument>
        <argument key="date">sonata-medium-date</argument>
      </argument>
    </service>
    <service id="sonata.admin.form.filter.type.number" class="Sonata\AdminBundle\Form\Type\Filter\NumberType">
      <tag name="form.type" alias="sonata_type_filter_number"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.choice" class="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">
      <tag name="form.type" alias="sonata_type_filter_choice"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.default" class="Sonata\AdminBundle\Form\Type\Filter\DefaultType">
      <tag name="form.type" alias="sonata_type_filter_default"/>
    </service>
    <service id="sonata.admin.form.filter.type.date" class="Sonata\AdminBundle\Form\Type\Filter\DateType">
      <tag name="form.type" alias="sonata_type_filter_date"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.daterange" class="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">
      <tag name="form.type" alias="sonata_type_filter_date_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">
      <tag name="form.type" alias="sonata_type_filter_datetime"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime_range" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_filter_datetime_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.validator.inline" class="Sonata\AdminBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.admin.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.admin.route.path_info" class="Sonata\AdminBundle\Route\PathInfoBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.query_string" class="Sonata\AdminBundle\Route\QueryStringBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.default_generator" class="Sonata\AdminBundle\Route\DefaultRouteGenerator">
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="sonata.admin.route.cache"/>
    </service>
    <service id="sonata.admin.route.cache" class="Sonata\AdminBundle\Route\RoutesCache">
      <argument>/var/www/sonata-3/app/cache/dev/sonata/admin</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.route.cache_warmup" class="Sonata\AdminBundle\Route\RoutesCacheWarmUp">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="sonata.admin.route.cache"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.admin_list" class="Sonata\AdminBundle\Block\AdminListBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.admin_list</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.search_result" class="Sonata\AdminBundle\Block\AdminSearchBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.search_result</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.search.handler"/>
    </service>
    <service id="sonata.admin.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminAclManipulator">
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.object.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminObjectAclManipulator">
      <argument type="service" id="form.factory"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.manager.orm" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.admin.builder.orm_form" class="Sonata\DoctrineORMAdminBundle\Builder\FormContractor">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.admin.builder.orm_list" class="Sonata\DoctrineORMAdminBundle\Builder\ListBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_list_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:list_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</argument>
        <argument key="date">SonataIntlBundle:CRUD:list_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:list_time.html.twig</argument>
        <argument key="datetime">SonataIntlBundle:CRUD:list_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="email">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="smallint">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="bigint">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="integer">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="decimal">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="currency">SonataIntlBundle:CRUD:list_currency.html.twig</argument>
        <argument key="percent">SonataIntlBundle:CRUD:list_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:list_url.html.twig</argument>
        <argument key="html">SonataAdminBundle:CRUD:list_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_list" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_list"/>
    </service>
    <service id="sonata.admin.guesser.orm_list_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_list"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_show" class="Sonata\DoctrineORMAdminBundle\Builder\ShowBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_show_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:show_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</argument>
        <argument key="date">SonataIntlBundle:CRUD:show_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:show_time.html.twig</argument>
        <argument key="datetime">SonataIntlBundle:CRUD:show_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="smallint">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="bigint">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="integer">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="decimal">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="currency">SonataIntlBundle:CRUD:show_currency.html.twig</argument>
        <argument key="percent">SonataIntlBundle:CRUD:show_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:show_url.html.twig</argument>
        <argument key="html">SonataAdminBundle:CRUD:show_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_show" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_show"/>
    </service>
    <service id="sonata.admin.guesser.orm_show_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_show"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Builder\DatagridBuilder">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.admin.builder.filter.factory"/>
      <argument type="service" id="sonata.admin.guesser.orm_datagrid_chain"/>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Guesser\FilterTypeGuesser">
      <tag name="sonata.admin.guesser.orm_datagrid"/>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_datagrid"/>
      </argument>
    </service>
    <service id="sonata.admin.orm.filter.type.boolean" class="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_boolean"/>
    </service>
    <service id="sonata.admin.orm.filter.type.callback" class="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_callback"/>
    </service>
    <service id="sonata.admin.orm.filter.type.choice" class="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_choice"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model" class="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model"/>
    </service>
    <service id="sonata.admin.orm.filter.type.string" class="Sonata\DoctrineORMAdminBundle\Filter\StringFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_string"/>
    </service>
    <service id="sonata.admin.orm.filter.type.number" class="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_number"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date" class="Sonata\DoctrineORMAdminBundle\Filter\DateFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime"/>
    </service>
    <service id="sonata.admin.orm.filter.type.time" class="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_time"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.class" class="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_class"/>
    </service>
    <service id="sonata.admin.audit.orm.reader" class="Sonata\DoctrineORMAdminBundle\Model\AuditReader">
      <argument type="service" id="simplethings_entityaudit.reader" on-invalid="ignore"/>
    </service>
    <service id="sonata.admin_doctrine_orm.block.audit" class="Sonata\DoctrineORMAdminBundle\Block\AuditBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin_doctrine_orm.block.audit</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="simplethings_entityaudit.reader" on-invalid="ignore"/>
    </service>
    <service id="sonata.admin.manipulator.acl.object.orm" class="Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator"/>
    <service id="simplethings_entityaudit.manager" class="SimpleThings\EntityAudit\AuditManager">
      <argument type="service" id="simplethings_entityaudit.config"/>
    </service>
    <service id="simplethings_entityaudit.reader" class="SimpleThings\EntityAudit\AuditReader" factory-method="createAuditReader" factory-service="simplethings_entityaudit.manager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="simplethings_entityaudit.log_revisions_listener" class="SimpleThings\EntityAudit\EventListener\LogRevisionsListener">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="simplethings_entityaudit.manager"/>
    </service>
    <service id="simplethings_entityaudit.create_schema_listener" class="SimpleThings\EntityAudit\EventListener\CreateSchemaListener">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="simplethings_entityaudit.manager"/>
    </service>
    <service id="simplethings_entityaudit.config" class="SimpleThings\EntityAudit\AuditConfiguration">
      <call method="setAuditedEntityClasses">
        <argument type="collection">
          <argument key="0">Application\Sonata\UserBundle\Entity\User</argument>
          <argument key="1">Application\Sonata\UserBundle\Entity\Group</argument>
          <argument key="2">Application\Sonata\PageBundle\Entity\Page</argument>
          <argument key="3">Application\Sonata\PageBundle\Entity\Block</argument>
          <argument key="5">Application\Sonata\PageBundle\Entity\Snapshot</argument>
          <argument key="6">Application\Sonata\PageBundle\Entity\Site</argument>
          <argument key="7">Application\Sonata\NewsBundle\Entity\Post</argument>
          <argument key="8">Application\Sonata\NewsBundle\Entity\Comment</argument>
          <argument key="9">Application\Sonata\MediaBundle\Entity\Media</argument>
          <argument key="10">Application\Sonata\MediaBundle\Entity\Gallery</argument>
          <argument key="11">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
          <argument key="12">Application\Sonata\CustomerBundle\Entity\Customer</argument>
          <argument key="13">Application\Sonata\CustomerBundle\Entity\Address</argument>
          <argument key="14">Application\Sonata\InvoiceBundle\Entity\Invoice</argument>
          <argument key="15">Application\Sonata\OrderBundle\Entity\Order</argument>
          <argument key="16">Application\Sonata\OrderBundle\Entity\OrderElement</argument>
          <argument key="17">Application\Sonata\ProductBundle\Entity\Product</argument>
          <argument key="19">Application\Sonata\ProductBundle\Entity\ProductCategory</argument>
          <argument key="20">Application\Sonata\ProductBundle\Entity\ProductCollection</argument>
          <argument key="21">Application\Sonata\ProductBundle\Entity\Delivery</argument>
          <argument key="22">Application\Sonata\CommentBundle\Entity\Comment</argument>
          <argument key="23">Application\Sonata\CommentBundle\Entity\Thread</argument>
          <argument key="24">Application\Sonata\ClassificationBundle\Entity\Category</argument>
          <argument key="25">Application\Sonata\ClassificationBundle\Entity\Tag</argument>
          <argument key="26">Application\Sonata\ClassificationBundle\Entity\Collection</argument>
          <argument key="27">Application\Sonata\NotificationBundle\Entity\Message</argument>
          <argument key="28">Sonata\Bundle\DemoBundle\Entity\Car</argument>
          <argument key="29">Sonata\Bundle\DemoBundle\Entity\Engine</argument>
          <argument key="30">Sonata\Bundle\DemoBundle\Entity\Inspection</argument>
          <argument key="31">Sonata\Bundle\DemoBundle\Entity\Color</argument>
          <argument key="32">Sonata\Bundle\DemoBundle\Entity\Material</argument>
        </argument>
      </call>
      <call method="setGlobalIgnoreColumns">
        <argument type="collection"/>
      </call>
      <call method="setTablePrefix">
        <argument></argument>
      </call>
      <call method="setTableSuffix">
        <argument>_audit</argument>
      </call>
      <call method="setRevisionFieldName">
        <argument>rev</argument>
      </call>
      <call method="setRevisionTypeFieldName">
        <argument>revtype</argument>
      </call>
      <call method="setRevisionTableName">
        <argument>revisions</argument>
      </call>
      <call method="setRevisionIdFieldType">
        <argument>integer</argument>
      </call>
    </service>
    <service id="simplethings_entityaudit.request.current_user_listener" class="SimpleThings\EntityAudit\Request\CurrentUserListener">
      <tag name="kernel.event_listener" event="kernel.request" method="handle"/>
      <argument type="service" id="simplethings_entityaudit.config"/>
      <argument type="service" id="security.context"/>
    </service>
    <service id="fos_rest.view.exception_wrapper_handler" class="FOS\RestBundle\View\ExceptionWrapperHandler"/>
    <service id="fos_rest.serializer.exception_wrapper_serialize_handler" class="FOS\RestBundle\Serializer\ExceptionWrapperSerializeHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="fos_rest.routing.loader.controller" class="FOS\RestBundle\Routing\Loader\RestRouteLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="fos_rest.routing.loader.reader.controller"/>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.processor" class="FOS\RestBundle\Routing\Loader\RestRouteProcessor"/>
    <service id="fos_rest.routing.loader.yaml_collection" class="FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.xml_collection" class="FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.reader.controller" class="FOS\RestBundle\Routing\Loader\Reader\RestControllerReader">
      <argument type="service" id="fos_rest.routing.loader.reader.action"/>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="fos_rest.routing.loader.reader.action" class="FOS\RestBundle\Routing\Loader\Reader\RestActionReader">
      <argument type="service" id="annotation_reader"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="fos_rest.inflector.doctrine"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
    </service>
    <service id="fos_rest.format_negotiator" class="FOS\RestBundle\Util\FormatNegotiator"/>
    <service id="fos_rest.exception_format_negotiator" class="FOS\RestBundle\Util\FormatNegotiator"/>
    <service id="fos_rest.inflector.doctrine" class="FOS\RestBundle\Util\Inflector\DoctrineInflector"/>
    <service id="fos_rest.violation_formatter" class="FOS\RestBundle\Util\ViolationFormatter"/>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher" scope="request">
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_rest.violation_formatter"/>
      <argument type="service" id="validator" on-invalid="null"/>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader">
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="fos_rest.view_response_listener" class="FOS\RestBundle\EventListener\ViewResponseListener">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController" priority="-10"/>
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="100"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="fos_rest.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>fos_rest.controller.exception:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="fos_rest.controller.exception" class="FOS\RestBundle\Controller\ExceptionController">
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_rest.normalizer.camel_keys" class="FOS\RestBundle\Normalizer\CamelKeysNormalizer"/>
    <service id="fos_rest.decoder.json" class="FOS\RestBundle\Decoder\JsonDecoder"/>
    <service id="fos_rest.decoder.jsontoform" class="FOS\RestBundle\Decoder\JsonToFormDecoder"/>
    <service id="fos_rest.decoder.xml" class="FOS\RestBundle\Decoder\XmlDecoder"/>
    <service id="fos_rest.decoder_provider" class="FOS\RestBundle\Decoder\ContainerDecoderProvider">
      <argument type="collection">
        <argument key="json">fos_rest.decoder.json</argument>
        <argument key="xml">fos_rest.decoder.xml</argument>
      </argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_rest.body_listener" class="FOS\RestBundle\EventListener\BodyListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="10"/>
      <argument type="service" id="fos_rest.decoder_provider"/>
      <argument>false</argument>
      <call method="setDefaultFormat">
        <argument>null</argument>
      </call>
    </service>
    <service id="fos_rest.param_fetcher_listener" class="FOS\RestBundle\EventListener\ParamFetcherListener">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController" priority="5"/>
      <argument type="service" id="service_container"/>
      <argument>false</argument>
    </service>
    <service id="nelmio_api_doc.formatter.markdown_formatter" class="Nelmio\ApiDocBundle\Formatter\MarkdownFormatter"/>
    <service id="nelmio_api_doc.formatter.simple_formatter" class="Nelmio\ApiDocBundle\Formatter\SimpleFormatter"/>
    <service id="nelmio_api_doc.formatter.html_formatter" class="Nelmio\ApiDocBundle\Formatter\HtmlFormatter">
      <call method="setTemplatingEngine">
        <argument type="service" id="templating"/>
      </call>
      <call method="setMotdTemplate">
        <argument>NelmioApiDocBundle::Components/motd.html.twig</argument>
      </call>
      <call method="setApiName">
        <argument>API documentation</argument>
      </call>
      <call method="setEnableSandbox">
        <argument>true</argument>
      </call>
      <call method="setEndpoint">
        <argument>null</argument>
      </call>
      <call method="setRequestFormatMethod">
        <argument>format_param</argument>
      </call>
      <call method="setRequestFormats">
        <argument type="collection">
          <argument key="json">application/json</argument>
          <argument key="xml">application/xml</argument>
        </argument>
      </call>
      <call method="setDefaultRequestFormat">
        <argument>json</argument>
      </call>
      <call method="setAcceptType">
        <argument>null</argument>
      </call>
      <call method="setBodyFormats">
        <argument type="collection">
          <argument>form</argument>
          <argument>json</argument>
        </argument>
      </call>
      <call method="setDefaultBodyFormat">
        <argument>form</argument>
      </call>
      <call method="setAuthentication">
        <argument>null</argument>
      </call>
      <call method="setDefaultSectionsOpened">
        <argument>true</argument>
      </call>
    </service>
    <service id="nelmio_api_doc.formatter.swagger_formatter" class="Nelmio\ApiDocBundle\Formatter\SwaggerFormatter">
      <argument>dot_notation</argument>
      <call method="setBasePath">
        <argument>/api</argument>
      </call>
      <call method="setApiVersion">
        <argument>0.1</argument>
      </call>
      <call method="setSwaggerVersion">
        <argument>1.2</argument>
      </call>
      <call method="setInfo">
        <argument type="collection">
          <argument key="title">Symfony2</argument>
          <argument key="description">My awesome Symfony2 app!</argument>
          <argument key="TermsOfServiceUrl">null</argument>
          <argument key="contact">null</argument>
          <argument key="license">null</argument>
          <argument key="licenseUrl">null</argument>
        </argument>
      </call>
    </service>
    <service id="nelmio_api_doc.doc_comment_extractor" class="Nelmio\ApiDocBundle\Util\DocCommentExtractor"/>
    <service id="nelmio_api_doc.extractor.api_doc_extractor" class="Nelmio\ApiDocBundle\Extractor\ApiDocExtractor">
      <argument type="service" id="service_container"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="annotation_reader"/>
      <argument type="service" id="nelmio_api_doc.doc_comment_extractor"/>
      <argument type="collection">
        <argument type="service">
          <service class="Nelmio\ApiDocBundle\Extractor\Handler\FosRestHandler" public="false">
            <tag name="nelmio_api_doc.extractor.handler"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Nelmio\ApiDocBundle\Extractor\Handler\JmsSecurityExtraHandler" public="false">
            <tag name="nelmio_api_doc.extractor.handler"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Nelmio\ApiDocBundle\Extractor\Handler\SensioFrameworkExtraHandler" public="false">
            <tag name="nelmio_api_doc.extractor.handler"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Nelmio\ApiDocBundle\Extractor\Handler\PhpDocHandler" public="false">
            <tag name="nelmio_api_doc.extractor.handler"/>
            <argument type="service" id="nelmio_api_doc.doc_comment_extractor"/>
          </service>
        </argument>
      </argument>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.collection_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.form_errors_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.form_type_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.validation_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.jms_metadata_parser"/>
      </call>
    </service>
    <service id="nelmio_api_doc.form.extension.description_form_type_extension" class="Nelmio\ApiDocBundle\Form\Extension\DescriptionFormTypeExtension">
      <tag name="form.type_extension" alias="form"/>
    </service>
    <service id="nelmio_api_doc.twig.extension.extra_markdown" class="Nelmio\ApiDocBundle\Twig\Extension\MarkdownExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="nelmio_api_doc.parser.collection_parser" class="Nelmio\ApiDocBundle\Parser\CollectionParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
    </service>
    <service id="nelmio_api_doc.parser.form_errors_parser" class="Nelmio\ApiDocBundle\Parser\FormErrorsParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
    </service>
    <service id="nelmio_api_doc.event_listener.request" class="Nelmio\ApiDocBundle\EventListener\RequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <argument type="service" id="nelmio_api_doc.extractor.api_doc_extractor"/>
      <argument type="service" id="nelmio_api_doc.formatter.html_formatter"/>
      <argument>_doc</argument>
    </service>
    <service id="sonata.basket.manager" class="Sonata\Component\Basket\BasketManager">
      <argument>Application\Sonata\BasketBundle\Entity\Basket</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.basket_element.manager" class="Sonata\Component\Basket\BasketElementManager">
      <argument>Application\Sonata\BasketBundle\Entity\BasketElement</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.basket.entity.factory" class="Sonata\Component\Basket\BasketEntityFactory">
      <argument type="service" id="sonata.basket.manager"/>
      <argument type="service" id="sonata.basket.builder.standard"/>
      <argument type="service" id="sonata.price.currency.detector"/>
      <argument type="service" id="session"/>
    </service>
    <service id="sonata.basket.session.factory" class="Sonata\Component\Basket\BasketSessionFactory">
      <argument type="service" id="sonata.basket.manager"/>
      <argument type="service" id="sonata.basket.builder.standard"/>
      <argument type="service" id="sonata.price.currency.detector"/>
      <argument type="service" id="session"/>
    </service>
    <service id="sonata.basket.builder.standard" class="Sonata\Component\Basket\BasketBuilder">
      <argument type="service" id="sonata.product.pool"/>
      <argument type="service" id="sonata.address.manager"/>
      <argument type="service" id="sonata.delivery.pool"/>
      <argument type="service" id="sonata.payment.pool"/>
    </service>
    <service id="sonata.customer.selector" class="Sonata\Component\Customer\CustomerSelector">
      <argument type="service" id="sonata.customer.manager"/>
      <argument type="service" id="session"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="sonata.intl.locale_detector.request"/>
    </service>
    <service id="sonata.basket.loader.standard" class="Sonata\Component\Basket\Loader">
      <argument type="service" id="sonata.basket.entity.factory"/>
      <argument type="service" id="sonata.customer.selector"/>
    </service>
    <service id="sonata.basket" class="Sonata\Component\Basket\Basket" factory-method="getBasket" factory-service="sonata.basket.loader"/>
    <service id="sonata.basket.block.nb_items" class="Sonata\BasketBundle\Block\BasketBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.basket.block.nb_items</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.basket.validator.basket" class="Sonata\Component\Form\BasketValidator">
      <tag name="validator.constraint_validator" alias="sonata_basket_validator"/>
      <argument type="service" id="sonata.product.pool"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.basket.form.type.basket" class="Sonata\BasketBundle\Form\BasketType">
      <tag name="form.type" alias="sonata_basket_basket"/>
    </service>
    <service id="sonata.basket.form.type.address" class="Sonata\BasketBundle\Form\AddressType">
      <tag name="form.type" alias="sonata_basket_address"/>
      <argument>Application\Sonata\CustomerBundle\Entity\Address</argument>
      <argument type="service" id="sonata.basket"/>
    </service>
    <service id="sonata.basket.form.type.shipping" class="Sonata\BasketBundle\Form\ShippingType">
      <tag name="form.type" alias="sonata_basket_shipping"/>
      <argument type="service" id="sonata.delivery.pool"/>
      <argument type="service" id="sonata.delivery.selector.default"/>
    </service>
    <service id="sonata.basket.form.type.payment" class="Sonata\BasketBundle\Form\PaymentType">
      <tag name="form.type" alias="sonata_basket_payment"/>
      <argument type="service" id="sonata.address.manager"/>
      <argument type="service" id="sonata.payment.pool"/>
      <argument type="service" id="sonata.payment.selector.simple"/>
    </service>
    <service id="sonata.basket.twig.global" class="Sonata\BasketBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.basket.controller.api.basket" class="Sonata\BasketBundle\Controller\Api\BasketController">
      <argument type="service" id="sonata.basket.manager"/>
      <argument type="service" id="sonata.basket_element.manager"/>
      <argument type="service" id="sonata.product.set.manager"/>
      <argument type="service" id="sonata.basket.builder.standard"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.basket.api.form.type.basket.parent" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_basket_api_form_basket_parent"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_basket_api_form_basket_parent</argument>
      <argument>Application\Sonata\BasketBundle\Entity\Basket</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.basket.api.form.type.basket" class="Sonata\BasketBundle\Form\ApiBasketType">
      <tag name="form.type" alias="sonata_basket_api_form_basket"/>
      <argument>Application\Sonata\BasketBundle\Entity\Basket</argument>
      <argument type="service" id="sonata.price.currency.form_type"/>
    </service>
    <service id="sonata.basket.api.form.type.basket.element.parent" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_basket_api_form_basket_element_parent"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_basket_api_form_basket_element_parent</argument>
      <argument>Application\Sonata\BasketBundle\Entity\BasketElement</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.basket.api.form.type.basket_element" class="Sonata\BasketBundle\Form\ApiBasketElementType">
      <tag name="form.type" alias="sonata_basket_api_form_basket_element"/>
      <argument>Application\Sonata\BasketBundle\Entity\BasketElement</argument>
    </service>
    <service id="sonata.customer.block.recent_customers" class="Sonata\CustomerBundle\Block\RecentCustomersBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.customer.block.recent_customers</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.customer.manager"/>
    </service>
    <service id="sonata.address.manager" class="Sonata\CustomerBundle\Entity\AddressManager">
      <argument>Application\Sonata\CustomerBundle\Entity\Address</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.customer.manager" class="Sonata\CustomerBundle\Entity\CustomerManager">
      <argument>Application\Sonata\CustomerBundle\Entity\Customer</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.customer.form.address_type" class="Sonata\CustomerBundle\Form\AddressType">
      <tag name="form.type" alias="sonata_customer_address"/>
      <argument>Application\Sonata\CustomerBundle\Entity\Address</argument>
      <argument>getTypesList</argument>
      <argument>sonata_customer_address</argument>
      <argument type="service" id="sonata.basket"/>
    </service>
    <service id="sonata.customer.form.address_types_type" class="Sonata\CoreBundle\Form\Type\StatusType">
      <tag name="form.type" alias="sonata_customer_address_types"/>
      <argument>Application\Sonata\CustomerBundle\Entity\Address</argument>
      <argument>getTypesList</argument>
      <argument>sonata_customer_address_types</argument>
    </service>
    <service id="sonata.customer.controller.api.address" class="Sonata\CustomerBundle\Controller\Api\AddressController">
      <argument type="service" id="sonata.address.manager"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.customer.controller.api.customer" class="Sonata\CustomerBundle\Controller\Api\CustomerController">
      <argument type="service" id="sonata.customer.manager"/>
      <argument type="service" id="sonata.order.manager"/>
      <argument type="service" id="sonata.address.manager"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.customer.api.form.type.customer" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_customer_api_form_customer"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_customer_api_form_customer</argument>
      <argument>Application\Sonata\CustomerBundle\Entity\Customer</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.customer.api.form.type.address" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_customer_api_form_address"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_customer_api_form_address</argument>
      <argument>Application\Sonata\CustomerBundle\Entity\Address</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.customer.serializer.handler.customer" class="Sonata\CustomerBundle\Serializer\CustomerSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.customer.manager"/>
    </service>
    <service id="sonata.customer.admin.customer" class="Sonata\CustomerBundle\Admin\CustomerAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" label="customer" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.customer.admin.customer</argument>
      <argument>Application\Sonata\CustomerBundle\Entity\Customer</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\CustomerBundle\Admin\AddressAdmin" scope="prototype">
            <tag name="sonata.admin" manager_type="orm" show_in_dashboard="" group="sonata_ecommerce" label="address" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.customer.admin.address</argument>
            <argument>Application\Sonata\CustomerBundle\Entity\Address</argument>
            <argument>SonataAdminBundle:CRUD</argument>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setLabel">
              <argument>address</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection">
                <argument key="GUEST" type="collection">
                  <argument>VIEW</argument>
                  <argument>LIST</argument>
                </argument>
                <argument key="STAFF" type="collection">
                  <argument>EDIT</argument>
                  <argument>LIST</argument>
                  <argument>CREATE</argument>
                </argument>
                <argument key="EDITOR" type="collection">
                  <argument>OPERATOR</argument>
                  <argument>EXPORT</argument>
                </argument>
                <argument key="ADMIN" type="collection">
                  <argument>MASTER</argument>
                </argument>
              </argument>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
            <call method="addExtension">
              <argument type="service" id="sonata.timeline.admin.extension"/>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\OrderBundle\Admin\OrderAdmin" scope="prototype">
            <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" label="order" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.order.admin.order</argument>
            <argument>Application\Sonata\OrderBundle\Entity\Order</argument>
            <argument>SonataOrderBundle:OrderCRUD</argument>
            <call method="addChild">
              <argument type="service">
                <service class="Sonata\OrderBundle\Admin\OrderElementAdmin" scope="prototype">
                  <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" label="orderElement" show_in_dashboard="" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
                  <argument>sonata.order.admin.order_element</argument>
                  <argument>Application\Sonata\OrderBundle\Entity\OrderElement</argument>
                  <argument>SonataAdminBundle:CRUD</argument>
                  <call method="setCurrencyDetector">
                    <argument type="service" id="sonata.price.currency.detector"/>
                  </call>
                  <call method="setProductPool">
                    <argument type="service" id="sonata.product.pool"/>
                  </call>
                  <call method="setLabelTranslatorStrategy">
                    <argument type="service" id="sonata.admin.label.strategy.underscore"/>
                  </call>
                  <call method="setManagerType">
                    <argument>orm</argument>
                  </call>
                  <call method="setModelManager">
                    <argument type="service" id="sonata.admin.manager.orm"/>
                  </call>
                  <call method="setFormContractor">
                    <argument type="service" id="sonata.admin.builder.orm_form"/>
                  </call>
                  <call method="setShowBuilder">
                    <argument type="service" id="sonata.admin.builder.orm_show"/>
                  </call>
                  <call method="setListBuilder">
                    <argument type="service" id="sonata.admin.builder.orm_list"/>
                  </call>
                  <call method="setDatagridBuilder">
                    <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
                  </call>
                  <call method="setTranslator">
                    <argument type="service" id="translator"/>
                  </call>
                  <call method="setConfigurationPool">
                    <argument type="service" id="sonata.admin.pool"/>
                  </call>
                  <call method="setRouteGenerator">
                    <argument type="service" id="sonata.admin.route.default_generator"/>
                  </call>
                  <call method="setValidator">
                    <argument type="service" id="validator"/>
                  </call>
                  <call method="setSecurityHandler">
                    <argument type="service" id="sonata.admin.security.handler"/>
                  </call>
                  <call method="setMenuFactory">
                    <argument type="service" id="knp_menu.factory"/>
                  </call>
                  <call method="setRouteBuilder">
                    <argument type="service" id="sonata.admin.route.path_info"/>
                  </call>
                  <call method="setLabel">
                    <argument>orderElement</argument>
                  </call>
                  <call method="setPersistFilters">
                    <argument>false</argument>
                  </call>
                  <call method="setTemplates">
                    <argument type="collection">
                      <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                      <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                      <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
                      <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                      <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                      <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                      <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                      <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                      <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                      <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                      <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                      <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
                      <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                      <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                      <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                      <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                      <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                      <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                      <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                      <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                      <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                      <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                      <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                      <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                      <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                      <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                      <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                      <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
                    </argument>
                  </call>
                  <call method="setSecurityInformation">
                    <argument type="collection">
                      <argument key="GUEST" type="collection">
                        <argument>VIEW</argument>
                        <argument>LIST</argument>
                      </argument>
                      <argument key="STAFF" type="collection">
                        <argument>EDIT</argument>
                        <argument>LIST</argument>
                        <argument>CREATE</argument>
                      </argument>
                      <argument key="EDITOR" type="collection">
                        <argument>OPERATOR</argument>
                        <argument>EXPORT</argument>
                      </argument>
                      <argument key="ADMIN" type="collection">
                        <argument>MASTER</argument>
                      </argument>
                    </argument>
                  </call>
                  <call method="initialize"/>
                  <call method="addExtension">
                    <argument type="service" id="sonata.admin.event.extension"/>
                  </call>
                  <call method="addExtension">
                    <argument type="service" id="sonata.timeline.admin.extension"/>
                  </call>
                  <call method="setFormTheme">
                    <argument type="collection">
                      <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
                    </argument>
                  </call>
                  <call method="setFilterTheme">
                    <argument type="collection">
                      <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
                    </argument>
                  </call>
                </service>
              </argument>
            </call>
            <call method="setCurrencyDetector">
              <argument type="service" id="sonata.price.currency.detector"/>
            </call>
            <call method="setInvoiceManager">
              <argument type="service" id="sonata.invoice.manager"/>
            </call>
            <call method="setOrderManager">
              <argument type="service" id="sonata.order.manager"/>
            </call>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setLabel">
              <argument>order</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection">
                <argument key="GUEST" type="collection">
                  <argument>VIEW</argument>
                  <argument>LIST</argument>
                </argument>
                <argument key="STAFF" type="collection">
                  <argument>EDIT</argument>
                  <argument>LIST</argument>
                  <argument>CREATE</argument>
                </argument>
                <argument key="EDITOR" type="collection">
                  <argument>OPERATOR</argument>
                  <argument>EXPORT</argument>
                </argument>
                <argument key="ADMIN" type="collection">
                  <argument>MASTER</argument>
                </argument>
              </argument>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
            <call method="addExtension">
              <argument type="service" id="sonata.timeline.admin.extension"/>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>customer</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.customer.admin.address" class="Sonata\CustomerBundle\Admin\AddressAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard="" group="sonata_ecommerce" label="address" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.customer.admin.address</argument>
      <argument>Application\Sonata\CustomerBundle\Entity\Address</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>address</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.customer.block.breadcrumb_address" class="Sonata\CustomerBundle\Block\Breadcrumb\CustomerAddressBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>customer_address</argument>
      <argument>sonata.customer.block.breadcrumb_address</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.delivery.pool" class="Sonata\Component\Delivery\Pool">
      <call method="addMethod">
        <argument type="service" id="sonata.delivery.method.free_address_required"/>
      </call>
      <call method="addMethod">
        <argument type="service" id="application.sonata.delivery.take_away"/>
      </call>
    </service>
    <service id="sonata.delivery.selector.default" class="Sonata\Component\Delivery\Selector">
      <argument type="service" id="sonata.delivery.pool"/>
      <argument type="service" id="sonata.product.pool"/>
      <call method="setLogger">
        <argument type="service" id="logger"/>
      </call>
    </service>
    <service id="sonata.delivery.method.free_address_required" class="Sonata\Component\Delivery\FreeDelivery">
      <tag name="sonata.delivery.method"/>
      <argument>true</argument>
      <call method="setName">
        <argument>Free</argument>
      </call>
      <call method="setCode">
        <argument>free</argument>
      </call>
      <call method="setPriority">
        <argument>1</argument>
      </call>
      <call method="setEnabled">
        <argument>true</argument>
      </call>
    </service>
    <service id="sonata.delivery.form.delivery_choice_type" class="Sonata\Component\Form\Type\DeliveryChoiceType">
      <tag name="form.type" alias="sonata_delivery_choice"/>
      <argument type="service" id="sonata.delivery.pool"/>
    </service>
    <service id="application.sonata.delivery.take_away" class="Application\Sonata\DeliveryBundle\Model\TakeAwayDelivery">
      <tag name="sonata.delivery.method"/>
    </service>
    <service id="sonata.invoice.manager" class="Sonata\InvoiceBundle\Entity\InvoiceManager">
      <argument>Application\Sonata\InvoiceBundle\Entity\Invoice</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.invoice_element.manager" class="Sonata\InvoiceBundle\Entity\InvoiceElementManager">
      <argument>Application\Sonata\InvoiceBundle\Entity\InvoiceElement</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.invoice.form.status_type" class="Sonata\CoreBundle\Form\Type\StatusType">
      <tag name="form.type" alias="sonata_invoice_status"/>
      <argument>Application\Sonata\InvoiceBundle\Entity\Invoice</argument>
      <argument>getStatusList</argument>
      <argument>sonata_invoice_status</argument>
    </service>
    <service id="sonata.invoice.status.renderer" class="Sonata\Component\Invoice\InvoiceStatusRenderer">
      <tag name="sonata.status.renderer"/>
    </service>
    <service id="sonata.invoice.controller.api.invoice" class="Sonata\InvoiceBundle\Controller\Api\InvoiceController">
      <argument type="service" id="sonata.invoice.manager"/>
    </service>
    <service id="sonata.invoice.serializer.handler" class="Sonata\InvoiceBundle\Serializer\InvoiceSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.invoice.manager"/>
    </service>
    <service id="sonata.invoice.admin.invoice" class="Sonata\InvoiceBundle\Admin\InvoiceAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" label="invoice" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.invoice.admin.invoice</argument>
      <argument>Application\Sonata\InvoiceBundle\Entity\Invoice</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setCurrencyDetector">
        <argument type="service" id="sonata.price.currency.detector"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>invoice</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.order.block.recent_orders" class="Sonata\OrderBundle\Block\RecentOrdersBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.order.block.recent_orders</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.order.manager"/>
      <argument type="service" id="sonata.customer.manager"/>
      <argument type="service" id="security.context"/>
    </service>
    <service id="sonata.order.manager" class="Sonata\OrderBundle\Entity\OrderManager">
      <argument>Application\Sonata\OrderBundle\Entity\Order</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.order.order_element.manager" class="Sonata\OrderBundle\Entity\OrderElementManager">
      <argument>Application\Sonata\OrderBundle\Entity\OrderElement</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.order.form.status_type" class="Sonata\CoreBundle\Form\Type\StatusType">
      <tag name="form.type" alias="sonata_order_status"/>
      <argument>Application\Sonata\OrderBundle\Entity\Order</argument>
      <argument>getStatusList</argument>
      <argument>sonata_order_status</argument>
    </service>
    <service id="sonata.order.status.renderer" class="Sonata\Component\Order\OrderStatusRenderer">
      <tag name="sonata.status.renderer"/>
    </service>
    <service id="sonata.order.controller.api.order" class="Sonata\OrderBundle\Controller\Api\OrderController">
      <argument type="service" id="sonata.order.manager"/>
    </service>
    <service id="sonata.order.serializer.handler.order" class="Sonata\OrderBundle\Serializer\OrderSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.order.manager"/>
    </service>
    <service id="sonata.order.serializer.handler.order_element" class="Sonata\OrderBundle\Serializer\OrderElementSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.order.order_element.manager"/>
    </service>
    <service id="sonata.order.admin.order" class="Sonata\OrderBundle\Admin\OrderAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" label="order" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.order.admin.order</argument>
      <argument>Application\Sonata\OrderBundle\Entity\Order</argument>
      <argument>SonataOrderBundle:OrderCRUD</argument>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\OrderBundle\Admin\OrderElementAdmin" scope="prototype">
            <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" label="orderElement" show_in_dashboard="" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.order.admin.order_element</argument>
            <argument>Application\Sonata\OrderBundle\Entity\OrderElement</argument>
            <argument>SonataAdminBundle:CRUD</argument>
            <call method="setCurrencyDetector">
              <argument type="service" id="sonata.price.currency.detector"/>
            </call>
            <call method="setProductPool">
              <argument type="service" id="sonata.product.pool"/>
            </call>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setLabel">
              <argument>orderElement</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection">
                <argument key="GUEST" type="collection">
                  <argument>VIEW</argument>
                  <argument>LIST</argument>
                </argument>
                <argument key="STAFF" type="collection">
                  <argument>EDIT</argument>
                  <argument>LIST</argument>
                  <argument>CREATE</argument>
                </argument>
                <argument key="EDITOR" type="collection">
                  <argument>OPERATOR</argument>
                  <argument>EXPORT</argument>
                </argument>
                <argument key="ADMIN" type="collection">
                  <argument>MASTER</argument>
                </argument>
              </argument>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
            <call method="addExtension">
              <argument type="service" id="sonata.timeline.admin.extension"/>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="setCurrencyDetector">
        <argument type="service" id="sonata.price.currency.detector"/>
      </call>
      <call method="setInvoiceManager">
        <argument type="service" id="sonata.invoice.manager"/>
      </call>
      <call method="setOrderManager">
        <argument type="service" id="sonata.order.manager"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>order</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.order.admin.order_element" class="Sonata\OrderBundle\Admin\OrderElementAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" label="orderElement" show_in_dashboard="" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.order.admin.order_element</argument>
      <argument>Application\Sonata\OrderBundle\Entity\OrderElement</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setCurrencyDetector">
        <argument type="service" id="sonata.price.currency.detector"/>
      </call>
      <call method="setProductPool">
        <argument type="service" id="sonata.product.pool"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>orderElement</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.order.block.breadcrumb_order" class="Sonata\OrderBundle\Block\Breadcrumb\UserOrderBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>user_order</argument>
      <argument>sonata.order.block.breadcrumb_order</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.payment.consumer.order_process" class="Sonata\PaymentBundle\Consumer\PaymentProcessOrderConsumer">
      <tag name="sonata.notification.consumer" type="sonata_payment_order_process"/>
      <argument type="service" id="sonata.order.manager"/>
      <argument type="service" id="sonata.transaction.manager"/>
      <argument type="service" id="sonata.notification.backend.postpone"/>
    </service>
    <service id="sonata.payment.consumer.order_element_process" class="Sonata\PaymentBundle\Consumer\PaymentProcessOrderElementConsumer">
      <tag name="sonata.notification.consumer" type="sonata_payment_order_element_process"/>
      <argument type="service" id="sonata.order.order_element.manager"/>
      <argument type="service" id="sonata.product.pool"/>
    </service>
    <service id="sonata.transaction.manager" class="Sonata\PaymentBundle\Entity\TransactionManager">
      <argument>Application\Sonata\PaymentBundle\Entity\Transaction</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.payment.pool" class="Sonata\Component\Payment\Pool">
      <call method="addMethod">
        <argument type="service" id="sonata.payment.method.pass"/>
      </call>
      <call method="addMethod">
        <argument type="service" id="sonata.payment.method.debug"/>
      </call>
    </service>
    <service id="sonata.payment.method.pass" class="Sonata\Component\Payment\PassPayment">
      <tag name="sonata.payment.method"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="sonata.payment.browser.curl"/>
      <call method="setName">
        <argument>Pass</argument>
      </call>
      <call method="setOptions">
        <argument type="collection">
          <argument key="shop_secret_key">assdsds</argument>
          <argument key="url_callback">sonata_payment_callback</argument>
          <argument key="url_return_ko">sonata_payment_error</argument>
          <argument key="url_return_ok">sonata_payment_confirmation</argument>
        </argument>
      </call>
      <call method="setCode">
        <argument>pass</argument>
      </call>
      <call method="addTransformer">
        <argument>basket</argument>
        <argument type="service" id="sonata.payment.transformer.basket"/>
      </call>
      <call method="addTransformer">
        <argument>order</argument>
        <argument type="service" id="sonata.payment.transformer.order"/>
      </call>
      <call method="setEnabled">
        <argument>true</argument>
      </call>
    </service>
    <service id="sonata.payment.provider.scellius.none_generator" class="Sonata\Component\Payment\Scellius\NodeScelliusTransactionGenerator"/>
    <service id="sonata.payment.provider.scellius.order_generator" class="Sonata\Component\Payment\Scellius\OrderScelliusTransactionGenerator"/>
    <service id="sonata.payment.method.debug" class="Sonata\Component\Payment\Debug\DebugPayment">
      <tag name="sonata.payment.method"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="sonata.payment.browser.curl"/>
      <call method="setName">
        <argument>Debug Payment</argument>
      </call>
      <call method="setOptions">
        <argument type="collection">
          <argument key="url_callback">sonata_payment_callback</argument>
          <argument key="url_return_ko">sonata_payment_error</argument>
          <argument key="url_return_ok">sonata_payment_confirmation</argument>
        </argument>
      </call>
      <call method="setCode">
        <argument>debug</argument>
      </call>
      <call method="addTransformer">
        <argument>basket</argument>
        <argument type="service" id="sonata.payment.transformer.basket"/>
      </call>
      <call method="addTransformer">
        <argument>order</argument>
        <argument type="service" id="sonata.payment.transformer.order"/>
      </call>
      <call method="setEnabled">
        <argument>true</argument>
      </call>
    </service>
    <service id="sonata.payment.handler" class="Sonata\Component\Payment\PaymentHandler">
      <argument type="service" id="sonata.order.manager"/>
      <argument type="service" id="sonata.payment.selector.simple"/>
      <argument type="service" id="sonata.payment.generator.mysql"/>
      <argument type="service" id="sonata.transaction.manager"/>
      <argument type="service" id="sonata.notification.backend.postpone"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.payment.generator.mysql" class="Sonata\Component\Generator\MysqlReference">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.payment.transformer.pool" class="Sonata\Component\Transformer\Pool">
      <call method="addTransformer">
        <argument>order</argument>
        <argument type="service" id="sonata.payment.transformer.order"/>
      </call>
      <call method="addTransformer">
        <argument>basket</argument>
        <argument type="service" id="sonata.payment.transformer.basket"/>
      </call>
    </service>
    <service id="sonata.payment.transformer.order" class="Sonata\Component\Transformer\OrderTransformer">
      <tag name="sonata.payment.transformer"/>
      <argument type="service" id="sonata.product.pool"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.payment.transformer.invoice" class="Sonata\Component\Transformer\InvoiceTransformer">
      <tag name="sonata.payment.transformer"/>
      <argument type="service" id="sonata.invoice_element.manager"/>
      <argument type="service" id="sonata.delivery.pool"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.payment.transformer.basket" class="Sonata\Component\Transformer\BasketTransformer">
      <tag name="sonata.payment.transformer"/>
      <argument type="service" id="sonata.order.manager"/>
      <argument type="service" id="sonata.product.pool"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="logger"/>
    </service>
    <service id="sonata.payment.selector.simple" class="Sonata\Component\Payment\Selector">
      <argument type="service" id="sonata.payment.pool"/>
      <argument type="service" id="sonata.product.pool"/>
      <argument type="service" id="logger"/>
    </service>
    <service id="sonata.payment.browser.curl" class="Buzz\Browser" public="false">
      <argument type="service">
        <service class="Buzz\Client\Curl" public="false"/>
      </argument>
    </service>
    <service id="sonata.payment.form.transaction_status" class="Sonata\CoreBundle\Form\Type\StatusType">
      <tag name="form.type" alias="sonata_payment_transaction_status"/>
      <argument>Application\Sonata\PaymentBundle\Entity\Transaction</argument>
      <argument>getStatusList</argument>
      <argument>sonata_payment_transaction_status</argument>
    </service>
    <service id="sonata.product.block.breadcrumb" class="Sonata\ProductBundle\Block\CatalogBreadcrumbBlockService">
      <tag name="sonata.block"/>
      <tag name="sonata.breadcrumb"/>
      <argument>catalog</argument>
      <argument>sonata.product.block.breadcrumb</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.product.block.recent_products" class="Sonata\ProductBundle\Block\RecentProductsBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.product.block.recent_products</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.price.currency.detector"/>
    </service>
    <service id="sonata.product.block.similar_products" class="Sonata\ProductBundle\Block\SimilarProductsBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.product.block.similar_products</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.price.currency.detector"/>
      <argument type="service" id="sonata.product.finder"/>
    </service>
    <service id="sonata.product.block.categories_menu" class="Sonata\ProductBundle\Block\CategoriesMenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.product.block.categories_menu</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="sonata.product.menu.product_menu_builder"/>
    </service>
    <service id="sonata.product.block.filters_menu" class="Sonata\ProductBundle\Block\FiltersMenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.product.block.product_menu</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="sonata.product.menu.product_menu_builder"/>
    </service>
    <service id="sonata.product.block.variations_form" class="Sonata\ProductBundle\Block\VariationsFormBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.product.block.variations_form</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.product.pool"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.product.pool" class="Sonata\Component\Product\Pool">
      <call method="addProduct">
        <argument>sonata.ecommerce_demo.product.goodie</argument>
        <argument type="service">
          <service class="Sonata\Component\Product\ProductDefinition" public="false">
            <argument type="service" id="sonata.ecommerce_demo.product.goodie.type"/>
            <argument type="service" id="sonata.ecommerce_demo.product.goodie.manager"/>
          </service>
        </argument>
      </call>
      <call method="addProduct">
        <argument>sonata.ecommerce_demo.product.travel</argument>
        <argument type="service">
          <service class="Sonata\Component\Product\ProductDefinition" public="false">
            <argument type="service" id="sonata.ecommerce_demo.product.travel.type"/>
            <argument type="service" id="sonata.ecommerce_demo.product.travel.manager"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.product.subscriber.orm" class="Sonata\Component\Subscriber\ORMInheritanceSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="collection">
        <argument key="sonata.ecommerce_demo.product.goodie">Application\Sonata\ProductBundle\Entity\Goodie</argument>
        <argument key="sonata.ecommerce_demo.product.travel">Application\Sonata\ProductBundle\Entity\Travel</argument>
      </argument>
    </service>
    <service id="sonata.product.seo_iterator" class="Sonata\Component\Product\SeoProductIterator">
      <argument type="service" id="doctrine"/>
      <argument>Application\Sonata\ProductBundle\Entity\Product</argument>
      <argument type="service" id="cmf_routing.router"/>
      <argument>sonata_product_view</argument>
    </service>
    <service id="sonata.product.finder" class="Sonata\Component\Product\ProductFinder">
      <argument type="service" id="sonata.product.set.manager"/>
    </service>
    <service id="sonata.product.seo.twitter" class="Sonata\ProductBundle\Seo\Services\Twitter">
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="sonata.intl.templating.helper.number"/>
      <argument type="service" id="sonata.price.currency.detector"/>
      <argument>@sonataproject</argument>
      <argument>@th0masr</argument>
      <argument>http://demo.sonata-project.org</argument>
      <argument>reference</argument>
    </service>
    <service id="sonata.product.seo.facebook" class="Sonata\ProductBundle\Seo\Services\Facebook">
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="sonata.intl.templating.helper.number"/>
      <argument type="service" id="sonata.price.currency.detector"/>
      <argument>http://demo.sonata-project.org</argument>
      <argument>reference</argument>
    </service>
    <service id="sonata.delivery.manager" class="Sonata\ProductBundle\Entity\DeliveryManager">
      <argument>Application\Sonata\ProductBundle\Entity\Delivery</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.package.manager" class="Sonata\ProductBundle\Entity\PackageManager">
      <argument>Application\Sonata\ProductBundle\Entity\Package</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.product.set.manager" class="Sonata\ProductBundle\Entity\ProductSetManager">
      <argument>Application\Sonata\ProductBundle\Entity\Product</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.product_category.product" class="Sonata\ProductBundle\Entity\ProductCategoryManager">
      <argument>Application\Sonata\ProductBundle\Entity\ProductCategory</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.product_collection.product" class="Sonata\ProductBundle\Entity\ProductCollectionManager">
      <argument>Application\Sonata\ProductBundle\Entity\ProductCollection</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.product.form.delivery_type" class="Sonata\CoreBundle\Form\Type\StatusType">
      <tag name="form.type" alias="sonata_product_delivery_status"/>
      <argument>Application\Sonata\ProductBundle\Entity\Delivery</argument>
      <argument>getStatusList</argument>
      <argument>sonata_product_delivery_status</argument>
    </service>
    <service id="sonata.product.form.variation_choices_type" class="Sonata\Component\Form\Type\VariationChoiceType">
      <tag name="form.type" alias="sonata_product_variation_choices"/>
      <argument type="service" id="sonata.product.pool"/>
    </service>
    <service id="sonata.product.menu.product_menu_builder" class="Sonata\ProductBundle\Menu\ProductMenuBuilder">
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="sonata.product_category.product"/>
      <argument type="service" id="cmf_routing.router"/>
    </service>
    <service id="sonata.product.controller.api.product" class="Sonata\ProductBundle\Controller\Api\ProductController">
      <argument type="service" id="sonata.product.set.manager"/>
      <argument type="service" id="sonata.product.pool"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.formatter.pool"/>
    </service>
    <service id="sonata.product.api.form.type.product.parent" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_product_api_form_product_parent"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_product_api_form_product_parent</argument>
      <argument>Application\Sonata\ProductBundle\Entity\Product</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.product.api.form.type.product" class="Sonata\ProductBundle\Form\Type\ApiProductType">
      <tag name="form.type" alias="sonata_product_api_form_product"/>
      <argument type="service" id="sonata.product.pool"/>
    </service>
    <service id="sonata.product.serializer.handler.product" class="Sonata\ProductBundle\Serializer\ProductSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.product.set.manager"/>
    </service>
    <service id="sonata.product.admin.product" class="Sonata\ProductBundle\Admin\ProductAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" label="product" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.product.admin.product</argument>
      <argument>Application\Sonata\ProductBundle\Entity\Product</argument>
      <argument>SonataProductBundle:ProductAdmin</argument>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\ProductBundle\Admin\ProductCategoryAdmin" scope="prototype">
            <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" show_in_dashboard="" label="product_category" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.product.admin.product.category</argument>
            <argument>Application\Sonata\ProductBundle\Entity\ProductCategory</argument>
            <argument>SonataAdminBundle:CRUD</argument>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setLabel">
              <argument>product_category</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection">
                <argument key="GUEST" type="collection">
                  <argument>VIEW</argument>
                  <argument>LIST</argument>
                </argument>
                <argument key="STAFF" type="collection">
                  <argument>EDIT</argument>
                  <argument>LIST</argument>
                  <argument>CREATE</argument>
                </argument>
                <argument key="EDITOR" type="collection">
                  <argument>OPERATOR</argument>
                  <argument>EXPORT</argument>
                </argument>
                <argument key="ADMIN" type="collection">
                  <argument>MASTER</argument>
                </argument>
              </argument>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
            <call method="addExtension">
              <argument type="service" id="sonata.timeline.admin.extension"/>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\ProductBundle\Admin\ProductCollectionAdmin" scope="prototype">
            <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" show_in_dashboard="" label="product_collection" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.product.admin.product.collection</argument>
            <argument>Application\Sonata\ProductBundle\Entity\ProductCollection</argument>
            <argument>SonataAdminBundle:CRUD</argument>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setLabel">
              <argument>product_collection</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection">
                <argument key="GUEST" type="collection">
                  <argument>VIEW</argument>
                  <argument>LIST</argument>
                </argument>
                <argument key="STAFF" type="collection">
                  <argument>EDIT</argument>
                  <argument>LIST</argument>
                  <argument>CREATE</argument>
                </argument>
                <argument key="EDITOR" type="collection">
                  <argument>OPERATOR</argument>
                  <argument>EXPORT</argument>
                </argument>
                <argument key="ADMIN" type="collection">
                  <argument>MASTER</argument>
                </argument>
              </argument>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
            <call method="addExtension">
              <argument type="service" id="sonata.timeline.admin.extension"/>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\ProductBundle\Admin\DeliveryAdmin" scope="prototype">
            <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" show_in_dashboard="" label="delivery" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.product.admin.delivery</argument>
            <argument>Application\Sonata\ProductBundle\Entity\Delivery</argument>
            <argument>SonataAdminBundle:CRUD</argument>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setLabel">
              <argument>delivery</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection">
                <argument key="GUEST" type="collection">
                  <argument>VIEW</argument>
                  <argument>LIST</argument>
                </argument>
                <argument key="STAFF" type="collection">
                  <argument>EDIT</argument>
                  <argument>LIST</argument>
                  <argument>CREATE</argument>
                </argument>
                <argument key="EDITOR" type="collection">
                  <argument>OPERATOR</argument>
                  <argument>EXPORT</argument>
                </argument>
                <argument key="ADMIN" type="collection">
                  <argument>MASTER</argument>
                </argument>
              </argument>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
            <call method="addExtension">
              <argument type="service" id="sonata.timeline.admin.extension"/>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\ProductBundle\Admin\ProductVariationAdmin" scope="prototype">
            <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" show_in_menu="" show_in_dashboard="" label="product_variation" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.product.admin.product.variation</argument>
            <argument>Application\Sonata\ProductBundle\Entity\Product</argument>
            <argument>SonataProductBundle:ProductVariationAdmin</argument>
            <call method="setProductPool">
              <argument type="service" id="sonata.product.pool"/>
            </call>
            <call method="setCurrencyDetector">
              <argument type="service" id="sonata.price.currency.detector"/>
            </call>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setLabel">
              <argument>product_variation</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection">
                <argument key="GUEST" type="collection">
                  <argument>VIEW</argument>
                  <argument>LIST</argument>
                </argument>
                <argument key="STAFF" type="collection">
                  <argument>EDIT</argument>
                  <argument>LIST</argument>
                  <argument>CREATE</argument>
                </argument>
                <argument key="EDITOR" type="collection">
                  <argument>OPERATOR</argument>
                  <argument>EXPORT</argument>
                </argument>
                <argument key="ADMIN" type="collection">
                  <argument>MASTER</argument>
                </argument>
              </argument>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
            <call method="addExtension">
              <argument type="service" id="sonata.timeline.admin.extension"/>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="setProductPool">
        <argument type="service" id="sonata.product.pool"/>
      </call>
      <call method="setCurrencyDetector">
        <argument type="service" id="sonata.price.currency.detector"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>product</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.product.admin.product.variation" class="Sonata\ProductBundle\Admin\ProductVariationAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" show_in_menu="" show_in_dashboard="" label="product_variation" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.product.admin.product.variation</argument>
      <argument>Application\Sonata\ProductBundle\Entity\Product</argument>
      <argument>SonataProductBundle:ProductVariationAdmin</argument>
      <call method="setProductPool">
        <argument type="service" id="sonata.product.pool"/>
      </call>
      <call method="setCurrencyDetector">
        <argument type="service" id="sonata.price.currency.detector"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>product_variation</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.product.admin.product.category" class="Sonata\ProductBundle\Admin\ProductCategoryAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" show_in_dashboard="" label="product_category" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.product.admin.product.category</argument>
      <argument>Application\Sonata\ProductBundle\Entity\ProductCategory</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>product_category</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.product.admin.product.collection" class="Sonata\ProductBundle\Admin\ProductCollectionAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" show_in_dashboard="" label="product_collection" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.product.admin.product.collection</argument>
      <argument>Application\Sonata\ProductBundle\Entity\ProductCollection</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>product_collection</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.product.admin.delivery" class="Sonata\ProductBundle\Admin\DeliveryAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_ecommerce" show_in_dashboard="" label="delivery" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.product.admin.delivery</argument>
      <argument>Application\Sonata\ProductBundle\Entity\Delivery</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>delivery</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.product.admin.product.manager" class="Sonata\ProductBundle\Model\DoctrineModelManager">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.product.pool"/>
    </service>
    <service id="sonata.price.currency.manager" class="Sonata\Component\Currency\CurrencyManager">
      <argument>Sonata\Component\Currency\CurrencyManager</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.price.currency.calculator" class="Sonata\Component\Currency\CurrencyPriceCalculator"/>
    <service id="sonata.price.currency.detector" class="Sonata\Component\Currency\CurrencyDetector">
      <argument>EUR</argument>
      <argument type="service" id="sonata.price.currency.manager"/>
    </service>
    <service id="sonata.price.currency.data_transformer" class="Sonata\Component\Currency\CurrencyDataTransformer">
      <argument type="service" id="sonata.price.currency.manager"/>
    </service>
    <service id="sonata.price.currency.form_type" class="Sonata\Component\Currency\CurrencyFormType">
      <tag name="form.type" alias="sonata_currency"/>
      <argument type="service" id="sonata.price.currency.data_transformer"/>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber">
      <tag name="jms_serializer.event_subscriber"/>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="1" type="collection">
          <argument key="sonata_page_page_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.page.serializer.handler.page</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.page.serializer.handler.page</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.page.serializer.handler.page</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_page_block_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.page.serializer.handler.block</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.page.serializer.handler.block</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.page.serializer.handler.block</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_page_site_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.page.serializer.handler.site</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.page.serializer.handler.site</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.page.serializer.handler.site</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_page_snapshot_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.page.serializer.handler.snapshot</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.page.serializer.handler.snapshot</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.page.serializer.handler.snapshot</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_news_post_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.news.serializer.handler.post</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.news.serializer.handler.post</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.news.serializer.handler.post</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_media_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_gallery_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="FOS\RestBundle\Util\ExceptionWrapper" type="collection">
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.exception_wrapper_serialize_handler</argument>
              <argument>serializeToJson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.exception_wrapper_serialize_handler</argument>
              <argument>serializeToXml</argument>
            </argument>
          </argument>
          <argument key="sonata_customer_customer_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.customer.serializer.handler.customer</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.customer.serializer.handler.customer</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.customer.serializer.handler.customer</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_invoice_invoice_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.invoice.serializer.handler</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.invoice.serializer.handler</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.invoice.serializer.handler</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_order_order_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.order.serializer.handler.order</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.order.serializer.handler.order</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.order.serializer.handler.order</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_order_orderelement_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.order.serializer.handler.order_element</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.order.serializer.handler.order_element</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.order.serializer.handler.order_element</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_product_product_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.product.serializer.handler.product</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.product.serializer.handler.product</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.product.serializer.handler.product</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToyml</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_category_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_collection_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_tag_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
        </argument>
        <argument key="2" type="collection">
          <argument key="sonata_page_page_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.page.serializer.handler.page</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.page.serializer.handler.page</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.page.serializer.handler.page</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_page_block_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.page.serializer.handler.block</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.page.serializer.handler.block</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.page.serializer.handler.block</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_page_site_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.page.serializer.handler.site</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.page.serializer.handler.site</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.page.serializer.handler.site</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_page_snapshot_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.page.serializer.handler.snapshot</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.page.serializer.handler.snapshot</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.page.serializer.handler.snapshot</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_news_post_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.news.serializer.handler.post</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.news.serializer.handler.post</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.news.serializer.handler.post</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_media_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_gallery_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_customer_customer_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.customer.serializer.handler.customer</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.customer.serializer.handler.customer</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.customer.serializer.handler.customer</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_invoice_invoice_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.invoice.serializer.handler</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.invoice.serializer.handler</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.invoice.serializer.handler</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_order_order_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.order.serializer.handler.order</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.order.serializer.handler.order</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.order.serializer.handler.order</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_order_orderelement_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.order.serializer.handler.order_element</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.order.serializer.handler.order_element</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.order.serializer.handler.order_element</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_product_product_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.product.serializer.handler.product</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.product.serializer.handler.product</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.product.serializer.handler.product</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromyml</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_category_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_collection_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_tag_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sO</argument>
      <argument>Europe/Moscow</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.php_collection_handler" class="JMS\Serializer\Handler\PhpCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.form_error_handler" class="JMS\Serializer\Handler\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service">
        <service class="Metadata\Driver\LazyLoadingDriver" public="false">
          <argument type="service" id="service_container"/>
          <argument>jms_serializer.metadata_driver</argument>
        </service>
      </argument>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service">
          <service class="Metadata\Cache\FileCache" public="false">
            <argument>/var/www/sonata-3/app/cache/dev/jms_serializer</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\JsonSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\JsonDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\XmlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\XmlDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <call method="setDoctypeWhitelist">
        <argument type="collection"/>
      </call>
    </service>
    <service id="jms_serializer.yaml_serialization_visitor" class="JMS\Serializer\YamlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="yml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="fos_comment.entity_manager" class="Doctrine\ORM\EntityManager" factory-method="getManager" factory-service="doctrine" public="false">
      <argument>null</argument>
    </service>
    <service id="fos_comment.manager.thread.default" class="FOS\CommentBundle\Entity\ThreadManager">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_comment.entity_manager"/>
      <argument>Application\Sonata\CommentBundle\Entity\Thread</argument>
    </service>
    <service id="fos_comment.manager.comment.default" class="FOS\CommentBundle\Entity\CommentManager">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_comment.sorting_factory"/>
      <argument type="service" id="fos_comment.entity_manager"/>
      <argument>Application\Sonata\CommentBundle\Entity\Comment</argument>
    </service>
    <service id="fos_comment.manager.vote.default" class="FOS\CommentBundle\Entity\VoteManager">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_comment.entity_manager"/>
      <argument>FOS\CommentBundle\Entity\Vote</argument>
    </service>
    <service id="fos_comment.listener.comment_vote_score" class="FOS\CommentBundle\EventListener\CommentVoteScoreListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="fos_comment.listener.thread_counters" class="FOS\CommentBundle\EventListener\ThreadCountersListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_comment.manager.comment.default"/>
    </service>
    <service id="fos_comment.listener.thread_permalink" class="FOS\CommentBundle\EventListener\ThreadPermalinkListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="fos_comment.listener.comment_blamer" class="FOS\CommentBundle\EventListener\CommentBlamerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.context" on-invalid="null"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="fos_comment.listener.vote_blamer" class="FOS\CommentBundle\EventListener\VoteBlamerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.context" on-invalid="null"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="fos_comment.listener.closed_threads" class="FOS\CommentBundle\EventListener\ClosedThreadListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="fos_comment.form_type.comment.default" class="FOS\CommentBundle\Form\CommentType">
      <tag name="form.type" alias="fos_comment_comment"/>
      <argument>Application\Sonata\CommentBundle\Entity\Comment</argument>
    </service>
    <service id="fos_comment.form_type.commentable_thread.default" class="FOS\CommentBundle\Form\CommentableThreadType">
      <tag name="form.type" alias="fos_comment_commentable_thread"/>
      <argument>Application\Sonata\CommentBundle\Entity\Thread</argument>
    </service>
    <service id="fos_comment.form_type.delete_comment.default" class="FOS\CommentBundle\Form\DeleteCommentType">
      <tag name="form.type" alias="fos_comment_delete_comment"/>
      <argument>Application\Sonata\CommentBundle\Entity\Comment</argument>
    </service>
    <service id="fos_comment.form_type.thread.default" class="FOS\CommentBundle\Form\ThreadType">
      <tag name="form.type" alias="fos_comment_thread"/>
      <argument>Application\Sonata\CommentBundle\Entity\Thread</argument>
    </service>
    <service id="fos_comment.form_type.vote.default" class="FOS\CommentBundle\Form\VoteType">
      <tag name="form.type" alias="fos_comment_vote"/>
      <argument>FOS\CommentBundle\Entity\Vote</argument>
    </service>
    <service id="fos_comment.sorting_factory" class="FOS\CommentBundle\Sorting\SortingFactory">
      <argument type="collection">
        <argument key="date_asc" type="service">
          <service class="FOS\CommentBundle\Sorting\DateSorting" public="false">
            <tag name="fos_comment.sorter" alias="date_asc"/>
            <argument>ASC</argument>
          </service>
        </argument>
        <argument key="date_desc" type="service">
          <service class="FOS\CommentBundle\Sorting\DateSorting" public="false">
            <tag name="fos_comment.sorter" alias="date_desc"/>
            <argument>DESC</argument>
          </service>
        </argument>
      </argument>
      <argument>date_desc</argument>
    </service>
    <service id="sonata.comment.event.sonata.comment" class="Sonata\CommentBundle\Event\CommentThreadAsyncListener">
      <tag name="kernel.event_listener" event="sonata.block.event.sonata.comment" method="onBlock"/>
      <call method="setBlockService">
        <argument type="service" id="sonata.comment.block.thread.async"/>
      </call>
    </service>
    <service id="sonata.comment.form.comment_type" class="Sonata\CommentBundle\Form\CommentType">
      <tag name="form.type" alias="sonata_comment_comment"/>
      <argument type="service" id="sonata.comment.note.provider"/>
      <call method="setIsSignedInterface">
        <argument>false</argument>
      </call>
    </service>
    <service id="sonata.comment.form.comment_status_type" class="Sonata\CoreBundle\Form\Type\StatusType">
      <tag name="form.type" alias="sonata_comment_status"/>
      <argument>Application\Sonata\CommentBundle\Entity\Comment</argument>
      <argument>getStateList</argument>
      <argument>sonata_comment_status</argument>
    </service>
    <service id="sonata.comment.note.provider" class="Sonata\CommentBundle\Note\NoteProvider">
      <argument type="service" id="sonata.comment.manager.comment"/>
      <argument type="collection">
        <argument>1</argument>
        <argument>2</argument>
        <argument>3</argument>
        <argument>4</argument>
        <argument>5</argument>
      </argument>
    </service>
    <service id="sonata.comment.manager.comment" class="Sonata\CommentBundle\Manager\CommentManager">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_comment.sorting_factory"/>
      <argument type="service" id="fos_comment.entity_manager"/>
      <argument>Application\Sonata\CommentBundle\Entity\Comment</argument>
    </service>
    <service id="sonata.comment.manager.thread" class="Sonata\CommentBundle\Manager\ThreadManager">
      <argument type="service" id="sonata.comment.manager.comment"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_comment.entity_manager"/>
      <argument>Application\Sonata\CommentBundle\Entity\Thread</argument>
    </service>
    <service id="sonata.comment.status.comment_renderer" class="Sonata\CommentBundle\Renderer\CommentStatusRenderer">
      <tag name="sonata.status.renderer"/>
    </service>
    <service id="sonata.comment.block.thread.async" class="Sonata\CommentBundle\Block\CommentThreadAsyncBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.comment.block.thread.async</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.comment.admin.comment" class="Sonata\CommentBundle\Admin\Entity\CommentAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.comment.admin.groupname%" show_in_menu="" show_in_dashboard="" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.comment.admin.comment</argument>
      <argument>Application\Sonata\CommentBundle\Entity\Comment</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataCommentBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>-</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.comment.admin.thread" class="Sonata\CommentBundle\Admin\Entity\ThreadAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.comment.admin.groupname%" label="conversation" label_catalogue="SonataCommentBundle" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.comment.admin.thread</argument>
      <argument>Application\Sonata\CommentBundle\Entity\Thread</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataCommentBundle</argument>
      </call>
      <call method="addChild">
        <argument type="service">
          <service class="Sonata\CommentBundle\Admin\Entity\CommentAdmin" scope="prototype">
            <tag name="sonata.admin" manager_type="orm" group="%sonata.comment.admin.groupname%" show_in_menu="" show_in_dashboard="" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
            <argument>sonata.comment.admin.comment</argument>
            <argument>Application\Sonata\CommentBundle\Entity\Comment</argument>
            <argument>SonataAdminBundle:CRUD</argument>
            <call method="setTranslationDomain">
              <argument>SonataCommentBundle</argument>
            </call>
            <call method="setLabelTranslatorStrategy">
              <argument type="service" id="sonata.admin.label.strategy.underscore"/>
            </call>
            <call method="setManagerType">
              <argument>orm</argument>
            </call>
            <call method="setModelManager">
              <argument type="service" id="sonata.admin.manager.orm"/>
            </call>
            <call method="setFormContractor">
              <argument type="service" id="sonata.admin.builder.orm_form"/>
            </call>
            <call method="setShowBuilder">
              <argument type="service" id="sonata.admin.builder.orm_show"/>
            </call>
            <call method="setListBuilder">
              <argument type="service" id="sonata.admin.builder.orm_list"/>
            </call>
            <call method="setDatagridBuilder">
              <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
            </call>
            <call method="setTranslator">
              <argument type="service" id="translator"/>
            </call>
            <call method="setConfigurationPool">
              <argument type="service" id="sonata.admin.pool"/>
            </call>
            <call method="setRouteGenerator">
              <argument type="service" id="sonata.admin.route.default_generator"/>
            </call>
            <call method="setValidator">
              <argument type="service" id="validator"/>
            </call>
            <call method="setSecurityHandler">
              <argument type="service" id="sonata.admin.security.handler"/>
            </call>
            <call method="setMenuFactory">
              <argument type="service" id="knp_menu.factory"/>
            </call>
            <call method="setRouteBuilder">
              <argument type="service" id="sonata.admin.route.path_info"/>
            </call>
            <call method="setLabel">
              <argument>-</argument>
            </call>
            <call method="setPersistFilters">
              <argument>false</argument>
            </call>
            <call method="setTemplates">
              <argument type="collection">
                <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
                <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
                <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
                <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
                <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
                <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
                <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
                <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
                <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
                <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
                <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
                <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
                <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
                <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
                <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
                <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
                <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
                <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
                <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
                <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
                <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
                <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
                <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
                <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
                <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
                <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
                <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
                <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
              </argument>
            </call>
            <call method="setSecurityInformation">
              <argument type="collection">
                <argument key="GUEST" type="collection">
                  <argument>VIEW</argument>
                  <argument>LIST</argument>
                </argument>
                <argument key="STAFF" type="collection">
                  <argument>EDIT</argument>
                  <argument>LIST</argument>
                  <argument>CREATE</argument>
                </argument>
                <argument key="EDITOR" type="collection">
                  <argument>OPERATOR</argument>
                  <argument>EXPORT</argument>
                </argument>
                <argument key="ADMIN" type="collection">
                  <argument>MASTER</argument>
                </argument>
              </argument>
            </call>
            <call method="initialize"/>
            <call method="addExtension">
              <argument type="service" id="sonata.admin.event.extension"/>
            </call>
            <call method="addExtension">
              <argument type="service" id="sonata.timeline.admin.extension"/>
            </call>
            <call method="setFormTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
              </argument>
            </call>
            <call method="setFilterTheme">
              <argument type="collection">
                <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>conversation</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.easy_extends.generator.bundle" class="Sonata\EasyExtendsBundle\Generator\BundleGenerator"/>
    <service id="sonata.easy_extends.generator.orm" class="Sonata\EasyExtendsBundle\Generator\OrmGenerator"/>
    <service id="sonata.easy_extends.generator.odm" class="Sonata\EasyExtendsBundle\Generator\OdmGenerator"/>
    <service id="sonata.easy_extends.generator.phpcr" class="Sonata\EasyExtendsBundle\Generator\PHPCRGenerator"/>
    <service id="sonata.easy_extends.generator.serializer" class="Sonata\EasyExtendsBundle\Generator\SerializerGenerator"/>
    <service id="sonata.easy_extends.doctrine.mapper" class="Sonata\EasyExtendsBundle\Mapper\DoctrineORMMapper">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection"/>
      <call method="addAssociation">
        <argument>Application\Sonata\UserBundle\Entity\User</argument>
        <argument>mapManyToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">groups</argument>
            <argument key="targetEntity">Application\Sonata\UserBundle\Entity\Group</argument>
            <argument key="cascade" type="collection"/>
            <argument key="joinTable" type="collection">
              <argument key="name">fos_user_user_group</argument>
              <argument key="joinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">user_id</argument>
                  <argument key="referencedColumnName">id</argument>
                  <argument key="onDelete">CASCADE</argument>
                </argument>
              </argument>
              <argument key="inverseJoinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">group_id</argument>
                  <argument key="referencedColumnName">id</argument>
                  <argument key="onDelete">CASCADE</argument>
                </argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\PageBundle\Entity\Page</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">children</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Page</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">parent</argument>
            <argument key="orphanRemoval">false</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">blocks</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Block</argument>
            <argument key="cascade" type="collection">
              <argument>remove</argument>
              <argument>persist</argument>
              <argument>refresh</argument>
              <argument>merge</argument>
              <argument>detach</argument>
            </argument>
            <argument key="mappedBy">page</argument>
            <argument key="orphanRemoval">false</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">sources</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Page</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">target</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\PageBundle\Entity\Page</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">site</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Site</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">site_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">parent</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Page</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">children</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">parent_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">target</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Page</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">sources</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">target_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\PageBundle\Entity\Block</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">children</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Block</argument>
            <argument key="cascade" type="collection">
              <argument>remove</argument>
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">parent</argument>
            <argument key="orphanRemoval">true</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\PageBundle\Entity\Block</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">parent</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Block</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">children</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">parent_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">page</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Page</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">blocks</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">page_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\PageBundle\Entity\Snapshot</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">site</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Site</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">site_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">page</argument>
            <argument key="targetEntity">Application\Sonata\PageBundle\Entity\Page</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">page_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\NewsBundle\Entity\Post</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">comments</argument>
            <argument key="targetEntity">Application\Sonata\NewsBundle\Entity\Comment</argument>
            <argument key="cascade" type="collection">
              <argument>remove</argument>
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">post</argument>
            <argument key="orphanRemoval">true</argument>
            <argument key="orderBy" type="collection">
              <argument key="createdAt">DESC</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\NewsBundle\Entity\Post</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">image</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Media</argument>
            <argument key="cascade" type="collection">
              <argument>remove</argument>
              <argument>persist</argument>
              <argument>refresh</argument>
              <argument>merge</argument>
              <argument>detach</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">image_id</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">author</argument>
            <argument key="targetEntity">Application\Sonata\UserBundle\Entity\User</argument>
            <argument key="cascade" type="collection">
              <argument key="1">persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">author_id</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">collection</argument>
            <argument key="targetEntity">Application\Sonata\ClassificationBundle\Entity\Collection</argument>
            <argument key="cascade" type="collection">
              <argument key="1">persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">collection_id</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\NewsBundle\Entity\Post</argument>
        <argument>mapManyToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">tags</argument>
            <argument key="targetEntity">Application\Sonata\ClassificationBundle\Entity\Tag</argument>
            <argument key="cascade" type="collection">
              <argument key="1">persist</argument>
            </argument>
            <argument key="joinTable" type="collection">
              <argument key="name">news__post_tag</argument>
              <argument key="joinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">post_id</argument>
                  <argument key="referencedColumnName">id</argument>
                </argument>
              </argument>
              <argument key="inverseJoinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">tag_id</argument>
                  <argument key="referencedColumnName">id</argument>
                </argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\NewsBundle\Entity\Comment</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">post</argument>
            <argument key="targetEntity">Application\Sonata\NewsBundle\Entity\Post</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">comments</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">post_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="nullable">false</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">galleryHasMedias</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">media</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">gallery</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Gallery</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">galleryHasMedias</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">gallery_id</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">media</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Media</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">galleryHasMedias</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">media_id</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">galleryHasMedias</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">gallery</argument>
            <argument key="orphanRemoval">true</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\BasketBundle\Entity\Basket</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">customer</argument>
            <argument key="targetEntity">Application\Sonata\CustomerBundle\Entity\Customer</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">customer_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
                <argument key="unique">true</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\BasketBundle\Entity\Basket</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">basketElements</argument>
            <argument key="targetEntity">Application\Sonata\BasketBundle\Entity\BasketElement</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">basket</argument>
            <argument key="orphanRemoval">true</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\BasketBundle\Entity\BasketElement</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">basket</argument>
            <argument key="targetEntity">Application\Sonata\BasketBundle\Entity\Basket</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">basketElements</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">basket_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\CustomerBundle\Entity\Customer</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">addresses</argument>
            <argument key="targetEntity">Application\Sonata\CustomerBundle\Entity\Address</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">customer</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">orders</argument>
            <argument key="targetEntity">Application\Sonata\OrderBundle\Entity\Order</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">customer</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\CustomerBundle\Entity\Customer</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">user</argument>
            <argument key="targetEntity">Application\Sonata\UserBundle\Entity\User</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">customers</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">user_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\CustomerBundle\Entity\Address</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">customer</argument>
            <argument key="targetEntity">Application\Sonata\CustomerBundle\Entity\Customer</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">addresses</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">customer_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\InvoiceBundle\Entity\Invoice</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">customer</argument>
            <argument key="targetEntity">Application\Sonata\CustomerBundle\Entity\Customer</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
              <argument>refresh</argument>
              <argument>merge</argument>
              <argument>detach</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">customer_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\InvoiceBundle\Entity\Invoice</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">invoiceElements</argument>
            <argument key="targetEntity">Application\Sonata\InvoiceBundle\Entity\InvoiceElement</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">invoice</argument>
            <argument key="orphanRemoval">true</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\InvoiceBundle\Entity\InvoiceElement</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">invoice</argument>
            <argument key="targetEntity">Application\Sonata\InvoiceBundle\Entity\Invoice</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
              <argument>refresh</argument>
              <argument>merge</argument>
              <argument>detach</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">invoiceElements</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">invoice_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">orderElement</argument>
            <argument key="targetEntity">Application\Sonata\OrderBundle\Entity\OrderElement</argument>
            <argument key="cascade" type="collection"/>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">order_element_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\OrderBundle\Entity\Order</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">orderElements</argument>
            <argument key="targetEntity">Application\Sonata\OrderBundle\Entity\OrderElement</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">order</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\OrderBundle\Entity\Order</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">customer</argument>
            <argument key="targetEntity">Application\Sonata\CustomerBundle\Entity\Customer</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">orders</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">customer_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\OrderBundle\Entity\OrderElement</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">order</argument>
            <argument key="targetEntity">Application\Sonata\OrderBundle\Entity\Order</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">order_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\PaymentBundle\Entity\Transaction</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">order</argument>
            <argument key="targetEntity">Application\Sonata\OrderBundle\Entity\Order</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">order_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\ProductBundle\Entity\Delivery</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">product</argument>
            <argument key="targetEntity">Application\Sonata\ProductBundle\Entity\Product</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">deliveries</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">product_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\ProductBundle\Entity\Package</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">product</argument>
            <argument key="targetEntity">Application\Sonata\ProductBundle\Entity\Product</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">packages</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">product_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\ProductBundle\Entity\ProductCategory</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">product</argument>
            <argument key="targetEntity">Application\Sonata\ProductBundle\Entity\Product</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">productCategories</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">product_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
                <argument key="onUpdate">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">category</argument>
            <argument key="targetEntity">Application\Sonata\ClassificationBundle\Entity\Category</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">category_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
                <argument key="onUpdate">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\ProductBundle\Entity\ProductCollection</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">product</argument>
            <argument key="targetEntity">Application\Sonata\ProductBundle\Entity\Product</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">productCollections</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">product_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
                <argument key="onUpdate">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">collection</argument>
            <argument key="targetEntity">Application\Sonata\ClassificationBundle\Entity\Collection</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">productCollection</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">collection_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
                <argument key="onUpdate">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\ProductBundle\Entity\Product</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">packages</argument>
            <argument key="targetEntity">Application\Sonata\ProductBundle\Entity\Package</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">product</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">deliveries</argument>
            <argument key="targetEntity">Application\Sonata\ProductBundle\Entity\Delivery</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">product</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">productCategories</argument>
            <argument key="targetEntity">Application\Sonata\ProductBundle\Entity\ProductCategory</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">product</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">productCollections</argument>
            <argument key="targetEntity">Application\Sonata\ProductBundle\Entity\ProductCollection</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">product</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">variations</argument>
            <argument key="targetEntity">Application\Sonata\ProductBundle\Entity\Product</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">parent</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\ProductBundle\Entity\Product</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">image</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Media</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">image_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">gallery</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Gallery</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">gallery_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">parent</argument>
            <argument key="targetEntity">Application\Sonata\ProductBundle\Entity\Product</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">variations</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">parent_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\CommentBundle\Entity\Comment</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">thread</argument>
            <argument key="targetEntity">Application\Sonata\CommentBundle\Entity\Thread</argument>
            <argument key="cascade" type="collection"/>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\CommentBundle\Entity\Thread</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">category</argument>
            <argument key="targetEntity">Application\Sonata\ClassificationBundle\Entity\Category</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">category_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
                <argument key="onUpdate">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\ClassificationBundle\Entity\Category</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">children</argument>
            <argument key="targetEntity">Application\Sonata\ClassificationBundle\Entity\Category</argument>
            <argument key="cascade" type="collection">
              <argument>remove</argument>
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">parent</argument>
            <argument key="orphanRemoval">true</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\ClassificationBundle\Entity\Category</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">parent</argument>
            <argument key="targetEntity">Application\Sonata\ClassificationBundle\Entity\Category</argument>
            <argument key="cascade" type="collection">
              <argument>remove</argument>
              <argument>persist</argument>
              <argument>refresh</argument>
              <argument>merge</argument>
              <argument>detach</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">children</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">parent_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">media</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Media</argument>
            <argument key="cascade" type="collection">
              <argument>remove</argument>
              <argument>persist</argument>
              <argument>refresh</argument>
              <argument>merge</argument>
              <argument>detach</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">media_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\ClassificationBundle\Entity\Collection</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">media</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Media</argument>
            <argument key="cascade" type="collection">
              <argument>remove</argument>
              <argument>persist</argument>
              <argument>refresh</argument>
              <argument>merge</argument>
              <argument>detach</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">media_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\TimelineBundle\Entity\Timeline</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">action</argument>
            <argument key="targetEntity">Application\Sonata\TimelineBundle\Entity\Action</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">timelines</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">action_id</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">subject</argument>
            <argument key="targetEntity">Application\Sonata\TimelineBundle\Entity\Component</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">subject_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\TimelineBundle\Entity\Action</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">actionComponents</argument>
            <argument key="targetEntity">Application\Sonata\TimelineBundle\Entity\ActionComponent</argument>
            <argument key="cascade" type="collection">
              <argument key="1">persist</argument>
            </argument>
            <argument key="mappedBy">action</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">timelines</argument>
            <argument key="targetEntity">Application\Sonata\TimelineBundle\Entity\Timeline</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">action</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\TimelineBundle\Entity\ActionComponent</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">action</argument>
            <argument key="targetEntity">Application\Sonata\TimelineBundle\Entity\Action</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">actionComponents</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">action_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">component</argument>
            <argument key="targetEntity">Application\Sonata\TimelineBundle\Entity\Component</argument>
            <argument key="cascade" type="collection"/>
            <argument key="mappedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">component_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\PageBundle\Entity\Snapshot</argument>
        <argument>idx_snapshot_dates_enabled</argument>
        <argument type="collection">
          <argument>publication_date_start</argument>
          <argument>publication_date_end</argument>
          <argument>enabled</argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\OrderBundle\Entity\OrderElement</argument>
        <argument>product_type</argument>
        <argument type="collection">
          <argument>product_type</argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\OrderBundle\Entity\OrderElement</argument>
        <argument>order_element_status</argument>
        <argument type="collection">
          <argument>status</argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\OrderBundle\Entity\Order</argument>
        <argument>order_status</argument>
        <argument type="collection">
          <argument>status</argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\OrderBundle\Entity\Order</argument>
        <argument>payment_status</argument>
        <argument type="collection">
          <argument>payment_status</argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\PaymentBundle\Entity\Transaction</argument>
        <argument>status_code</argument>
        <argument type="collection">
          <argument>status_code</argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\PaymentBundle\Entity\Transaction</argument>
        <argument>state</argument>
        <argument type="collection">
          <argument>state</argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\ProductBundle\Entity\Product</argument>
        <argument>enabled</argument>
        <argument type="collection">
          <argument>enabled</argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\NotificationBundle\Entity\Message</argument>
        <argument>idx_state</argument>
        <argument type="collection">
          <argument>state</argument>
        </argument>
      </call>
      <call method="addIndex">
        <argument>Application\Sonata\NotificationBundle\Entity\Message</argument>
        <argument>idx_created_at</argument>
        <argument type="collection">
          <argument>created_at</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.core.date.moment_format_converter" class="Sonata\CoreBundle\Date\MomentFormatConverter"/>
    <service id="sonata.core.flashmessage.manager" class="Sonata\CoreBundle\FlashMessage\FlashManager">
      <tag name="sonata.status.renderer"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator"/>
      <argument type="collection">
        <argument key="error" type="collection">
          <argument key="sonata_product_error" type="collection">
            <argument key="domain">SonataProductBundle</argument>
          </argument>
        </argument>
        <argument key="success" type="collection">
          <argument key="sonata_customer_success" type="collection">
            <argument key="domain">SonataCustomerBundle</argument>
          </argument>
          <argument key="success" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_success" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_success" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
          <argument key="fos_user_success" type="collection">
            <argument key="domain">FOSUserBundle</argument>
          </argument>
        </argument>
        <argument key="warning" type="collection">
          <argument key="warning" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_info" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
        </argument>
        <argument key="danger" type="collection">
          <argument key="error" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_error" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_error" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="error">danger</argument>
        <argument key="success">success</argument>
        <argument key="warning">warning</argument>
        <argument key="danger">danger</argument>
      </argument>
    </service>
    <service id="sonata.core.flashmessage.twig.extension" class="Sonata\CoreBundle\Twig\Extension\FlashMessageExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.core.flashmessage.manager"/>
    </service>
    <service id="sonata.core.form.type.array" class="Sonata\CoreBundle\Form\Type\ImmutableArrayType">
      <tag name="form.type" alias="sonata_type_immutable_array"/>
    </service>
    <service id="sonata.core.form.type.boolean" class="Sonata\CoreBundle\Form\Type\BooleanType">
      <tag name="form.type" alias="sonata_type_boolean"/>
    </service>
    <service id="sonata.core.form.type.collection" class="Sonata\CoreBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_collection"/>
    </service>
    <service id="sonata.core.form.type.translatable_choice" class="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">
      <tag name="form.type" alias="sonata_type_translatable_choice"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_range" class="Sonata\CoreBundle\Form\Type\DateRangeType">
      <tag name="form.type" alias="sonata_type_date_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.datetime_range" class="Sonata\CoreBundle\Form\Type\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_datetime_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_picker" class="Sonata\CoreBundle\Form\Type\DatePickerType">
      <tag name="form.type" alias="sonata_type_date_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
    </service>
    <service id="sonata.core.form.type.datetime_picker" class="Sonata\CoreBundle\Form\Type\DateTimePickerType">
      <tag name="form.type" alias="sonata_type_datetime_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
    </service>
    <service id="sonata.core.form.type.equal" class="Sonata\CoreBundle\Form\Type\EqualType">
      <tag name="form.type" alias="sonata_type_equal"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.core.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.core.twig.extension.wrapping" class="Sonata\CoreBundle\Twig\Extension\FormTypeExtension">
      <tag name="twig.extension"/>
      <argument>standard</argument>
    </service>
    <service id="sonata.core.twig.extension.text" class="Twig_Extensions_Extension_Text">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.core.twig.status_extension" class="Sonata\CoreBundle\Twig\Extension\StatusExtension">
      <tag name="twig.extension"/>
      <call method="addStatusService">
        <argument type="service" id="sonata.news.status.comment"/>
      </call>
      <call method="addStatusService">
        <argument type="service" id="sonata.invoice.status.renderer"/>
      </call>
      <call method="addStatusService">
        <argument type="service" id="sonata.order.status.renderer"/>
      </call>
      <call method="addStatusService">
        <argument type="service" id="sonata.comment.status.comment_renderer"/>
      </call>
      <call method="addStatusService">
        <argument type="service" id="sonata.core.flashmessage.manager"/>
      </call>
    </service>
    <service id="sonata.core.twig.template_extension" class="Sonata\CoreBundle\Twig\Extension\TemplateExtension">
      <tag name="twig.extension"/>
      <argument>true</argument>
      <argument type="service" id="translator"/>
      <argument type="service" id="sonata.core.model.adapter.chain"/>
    </service>
    <service id="sonata.core.model.adapter.chain" class="Sonata\CoreBundle\Model\Adapter\AdapterChain">
      <call method="addAdapter">
        <argument type="service">
          <service class="Sonata\CoreBundle\Model\Adapter\DoctrineORMAdapter" public="false">
            <argument type="service" id="doctrine" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.core.slugify.cocur" class="Cocur\Slugify\Slugify"/>
    <service id="sonata.core.slugify.native" class="Sonata\CoreBundle\Component\NativeSlugify"/>
    <service id="sonata.intl.locale_detector.request" class="Sonata\IntlBundle\Locale\RequestDetector">
      <argument type="service" id="service_container" strict="false"/>
      <argument>en</argument>
    </service>
    <service id="sonata.intl.templating.helper.locale" class="Sonata\IntlBundle\Templating\Helper\LocaleHelper">
      <tag name="templating.helper" alias="locale"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request"/>
    </service>
    <service id="sonata.intl.templating.helper.number" class="Sonata\IntlBundle\Templating\Helper\NumberHelper">
      <tag name="templating.helper" alias="number"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request"/>
    </service>
    <service id="sonata.intl.templating.helper.datetime" class="Sonata\IntlBundle\Templating\Helper\DateTimeHelper">
      <tag name="templating.helper" alias="datetime"/>
      <argument type="service" id="sonata.intl.timezone_detector.chain"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request"/>
    </service>
    <service id="sonata.intl.timezone_detector.chain" class="Sonata\IntlBundle\Timezone\ChainTimezoneDetector">
      <argument>Europe/Moscow</argument>
      <call method="addDetector">
        <argument type="service" id="sonata.intl.timezone_detector.user"/>
      </call>
      <call method="addDetector">
        <argument type="service" id="sonata.intl.timezone_detector.locale"/>
      </call>
    </service>
    <service id="sonata.intl.timezone_detector.user" class="Sonata\IntlBundle\Timezone\UserBasedTimezoneDetector">
      <tag name="sonata_intl.timezone_detector" alias="user"/>
      <argument type="service" id="security.context"/>
      <argument></argument>
    </service>
    <service id="sonata.intl.timezone_detector.locale" class="Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector">
      <tag name="sonata_intl.timezone_detector" alias="locale"/>
      <argument type="service" id="sonata.intl.locale_detector.request"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.formatter.pool" class="Sonata\FormatterBundle\Formatter\Pool">
      <argument type="service" id="logger"/>
      <call method="add">
        <argument>markdown</argument>
        <argument type="service" id="sonata.formatter.text.markdown"/>
        <argument type="service" id="sonata.formatter.twig.env.markdown"/>
      </call>
      <call method="add">
        <argument>text</argument>
        <argument type="service" id="sonata.formatter.text.text"/>
        <argument type="service" id="sonata.formatter.twig.env.text"/>
      </call>
      <call method="add">
        <argument>rawhtml</argument>
        <argument type="service" id="sonata.formatter.text.raw"/>
        <argument type="service" id="sonata.formatter.twig.env.rawhtml"/>
      </call>
      <call method="add">
        <argument>richhtml</argument>
        <argument type="service" id="sonata.formatter.text.raw"/>
        <argument type="service" id="sonata.formatter.twig.env.richhtml"/>
      </call>
    </service>
    <service id="sonata.formatter.text.markdown" class="Sonata\FormatterBundle\Formatter\MarkdownFormatter">
      <tag name="sonata.text.formatter" code="markdown"/>
      <argument type="service" id="markdown.parser"/>
    </service>
    <service id="sonata.formatter.text.text" class="Sonata\FormatterBundle\Formatter\TextFormatter">
      <tag name="sonata.text.formatter"/>
    </service>
    <service id="sonata.formatter.text.raw" class="Sonata\FormatterBundle\Formatter\RawFormatter">
      <tag name="sonata.text.formatter"/>
    </service>
    <service id="sonata.formatter.text.twigengine" class="Sonata\FormatterBundle\Formatter\TwigFormatter">
      <tag name="sonata.text.formatter"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sonata.formatter.twig.gist" class="Sonata\FormatterBundle\Extension\GistExtension"/>
    <service id="sonata.formatter.twig.control_flow" class="Sonata\FormatterBundle\Extension\ControlFlowExtension"/>
    <service id="sonata.formatter.validator.formatter" class="Sonata\FormatterBundle\Validator\Constraints\FormatterValidator">
      <tag name="validator.constraint_validator" alias="sonata.formatter.validator.formatter"/>
      <argument type="service" id="sonata.formatter.pool"/>
    </service>
    <service id="sonata.formatter.form.type.selector" class="Sonata\FormatterBundle\Form\Type\FormatterType">
      <tag name="form.type" alias="sonata_formatter_type"/>
      <argument type="service" id="sonata.formatter.pool"/>
      <argument type="service" id="translator"/>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
    </service>
    <service id="sonata.formatter.block.formatter" class="Sonata\FormatterBundle\Block\FormatterBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.empty</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.formatter.ckeditor.extension" class="Sonata\FormatterBundle\Admin\CkeditorAdminExtension">
      <tag name="sonata.admin.extension" target="sonata.media.admin.media"/>
    </service>
    <service id="sonata.formatter.twig.env.markdown" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_String" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                  <argument>sonata.media.formatter.twig</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.media.formatter.twig"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.markdown"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.formatter.twig.env.text" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_String" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                  <argument>sonata.media.formatter.twig</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.media.formatter.twig"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.text"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.formatter.twig.env.rawhtml" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_String" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                  <argument>sonata.media.formatter.twig</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.media.formatter.twig"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.rawhtml"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.formatter.twig.env.richhtml" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_String" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                  <argument>sonata.media.formatter.twig</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.media.formatter.twig"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.richhtml"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.cache.manager" class="Sonata\Cache\CacheManager">
      <argument type="service" id="sonata.cache.invalidation.simple"/>
      <argument type="collection">
        <argument key="sonata.page.cache.esi" type="service" id="sonata.page.cache.esi"/>
        <argument key="sonata.page.cache.ssi" type="service" id="sonata.page.cache.ssi"/>
        <argument key="sonata.page.cache.js_sync" type="service" id="sonata.page.cache.js_sync"/>
        <argument key="sonata.page.cache.js_async" type="service" id="sonata.page.cache.js_async"/>
        <argument key="sonata.cache.noop" type="service" id="sonata.cache.noop"/>
      </argument>
      <call method="setRecorder">
        <argument type="service" id="sonata.cache.recorder"/>
      </call>
    </service>
    <service id="sonata.cache.recorder" class="Sonata\Cache\Invalidation\Recorder">
      <argument type="service" id="sonata.cache.model_identifier"/>
    </service>
    <service id="sonata.cache.model_identifier" class="Sonata\Cache\Invalidation\ModelCollectionIdentifiers">
      <argument type="collection"/>
    </service>
    <service id="sonata.cache.noop" class="Sonata\Cache\Adapter\Cache\NoopCache">
      <tag name="sonata.cache"/>
    </service>
    <service id="sonata.cache.invalidation.simple" class="Sonata\CacheBundle\Invalidation\SimpleCacheInvalidation">
      <argument type="service" id="logger"/>
    </service>
    <service id="sonata.cache.orm.event_subscriber.default" class="Sonata\CacheBundle\Invalidation\DoctrineORMListener">
      <argument type="service" id="sonata.cache.model_identifier"/>
      <argument type="collection">
        <argument key="sonata.page.cache.esi" type="service" id="sonata.page.cache.esi"/>
        <argument key="sonata.page.cache.ssi" type="service" id="sonata.page.cache.ssi"/>
        <argument key="sonata.page.cache.js_sync" type="service" id="sonata.page.cache.js_sync"/>
        <argument key="sonata.page.cache.js_async" type="service" id="sonata.page.cache.js_async"/>
        <argument key="sonata.cache.noop" type="service" id="sonata.cache.noop"/>
      </argument>
    </service>
    <service id="sonata.cache.orm.event_subscriber" class="Sonata\CacheBundle\Invalidation\DoctrineORMListenerContainerAware">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="service_container"/>
      <argument>sonata.cache.orm.event_subscriber.default</argument>
    </service>
    <service id="sonata.block.service.container" class="Sonata\BlockBundle\Block\Service\ContainerBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.container</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.empty" class="Sonata\BlockBundle\Block\Service\EmptyBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.empty</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.text" class="Sonata\BlockBundle\Block\Service\TextBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.text</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.rss" class="Sonata\BlockBundle\Block\Service\RssBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.rss</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.menu" class="Sonata\BlockBundle\Block\Service\MenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.menu</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="collection">
        <argument key="SonataDemoBundle:Builder:mainMenu">Main Menu</argument>
      </argument>
    </service>
    <service id="sonata.block.service.template" class="Sonata\BlockBundle\Block\Service\TemplateBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.template</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.form.type.block" class="Sonata\BlockBundle\Form\Type\ServiceListType">
      <tag name="form.type" alias="sonata_block_service_choice"/>
      <argument type="service" id="sonata.block.manager"/>
    </service>
    <service id="sonata.block.form.type.container_template" class="Sonata\BlockBundle\Form\Type\ContainerTemplateType">
      <tag name="form.type" alias="sonata_type_container_template_choice"/>
      <argument type="collection">
        <argument key="SonataPageBundle:Block:block_container.html.twig">SonataPageBundle default template</argument>
        <argument key="SonataSeoBundle:Block:block_social_container.html.twig">SonataSeoBundle (to contain social buttons)</argument>
      </argument>
    </service>
    <service id="sonata.block.manager" class="Sonata\BlockBundle\Block\BlockServiceManager" public="false">
      <argument type="service" id="service_container"/>
      <argument>true</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <call method="add">
        <argument>sonata.user.block.menu</argument>
        <argument>sonata.user.block.menu</argument>
        <argument type="collection">
          <argument>user</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.user.block.account</argument>
        <argument>sonata.user.block.account</argument>
        <argument type="collection">
          <argument>user</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.user.block.breadcrumb_index</argument>
        <argument>sonata.user.block.breadcrumb_index</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.user.block.breadcrumb_profile</argument>
        <argument>sonata.user.block.breadcrumb_profile</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.page.block.container</argument>
        <argument>sonata.page.block.container</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.page.block.children_pages</argument>
        <argument>sonata.page.block.children_pages</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.page.block.breadcrumb</argument>
        <argument>sonata.page.block.breadcrumb</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.page.block.shared_block</argument>
        <argument>sonata.page.block.shared_block</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.news.block.recent_posts</argument>
        <argument>sonata.news.block.recent_posts</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.news.block.recent_comments</argument>
        <argument>sonata.news.block.recent_comments</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.news.block.breadcrumb_archive</argument>
        <argument>sonata.news.block.breadcrumb_archive</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.news.block.breadcrumb_post</argument>
        <argument>sonata.news.block.breadcrumb_post</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.media</argument>
        <argument>sonata.media.block.media</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.media.block.feature_media</argument>
        <argument>sonata.media.block.feature_media</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.media.block.gallery</argument>
        <argument>sonata.media.block.gallery</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.media.block.breadcrumb_view</argument>
        <argument>sonata.media.block.breadcrumb_view</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.breadcrumb_index</argument>
        <argument>sonata.media.block.breadcrumb_index</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.breadcrumb_view_media</argument>
        <argument>sonata.media.block.breadcrumb_view_media</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.admin_list</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin_doctrine_orm.block.audit</argument>
        <argument>sonata.admin_doctrine_orm.block.audit</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.basket.block.nb_items</argument>
        <argument>sonata.basket.block.nb_items</argument>
        <argument type="collection">
          <argument>user</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.customer.block.recent_customers</argument>
        <argument>sonata.customer.block.recent_customers</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.customer.block.breadcrumb_address</argument>
        <argument>sonata.customer.block.breadcrumb_address</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.order.block.recent_orders</argument>
        <argument>sonata.order.block.recent_orders</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.order.block.breadcrumb_order</argument>
        <argument>sonata.order.block.breadcrumb_order</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.product.block.breadcrumb</argument>
        <argument>sonata.product.block.breadcrumb</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.product.block.recent_products</argument>
        <argument>sonata.product.block.recent_products</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.product.block.similar_products</argument>
        <argument>sonata.product.block.similar_products</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.product.block.categories_menu</argument>
        <argument>sonata.product.block.categories_menu</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.product.block.filters_menu</argument>
        <argument>sonata.product.block.filters_menu</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.product.block.variations_form</argument>
        <argument>sonata.product.block.variations_form</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.comment.block.thread.async</argument>
        <argument>sonata.comment.block.thread.async</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.formatter.block.formatter</argument>
        <argument>sonata.formatter.block.formatter</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.container</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.empty</argument>
        <argument>sonata.block.service.empty</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.text</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.rss</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.menu</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.template</argument>
        <argument>sonata.block.service.template</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.seo.block.email.share_button</argument>
        <argument>sonata.seo.block.email.share_button</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.seo.block.facebook.like_box</argument>
        <argument>sonata.seo.block.facebook.like_box</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.seo.block.facebook.like_button</argument>
        <argument>sonata.seo.block.facebook.like_button</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.seo.block.facebook.send_button</argument>
        <argument>sonata.seo.block.facebook.send_button</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.seo.block.facebook.share_button</argument>
        <argument>sonata.seo.block.facebook.share_button</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.seo.block.twitter.share_button</argument>
        <argument>sonata.seo.block.twitter.share_button</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.seo.block.twitter.follow_button</argument>
        <argument>sonata.seo.block.twitter.follow_button</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.seo.block.twitter.hashtag_button</argument>
        <argument>sonata.seo.block.twitter.hashtag_button</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.seo.block.twitter.mention_button</argument>
        <argument>sonata.seo.block.twitter.mention_button</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.seo.block.twitter.embed</argument>
        <argument>sonata.seo.block.twitter.embed</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.seo.block.pinterest.pin_button</argument>
        <argument>sonata.seo.block.pinterest.pin_button</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.seo.block.breadcrumb.homepage</argument>
        <argument>sonata.seo.block.breadcrumb.homepage</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.demo.block.newsletter</argument>
        <argument>sonata.demo.block.newsletter</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.timeline.block.timeline</argument>
        <argument>sonata.timeline.block.timeline</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.block.context_manager.default" class="Sonata\BlockBundle\Block\BlockContextManager">
      <argument type="service" id="sonata.block.loader.chain"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.search_result">sonata.cache.noop</argument>
          <argument key="sonata.block.service.text">sonata.cache.noop</argument>
          <argument key="sonata.block.service.container">sonata.cache.noop</argument>
          <argument key="sonata.block.service.rss">sonata.cache.noop</argument>
          <argument key="sonata.block.service.menu">sonata.cache.noop</argument>
          <argument key="sonata.block.service.template">sonata.cache.noop</argument>
          <argument key="sonata.page.block.container">sonata.cache.noop</argument>
          <argument key="sonata.page.block.children_pages">sonata.cache.noop</argument>
          <argument key="sonata.page.block.breadcrumb">sonata.cache.noop</argument>
          <argument key="sonata.media.block.media">sonata.cache.noop</argument>
          <argument key="sonata.media.block.gallery">sonata.cache.noop</argument>
          <argument key="sonata.media.block.feature_media">sonata.cache.noop</argument>
          <argument key="sonata.news.block.recent_comments">sonata.cache.noop</argument>
          <argument key="sonata.news.block.recent_posts">sonata.cache.noop</argument>
          <argument key="sonata.order.block.recent_orders">sonata.cache.noop</argument>
          <argument key="sonata.product.block.recent_products">sonata.cache.noop</argument>
          <argument key="sonata.product.block.similar_products">sonata.cache.noop</argument>
          <argument key="sonata.product.block.categories_menu">sonata.cache.noop</argument>
          <argument key="sonata.product.block.filters_menu">sonata.cache.noop</argument>
          <argument key="sonata.product.block.variations_form">sonata.cache.noop</argument>
          <argument key="sonata.customer.block.recent_customers">sonata.cache.noop</argument>
          <argument key="sonata.basket.block.nb_items">sonata.page.cache.js_async</argument>
          <argument key="sonata.timeline.block.timeline">sonata.cache.noop</argument>
          <argument key="sonata.user.block.account">sonata.page.cache.js_async</argument>
          <argument key="sonata.user.block.menu">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.email.share_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.like_box">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.like_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.send_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.share_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.pinterest.pin_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.share_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.follow_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.hashtag_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.mention_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.embed">sonata.cache.noop</argument>
          <argument key="sonata.demo.block.newsletter">sonata.cache.noop</argument>
          <argument key="sonata.formatter.block.formatter">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.breadcrumb.homepage">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.renderer.default" class="Sonata\BlockBundle\Block\BlockRenderer">
      <argument type="service" id="sonata.block.manager"/>
      <argument type="service" id="sonata.block.exception.strategy.manager"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="sonata.block.templating.helper" class="Sonata\BlockBundle\Templating\Helper\BlockHelper">
      <tag name="templating.helper" alias="sonata_block"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.search_result">sonata.cache.noop</argument>
          <argument key="sonata.block.service.text">sonata.cache.noop</argument>
          <argument key="sonata.block.service.container">sonata.cache.noop</argument>
          <argument key="sonata.block.service.rss">sonata.cache.noop</argument>
          <argument key="sonata.block.service.menu">sonata.cache.noop</argument>
          <argument key="sonata.block.service.template">sonata.cache.noop</argument>
          <argument key="sonata.page.block.container">sonata.cache.noop</argument>
          <argument key="sonata.page.block.children_pages">sonata.cache.noop</argument>
          <argument key="sonata.page.block.breadcrumb">sonata.cache.noop</argument>
          <argument key="sonata.media.block.media">sonata.cache.noop</argument>
          <argument key="sonata.media.block.gallery">sonata.cache.noop</argument>
          <argument key="sonata.media.block.feature_media">sonata.cache.noop</argument>
          <argument key="sonata.news.block.recent_comments">sonata.cache.noop</argument>
          <argument key="sonata.news.block.recent_posts">sonata.cache.noop</argument>
          <argument key="sonata.order.block.recent_orders">sonata.cache.noop</argument>
          <argument key="sonata.product.block.recent_products">sonata.cache.noop</argument>
          <argument key="sonata.product.block.similar_products">sonata.cache.noop</argument>
          <argument key="sonata.product.block.categories_menu">sonata.cache.noop</argument>
          <argument key="sonata.product.block.filters_menu">sonata.cache.noop</argument>
          <argument key="sonata.product.block.variations_form">sonata.cache.noop</argument>
          <argument key="sonata.customer.block.recent_customers">sonata.cache.noop</argument>
          <argument key="sonata.basket.block.nb_items">sonata.page.cache.js_async</argument>
          <argument key="sonata.timeline.block.timeline">sonata.cache.noop</argument>
          <argument key="sonata.user.block.account">sonata.page.cache.js_async</argument>
          <argument key="sonata.user.block.menu">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.email.share_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.like_box">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.like_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.send_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.share_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.pinterest.pin_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.share_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.follow_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.hashtag_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.mention_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.embed">sonata.cache.noop</argument>
          <argument key="sonata.demo.block.newsletter">sonata.cache.noop</argument>
          <argument key="sonata.formatter.block.formatter">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.breadcrumb.homepage">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.page.block.context_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="sonata.cache.manager" on-invalid="ignore"/>
      <argument type="service" id="sonata.block.cache.handler.default" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.loader.chain" class="Sonata\BlockBundle\Block\BlockLoaderChain">
      <argument type="collection">
        <argument type="service" id="sonata.block.loader.service"/>
      </argument>
    </service>
    <service id="sonata.block.loader.service" class="Sonata\BlockBundle\Block\Loader\ServiceLoader">
      <tag name="sonata.block.loader"/>
      <argument type="collection">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.template</argument>
        <argument>sonata.page.block.container</argument>
        <argument>sonata.page.block.children_pages</argument>
        <argument>sonata.page.block.breadcrumb</argument>
        <argument>sonata.media.block.media</argument>
        <argument>sonata.media.block.gallery</argument>
        <argument>sonata.media.block.feature_media</argument>
        <argument>sonata.news.block.recent_comments</argument>
        <argument>sonata.news.block.recent_posts</argument>
        <argument>sonata.order.block.recent_orders</argument>
        <argument>sonata.product.block.recent_products</argument>
        <argument>sonata.product.block.similar_products</argument>
        <argument>sonata.product.block.categories_menu</argument>
        <argument>sonata.product.block.filters_menu</argument>
        <argument>sonata.product.block.variations_form</argument>
        <argument>sonata.customer.block.recent_customers</argument>
        <argument>sonata.basket.block.nb_items</argument>
        <argument>sonata.timeline.block.timeline</argument>
        <argument>sonata.user.block.account</argument>
        <argument>sonata.user.block.menu</argument>
        <argument>sonata.seo.block.email.share_button</argument>
        <argument>sonata.seo.block.facebook.like_box</argument>
        <argument>sonata.seo.block.facebook.like_button</argument>
        <argument>sonata.seo.block.facebook.send_button</argument>
        <argument>sonata.seo.block.facebook.share_button</argument>
        <argument>sonata.seo.block.pinterest.pin_button</argument>
        <argument>sonata.seo.block.twitter.share_button</argument>
        <argument>sonata.seo.block.twitter.follow_button</argument>
        <argument>sonata.seo.block.twitter.hashtag_button</argument>
        <argument>sonata.seo.block.twitter.mention_button</argument>
        <argument>sonata.seo.block.twitter.embed</argument>
        <argument>sonata.demo.block.newsletter</argument>
        <argument>sonata.formatter.block.formatter</argument>
        <argument>sonata.seo.block.breadcrumb.homepage</argument>
      </argument>
    </service>
    <service id="sonata.block.twig.global" class="Sonata\BlockBundle\Twig\GlobalVariables">
      <argument type="collection">
        <argument key="block_base">SonataPageBundle:Block:block_base.html.twig</argument>
        <argument key="block_container">SonataPageBundle:Block:block_container.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.block.cache.handler.default" class="Sonata\BlockBundle\Cache\HttpCacheHandler">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
    </service>
    <service id="sonata.block.cache.handler.noop" class="Sonata\BlockBundle\Cache\NoopHttpCacheHandler"/>
    <service id="sonata.block.exception.strategy.manager" class="Sonata\BlockBundle\Exception\Strategy\StrategyManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="debug_only">sonata.block.exception.filter.debug_only</argument>
        <argument key="ignore_block_exception">sonata.block.exception.filter.ignore_block_exception</argument>
        <argument key="keep_all">sonata.block.exception.filter.keep_all</argument>
        <argument key="keep_none">sonata.block.exception.filter.keep_none</argument>
      </argument>
      <argument type="collection">
        <argument key="inline">sonata.block.exception.renderer.inline</argument>
        <argument key="inline_debug">sonata.block.exception.renderer.inline_debug</argument>
        <argument key="throw">sonata.block.exception.renderer.throw</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setDefaultFilter">
        <argument>debug_only</argument>
      </call>
      <call method="setDefaultRenderer">
        <argument>throw</argument>
      </call>
    </service>
    <service id="sonata.block.exception.filter.keep_none" class="Sonata\BlockBundle\Exception\Filter\KeepNoneFilter"/>
    <service id="sonata.block.exception.filter.keep_all" class="Sonata\BlockBundle\Exception\Filter\KeepAllFilter"/>
    <service id="sonata.block.exception.filter.debug_only" class="Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter">
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.filter.ignore_block_exception" class="Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter">
      <argument>Sonata\BlockBundle\Exception\BlockExceptionInterface</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline" class="Sonata\BlockBundle\Exception\Renderer\InlineRenderer">
      <argument type="service" id="templating"/>
      <argument>SonataBlockBundle:Block:block_exception.html.twig</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline_debug" class="Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer">
      <argument type="service" id="templating"/>
      <argument>SonataBlockBundle:Block:block_exception_debug.html.twig</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.renderer.throw" class="Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer"/>
    <service id="sonata.seo.block.email.share_button" class="Sonata\SeoBundle\Block\Social\EmailShareButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.email.share_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.facebook.like_box" class="Sonata\SeoBundle\Block\Social\FacebookLikeBoxBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.facebook.like_box</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.facebook.like_button" class="Sonata\SeoBundle\Block\Social\FacebookLikeButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.facebook.like_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.facebook.send_button" class="Sonata\SeoBundle\Block\Social\FacebookSendButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.facebook.send_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.facebook.share_button" class="Sonata\SeoBundle\Block\Social\FacebookShareButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.facebook.share_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.twitter.share_button" class="Sonata\SeoBundle\Block\Social\TwitterShareButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.twitter.share_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.twitter.follow_button" class="Sonata\SeoBundle\Block\Social\TwitterFollowButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.twitter.follow_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.twitter.hashtag_button" class="Sonata\SeoBundle\Block\Social\TwitterHashtagButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.twitter.hashtag_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.twitter.mention_button" class="Sonata\SeoBundle\Block\Social\TwitterMentionButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.twitter.mention_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.twitter.embed" class="Sonata\SeoBundle\Block\Social\TwitterEmbedTweetBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.twitter.embed</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.pinterest.pin_button" class="Sonata\SeoBundle\Block\Social\PinterestPinButtonBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.seo.block.pinterest.pin_button</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.seo.block.breadcrumb.homepage" class="Sonata\SeoBundle\Block\Breadcrumb\HomepageBreadcrumbBlockService">
      <tag name="sonata.breadcrumb"/>
      <tag name="sonata.block"/>
      <argument>homepage</argument>
      <argument>sonata.seo.block.breadcrumb.homepage</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="sonata.seo.event.breadcrumb" class="Sonata\SeoBundle\Event\BreadcrumbListener">
      <tag name="kernel.event_listener" event="sonata.block.event.breadcrumb" method="onBlock"/>
      <call method="addBlockService">
        <argument>sonata.user.block.breadcrumb_index</argument>
        <argument type="service" id="sonata.user.block.breadcrumb_index"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.user.block.breadcrumb_profile</argument>
        <argument type="service" id="sonata.user.block.breadcrumb_profile"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.page.block.breadcrumb</argument>
        <argument type="service" id="sonata.page.block.breadcrumb"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.news.block.breadcrumb_archive</argument>
        <argument type="service" id="sonata.news.block.breadcrumb_archive"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.news.block.breadcrumb_post</argument>
        <argument type="service" id="sonata.news.block.breadcrumb_post"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.media.block.breadcrumb_view</argument>
        <argument type="service" id="sonata.media.block.breadcrumb_view"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.media.block.breadcrumb_index</argument>
        <argument type="service" id="sonata.media.block.breadcrumb_index"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.media.block.breadcrumb_view_media</argument>
        <argument type="service" id="sonata.media.block.breadcrumb_view_media"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.customer.block.breadcrumb_address</argument>
        <argument type="service" id="sonata.customer.block.breadcrumb_address"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.order.block.breadcrumb_order</argument>
        <argument type="service" id="sonata.order.block.breadcrumb_order"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.product.block.breadcrumb</argument>
        <argument type="service" id="sonata.product.block.breadcrumb"/>
      </call>
      <call method="addBlockService">
        <argument>sonata.seo.block.breadcrumb.homepage</argument>
        <argument type="service" id="sonata.seo.block.breadcrumb.homepage"/>
      </call>
    </service>
    <service id="sonata.seo.page.default" class="Sonata\SeoBundle\Seo\SeoPage">
      <call method="setTitle">
        <argument>Sonata Project</argument>
      </call>
      <call method="setMetas">
        <argument type="collection">
          <argument key="name" type="collection">
            <argument key="keywords">foo bar</argument>
            <argument key="description">The description</argument>
            <argument key="robots">index, follow</argument>
          </argument>
          <argument key="property" type="collection">
            <argument key="og:site_name">Sonata Project Sandbox</argument>
            <argument key="og:description">A demo of the some rich bundles for your Symfony2 projects</argument>
          </argument>
          <argument key="http-equiv" type="collection">
            <argument key="Content-Type">text/html; charset=utf-8</argument>
          </argument>
        </argument>
      </call>
      <call method="setHtmlAttributes">
        <argument type="collection">
          <argument key="xmlns">http://www.w3.org/1999/xhtml</argument>
        </argument>
      </call>
      <call method="setSeparator">
        <argument> - </argument>
      </call>
    </service>
    <service id="sonata.seo.sitemap.manager" class="Sonata\SeoBundle\Sitemap\SourceManager" scope="prototype">
      <call method="addSource">
        <argument>false</argument>
        <argument type="service" id="sonata.seo.source.doctrine_sitemap_iterator_0"/>
        <argument type="collection"/>
      </call>
      <call method="addSource">
        <argument>false</argument>
        <argument type="service" id="sonata.seo.source.doctrine_sitemap_iterator_1"/>
        <argument type="collection"/>
      </call>
      <call method="addSource">
        <argument>false</argument>
        <argument type="service" id="sonata.seo.source.doctrine_sitemap_iterator_2"/>
        <argument type="collection"/>
      </call>
      <call method="addSource">
        <argument>false</argument>
        <argument type="service" id="sonata.seo.source.doctrine_sitemap_iterator_3"/>
        <argument type="collection"/>
      </call>
      <call method="addSource">
        <argument>false</argument>
        <argument type="service" id="sonata.seo.source.doctrine_sitemap_iterator_4"/>
        <argument type="collection"/>
      </call>
      <call method="addSource">
        <argument>false</argument>
        <argument type="service" id="sonata.product.seo_iterator"/>
        <argument type="collection"/>
      </call>
    </service>
    <service id="sonata.seo.source.doctrine_sitemap_iterator_0" class="Exporter\Source\SymfonySitemapSourceIterator" public="false">
      <argument type="service">
        <service class="Exporter\Source\DoctrineDBALConnectionSourceIterator" public="false">
          <argument type="service" id="doctrine.dbal.default_connection"/>
          <argument>SELECT id, updated_at as lastmod, 'weekly' as changefreq, '0.5' as prioriy FROM media__media WHERE enabled = true</argument>
        </service>
      </argument>
      <argument type="service" id="cmf_routing.router"/>
      <argument>sonata_media_view</argument>
      <argument type="collection">
        <argument key="id">null</argument>
      </argument>
    </service>
    <service id="sonata.seo.source.doctrine_sitemap_iterator_1" class="Exporter\Source\SymfonySitemapSourceIterator" public="false">
      <argument type="service">
        <service class="Exporter\Source\DoctrineDBALConnectionSourceIterator" public="false">
          <argument type="service" id="doctrine.dbal.default_connection"/>
          <argument>SELECT CONCAT_WS('/', YEAR(created_at), MONTH(created_at), DAY(created_at), slug) as permalink , updated_at as lastmod, 'weekly' as changefreq, '0.5' as prioriy FROM news__post WHERE enabled = 1 AND (publication_date_start IS NULL OR publication_date_start &lt;= NOW())</argument>
        </service>
      </argument>
      <argument type="service" id="cmf_routing.router"/>
      <argument>sonata_news_view</argument>
      <argument type="collection">
        <argument key="permalink">null</argument>
      </argument>
    </service>
    <service id="sonata.seo.source.doctrine_sitemap_iterator_2" class="Exporter\Source\SymfonySitemapSourceIterator" public="false">
      <argument type="service">
        <service class="Exporter\Source\DoctrineDBALConnectionSourceIterator" public="false">
          <argument type="service" id="doctrine.dbal.default_connection"/>
          <argument>SELECT url as path, updated_at as lastmod, 'weekly' as changefreq, '0.5' as prioriy FROM page__snapshot WHERE route_name = 'page_slug' AND enabled = 1 AND (publication_date_start IS NULL OR publication_date_start &lt;= NOW())</argument>
        </service>
      </argument>
      <argument type="service" id="cmf_routing.router"/>
      <argument>page_slug</argument>
      <argument type="collection">
        <argument key="path">null</argument>
      </argument>
    </service>
    <service id="sonata.seo.source.doctrine_sitemap_iterator_3" class="Exporter\Source\SymfonySitemapSourceIterator" public="false">
      <argument type="service">
        <service class="Exporter\Source\DoctrineDBALConnectionSourceIterator" public="false">
          <argument type="service" id="doctrine.dbal.default_connection"/>
          <argument>SELECT id as category_id, slug as category_slug, updated_at as lastmod, 'weekly' as changefreq, '0.5' as prioriy FROM classification__category WHERE enabled = true</argument>
        </service>
      </argument>
      <argument type="service" id="cmf_routing.router"/>
      <argument>sonata_catalog_category</argument>
      <argument type="collection">
        <argument key="category_id">null</argument>
        <argument key="category_slug">null</argument>
      </argument>
    </service>
    <service id="sonata.seo.source.doctrine_sitemap_iterator_4" class="Exporter\Source\SymfonySitemapSourceIterator" public="false">
      <argument type="service">
        <service class="Exporter\Source\DoctrineDBALConnectionSourceIterator" public="false">
          <argument type="service" id="doctrine.dbal.default_connection"/>
          <argument>SELECT id as productId, slug, updated_at as lastmod, 'weekly' as changefreq, '0.5' as prioriy FROM product__product WHERE enabled = true</argument>
        </service>
      </argument>
      <argument type="service" id="cmf_routing.router"/>
      <argument>sonata_product_view</argument>
      <argument type="collection">
        <argument key="productId">null</argument>
        <argument key="slug">null</argument>
      </argument>
    </service>
    <service id="sonata.classification.manager.category" class="Sonata\ClassificationBundle\Entity\CategoryManager">
      <argument>Application\Sonata\ClassificationBundle\Entity\Category</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.classification.manager.tag" class="Sonata\ClassificationBundle\Entity\TagManager">
      <argument>Application\Sonata\ClassificationBundle\Entity\Tag</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.classification.manager.collection" class="Sonata\ClassificationBundle\Entity\CollectionManager">
      <argument>Application\Sonata\ClassificationBundle\Entity\Collection</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.classification.form.type.category_selector" class="Sonata\ClassificationBundle\Form\Type\CategorySelectorType">
      <tag name="form.type" alias="sonata_category_selector"/>
      <argument type="service" id="sonata.classification.manager.category"/>
    </service>
    <service id="sonata.classification.serializer.handler.category" class="Sonata\ClassificationBundle\Serializer\CategorySerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.classification.manager.category"/>
    </service>
    <service id="sonata.classification.serializer.handler.collection" class="Sonata\ClassificationBundle\Serializer\CollectionSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.classification.manager.collection"/>
    </service>
    <service id="sonata.classification.serializer.handler.tag" class="Sonata\ClassificationBundle\Serializer\TagSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.classification.manager.tag"/>
    </service>
    <service id="sonata.classification.controller.api.category" class="Sonata\ClassificationBundle\Controller\Api\CategoryController">
      <argument type="service" id="sonata.classification.manager.category"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.classification.controller.api.collection" class="Sonata\ClassificationBundle\Controller\Api\CollectionController">
      <argument type="service" id="sonata.classification.manager.collection"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.classification.controller.api.tag" class="Sonata\ClassificationBundle\Controller\Api\TagController">
      <argument type="service" id="sonata.classification.manager.tag"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.classification.api.form.type.category" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_classification_api_form_category"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_classification_api_form_category</argument>
      <argument>Application\Sonata\ClassificationBundle\Entity\Category</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.classification.api.form.type.collection" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_classification_api_form_collection"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_classification_api_form_collection</argument>
      <argument>Application\Sonata\ClassificationBundle\Entity\Collection</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.classification.api.form.type.tag" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_classification_api_form_tag"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_classification_api_form_tag</argument>
      <argument>Application\Sonata\ClassificationBundle\Entity\Tag</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.classification.admin.category" class="Sonata\ClassificationBundle\Admin\CategoryAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_classification" label="label_categories" label_catalogue="%sonata.classification.admin.category.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.classification.admin.category</argument>
      <argument>Application\Sonata\ClassificationBundle\Entity\Category</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>label_categories</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.classification.admin.tag" class="Sonata\ClassificationBundle\Admin\TagAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_classification" label="label_tags" label_catalogue="%sonata.classification.admin.tag.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.classification.admin.tag</argument>
      <argument>Application\Sonata\ClassificationBundle\Entity\Tag</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>label_tags</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.classification.admin.collection" class="Sonata\ClassificationBundle\Admin\CollectionAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_classification" label="label_collections" label_catalogue="%sonata.classification.admin.tag.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.classification.admin.collection</argument>
      <argument>Application\Sonata\ClassificationBundle\Entity\Collection</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>label_collections</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.notification.dispatcher" class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher">
      <argument type="service" id="service_container"/>
      <call method="addListenerService">
        <argument>sonata.page.create_snapshots</argument>
        <argument type="collection">
          <argument>sonata.page.notification.create_snapshots</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.page.create_snapshot</argument>
        <argument type="collection">
          <argument>sonata.page.notification.create_snapshot</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.page.cleanup_snapshots</argument>
        <argument type="collection">
          <argument>sonata.page.notification.cleanup_snapshots</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.page.cleanup_snapshot</argument>
        <argument type="collection">
          <argument>sonata.page.notification.cleanup_snapshot</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata.media.create_thumbnail</argument>
        <argument type="collection">
          <argument>sonata.media.notification.create_thumbnail</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata_payment_order_process</argument>
        <argument type="collection">
          <argument>sonata.payment.consumer.order_process</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>sonata_payment_order_element_process</argument>
        <argument type="collection">
          <argument>sonata.payment.consumer.order_element_process</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>mailer</argument>
        <argument type="collection">
          <argument>sonata.notification.consumer.swift_mailer</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>logger</argument>
        <argument type="collection">
          <argument>sonata.notification.consumer.logger</argument>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="sonata.notification.manager.message.default" class="Sonata\NotificationBundle\Entity\MessageManager">
      <argument>Application\Sonata\NotificationBundle\Entity\Message</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.notification.backend.runtime" class="Sonata\NotificationBundle\Backend\RuntimeBackend">
      <argument type="service" id="sonata.notification.dispatcher"/>
    </service>
    <service id="sonata.notification.backend.postpone" class="Sonata\NotificationBundle\Backend\PostponeRuntimeBackend">
      <tag name="kernel.event_listener" event="kernel.terminate" method="onEvent"/>
      <argument type="service" id="sonata.notification.dispatcher"/>
    </service>
    <service id="sonata.notification.backend.doctrine" class="Sonata\NotificationBundle\Backend\MessageManagerBackendDispatcher">
      <argument type="service" id="sonata.notification.manager.message.default"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="sonata.notification.consumer.metadata" class="Sonata\NotificationBundle\Consumer\Metadata">
      <argument type="collection">
        <argument key="sonata.page.create_snapshots" type="collection">
          <argument>sonata.page.notification.create_snapshots</argument>
        </argument>
        <argument key="sonata.page.create_snapshot" type="collection">
          <argument>sonata.page.notification.create_snapshot</argument>
        </argument>
        <argument key="sonata.page.cleanup_snapshots" type="collection">
          <argument>sonata.page.notification.cleanup_snapshots</argument>
        </argument>
        <argument key="sonata.page.cleanup_snapshot" type="collection">
          <argument>sonata.page.notification.cleanup_snapshot</argument>
        </argument>
        <argument key="sonata.media.create_thumbnail" type="collection">
          <argument>sonata.media.notification.create_thumbnail</argument>
        </argument>
        <argument key="sonata_payment_order_process" type="collection">
          <argument>sonata.payment.consumer.order_process</argument>
        </argument>
        <argument key="sonata_payment_order_element_process" type="collection">
          <argument>sonata.payment.consumer.order_element_process</argument>
        </argument>
        <argument key="mailer" type="collection">
          <argument>sonata.notification.consumer.swift_mailer</argument>
        </argument>
        <argument key="logger" type="collection">
          <argument>sonata.notification.consumer.logger</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.notification.erroneous_messages_selector" class="Sonata\NotificationBundle\Selector\ErroneousMessagesSelector">
      <argument type="service" id="doctrine"/>
      <argument>Application\Sonata\NotificationBundle\Entity\Message</argument>
    </service>
    <service id="sonata.notification.event.doctrine_optimize" class="Sonata\NotificationBundle\Event\DoctrineOptimizeListener">
      <tag name="kernel.event_listener" event="sonata.notification.event.message_iterate_event" method="iterate"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.notification.event.doctrine_backend_optimize" class="Sonata\NotificationBundle\Event\DoctrineBackendOptimizeListener">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.notification.consumer.swift_mailer" class="Sonata\NotificationBundle\Consumer\SwiftMailerConsumer">
      <tag name="sonata.notification.consumer" type="mailer"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
    </service>
    <service id="sonata.notification.consumer.logger" class="Sonata\NotificationBundle\Consumer\LoggerConsumer">
      <tag name="sonata.notification.consumer" type="logger"/>
      <argument type="service" id="logger"/>
    </service>
    <service id="sonata.notification.controller.api.message" class="Sonata\NotificationBundle\Controller\Api\MessageController">
      <argument type="service" id="sonata.notification.manager.message.default"/>
    </service>
    <service id="sonata.notification.admin.message" class="Sonata\NotificationBundle\Admin\MessageAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_notification" label="notifications" label_catalogue="%sonata.notification.admin.message.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.notification.admin.message</argument>
      <argument>Application\Sonata\NotificationBundle\Entity\Message</argument>
      <argument>SonataNotificationBundle:MessageAdmin</argument>
      <call method="setTranslationDomain">
        <argument>SonataNotificationBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>notifications</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="cmf_routing.router" class="Symfony\Cmf\Component\Routing\ChainRouter">
      <argument type="service" id="logger" on-invalid="ignore"/>
      <call method="setContext">
        <argument type="service" id="router.request_context"/>
      </call>
      <call method="add">
        <argument type="service" id="sonata.page.router"/>
        <argument>150</argument>
      </call>
      <call method="add">
        <argument type="service" id="router.default"/>
        <argument>100</argument>
      </call>
    </service>
    <service id="cmf_routing.route_type_form_type" class="Symfony\Cmf\Bundle\RoutingBundle\Form\Type\RouteTypeType">
      <tag name="form.type" alias="cmf_routing_route_type"/>
    </service>
    <service id="sonata.demo.block.newsletter" class="Sonata\Bundle\DemoBundle\Block\NewsletterBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.demo.block.newsletter</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="form.factory"/>
      <argument>sonata_demo_form_type_newsletter</argument>
    </service>
    <service id="sonata.demo.form.type.car" class="Sonata\Bundle\DemoBundle\Form\Type\CarType">
      <tag name="form.type" alias="sonata_demo_form_type_car"/>
    </service>
    <service id="sonata.demo.form.type.engine" class="Sonata\Bundle\DemoBundle\Form\Type\EngineType">
      <tag name="form.type" alias="sonata_demo_form_type_engine"/>
    </service>
    <service id="sonata.demo.form.type.newsletter" class="Sonata\Bundle\DemoBundle\Form\Type\NewsletterType">
      <tag name="form.type" alias="sonata_demo_form_type_newsletter"/>
    </service>
    <service id="sonata.demo.form.type.advanced_rescue_engine" class="Sonata\Bundle\DemoBundle\Form\Extension\RescueEngineTypeExtension">
      <tag name="form.type_extension" alias="sonata_demo_car"/>
    </service>
    <service id="sonata.demo.admin.car" class="Sonata\Bundle\DemoBundle\Admin\CarAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Demo" label="Car"/>
      <argument>sonata.demo.admin.car</argument>
      <argument>Sonata\Bundle\DemoBundle\Entity\Car</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setSubClasses">
        <argument type="collection">
          <argument key="renault">Sonata\Bundle\DemoBundle\Entity\Renault</argument>
          <argument key="citroen">Sonata\Bundle\DemoBundle\Entity\Citroen</argument>
          <argument key="peugeot">Sonata\Bundle\DemoBundle\Entity\Peugeot</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Car</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.demo.admin.engine" class="Sonata\Bundle\DemoBundle\Admin\EngineAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Demo" label="Engine"/>
      <argument>sonata.demo.admin.engine</argument>
      <argument>Sonata\Bundle\DemoBundle\Entity\Engine</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Engine</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.demo.admin.inspection" class="Sonata\Bundle\DemoBundle\Admin\InspectionAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Demo" label="Inspection"/>
      <argument>sonata.demo.admin.inspection</argument>
      <argument>Sonata\Bundle\DemoBundle\Entity\Inspection</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Inspection</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.demo.admin.color" class="Sonata\Bundle\DemoBundle\Admin\ColorAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Demo" label="Color"/>
      <argument>sonata.demo.admin.color</argument>
      <argument>Sonata\Bundle\DemoBundle\Entity\Color</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Color</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.demo.admin.material" class="Sonata\Bundle\DemoBundle\Admin\MaterialAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Demo" label="Material"/>
      <argument>sonata.demo.admin.material</argument>
      <argument>Sonata\Bundle\DemoBundle\Entity\Material</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Material</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="GUEST" type="collection">
            <argument>VIEW</argument>
            <argument>LIST</argument>
          </argument>
          <argument key="STAFF" type="collection">
            <argument>EDIT</argument>
            <argument>LIST</argument>
            <argument>CREATE</argument>
          </argument>
          <argument key="EDITOR" type="collection">
            <argument>OPERATOR</argument>
            <argument>EXPORT</argument>
          </argument>
          <argument key="ADMIN" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.timeline.admin.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.ecommerce_demo.product.goodie.manager" class="Sonata\ProductBundle\Entity\ProductManager">
      <argument>Application\Sonata\ProductBundle\Entity\Goodie</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.ecommerce_demo.product.goodie.type" class="Application\Sonata\ProductBundle\Provider\GoodieProductProvider">
      <argument type="service" id="jms_serializer"/>
      <call method="setCode">
        <argument>sonata.ecommerce_demo.product.goodie</argument>
      </call>
      <call method="setBasketElementManager">
        <argument type="service" id="sonata.basket_element.manager"/>
      </call>
      <call method="setCurrencyPriceCalculator">
        <argument type="service" id="sonata.price.currency.calculator"/>
      </call>
      <call method="setProductCategoryManager">
        <argument type="service" id="sonata.product_category.product"/>
      </call>
      <call method="setProductCollectionManager">
        <argument type="service" id="sonata.product_collection.product"/>
      </call>
      <call method="setOrderElementClassName">
        <argument>Application\Sonata\OrderBundle\Entity\OrderElement</argument>
      </call>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="sonata.ecommerce_demo.product.travel.manager" class="Sonata\ProductBundle\Entity\ProductManager">
      <argument>Application\Sonata\ProductBundle\Entity\Travel</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.ecommerce_demo.product.travel.type" class="Application\Sonata\ProductBundle\Provider\TravelProductProvider">
      <argument type="service" id="jms_serializer"/>
      <call method="setCode">
        <argument>sonata.ecommerce_demo.product.travel</argument>
      </call>
      <call method="setBasketElementManager">
        <argument type="service" id="sonata.basket_element.manager"/>
      </call>
      <call method="setCurrencyPriceCalculator">
        <argument type="service" id="sonata.price.currency.calculator"/>
      </call>
      <call method="setProductCategoryManager">
        <argument type="service" id="sonata.product_category.product"/>
      </call>
      <call method="setProductCollectionManager">
        <argument type="service" id="sonata.product_collection.product"/>
      </call>
      <call method="setOrderElementClassName">
        <argument>Application\Sonata\OrderBundle\Entity\OrderElement</argument>
      </call>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <call method="setVariationFields">
        <argument type="collection">
          <argument>travellers</argument>
          <argument>travelDays</argument>
          <argument>sku</argument>
          <argument>slug</argument>
          <argument>name</argument>
          <argument>price</argument>
          <argument>stock</argument>
          <argument>vatRate</argument>
          <argument>priceIncludingVat</argument>
          <argument>enabled</argument>
        </argument>
      </call>
    </service>
    <service id="spy_timeline.filter.manager" class="Spy\Timeline\Filter\FilterManager">
      <call method="add">
        <argument type="service">
          <service class="Spy\Timeline\Filter\DataHydrator">
            <argument>false</argument>
            <call method="setPriority">
              <argument>20</argument>
            </call>
            <call method="addLocator">
              <argument type="service">
                <service class="Spy\TimelineBundle\Filter\DataHydrator\Locator\DoctrineORM">
                  <argument type="service" id="doctrine" on-invalid="null"/>
                </service>
              </argument>
            </call>
          </service>
        </argument>
      </call>
    </service>
    <service id="spy_timeline.filter.duplicate_key" class="Spy\Timeline\Filter\DuplicateKey"/>
    <service id="spy_timeline.filter.data_hydrator" class="Spy\Timeline\Filter\DataHydrator">
      <argument>false</argument>
      <call method="setPriority">
        <argument>20</argument>
      </call>
      <call method="addLocator">
        <argument type="service">
          <service class="Spy\TimelineBundle\Filter\DataHydrator\Locator\DoctrineORM">
            <argument type="service" id="doctrine" on-invalid="null"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="spy_timeline.filter.data_hydrator.locator.doctrine_orm" class="Spy\TimelineBundle\Filter\DataHydrator\Locator\DoctrineORM">
      <argument type="service" id="doctrine" on-invalid="null"/>
    </service>
    <service id="spy_timeline.filter.data_hydrator.locator.doctrine_odm" class="Spy\TimelineBundle\Filter\DataHydrator\Locator\DoctrineODM">
      <argument>null</argument>
    </service>
    <service id="spy_timeline.unread_notifications" class="Spy\Timeline\Notification\Unread\UnreadNotificationManager">
      <argument type="service" id="spy_timeline.timeline_manager.orm"/>
    </service>
    <service id="spy_timeline.paginator.knp" class="Spy\Timeline\ResultBuilder\Pager\KnpPager">
      <argument type="service" id="knp_paginator" on-invalid="null"/>
    </service>
    <service id="spy_timeline.resolve_component.doctrine" class="Spy\TimelineBundle\ResolveComponent\DoctrineComponentDataResolver">
      <call method="addRegistry">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\Registry">
            <argument type="service" id="service_container"/>
            <argument type="collection">
              <argument key="default">doctrine.dbal.default_connection</argument>
            </argument>
            <argument type="collection">
              <argument key="default">doctrine.orm.default_entity_manager</argument>
            </argument>
            <argument>default</argument>
            <argument>default</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="spy_timeline.resolve_component.basic" class="Spy\Timeline\ResolveComponent\BasicComponentDataResolver"/>
    <service id="spy_timeline.result_builder" class="Spy\Timeline\ResultBuilder\ResultBuilder">
      <argument type="service">
        <service class="Spy\TimelineBundle\Driver\ORM\QueryExecutor" public="false"/>
      </argument>
      <argument type="service">
        <service class="Spy\Timeline\Filter\FilterManager">
          <call method="add">
            <argument type="service">
              <service class="Spy\Timeline\Filter\DataHydrator">
                <argument>false</argument>
                <call method="setPriority">
                  <argument>20</argument>
                </call>
                <call method="addLocator">
                  <argument type="service">
                    <service class="Spy\TimelineBundle\Filter\DataHydrator\Locator\DoctrineORM">
                      <argument type="service" id="doctrine" on-invalid="null"/>
                    </service>
                  </argument>
                </call>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <call method="setPager">
        <argument type="service">
          <service class="Spy\TimelineBundle\Driver\ORM\Pager" public="false"/>
        </argument>
      </call>
    </service>
    <service id="spy_timeline.spread.deployer.default" class="Spy\Timeline\Spread\Deployer">
      <argument type="service" id="spy_timeline.timeline_manager.orm"/>
      <argument type="service" id="spy_timeline.spread.entry_collection"/>
      <argument>true</argument>
      <argument>50</argument>
      <call method="setDelivery">
        <argument>immediate</argument>
      </call>
      <call method="addSpread">
        <argument type="service">
          <service class="Sonata\TimelineBundle\Spread\AdminSpread">
            <tag name="spy_timeline.spread"/>
            <argument type="service" id="doctrine"/>
            <argument>Application\Sonata\UserBundle\Entity\User</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="spy_timeline.spread.entry_collection" class="Spy\Timeline\Spread\Entry\EntryCollection">
      <argument>true</argument>
      <argument>50</argument>
    </service>
    <service id="spy_timeline.twig.extension.timeline" class="Spy\TimelineBundle\Twig\Extension\TimelineExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="path">SpyTimelineBundle:Timeline</argument>
        <argument key="fallback">SpyTimelineBundle:Timeline:default.html.twig</argument>
        <argument key="i18n_fallback">null</argument>
      </argument>
      <argument type="collection">
        <argument>SpyTimelineBundle:Action:components.html.twig</argument>
      </argument>
    </service>
    <service id="spy_timeline.timeline_manager.orm" class="Spy\TimelineBundle\Driver\ORM\TimelineManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="spy_timeline.result_builder"/>
      <argument>Application\Sonata\TimelineBundle\Entity\Timeline</argument>
    </service>
    <service id="spy_timeline.action_manager.orm" class="Spy\TimelineBundle\Driver\ORM\ActionManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="spy_timeline.result_builder"/>
      <argument>Application\Sonata\TimelineBundle\Entity\Action</argument>
      <argument>Application\Sonata\TimelineBundle\Entity\Component</argument>
      <argument>Application\Sonata\TimelineBundle\Entity\ActionComponent</argument>
      <call method="setDeployer">
        <argument type="service">
          <service class="Spy\Timeline\Spread\Deployer">
            <argument type="service" id="spy_timeline.timeline_manager.orm"/>
            <argument type="service" id="spy_timeline.spread.entry_collection"/>
            <argument>true</argument>
            <argument>50</argument>
            <call method="setDelivery">
              <argument>immediate</argument>
            </call>
            <call method="addSpread">
              <argument type="service">
                <service class="Sonata\TimelineBundle\Spread\AdminSpread">
                  <tag name="spy_timeline.spread"/>
                  <argument type="service" id="doctrine"/>
                  <argument>Application\Sonata\UserBundle\Entity\User</argument>
                </service>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="setComponentDataResolver">
        <argument type="service">
          <service class="Spy\TimelineBundle\ResolveComponent\DoctrineComponentDataResolver">
            <call method="addRegistry">
              <argument type="service">
                <service class="Doctrine\Bundle\DoctrineBundle\Registry">
                  <argument type="service" id="service_container"/>
                  <argument type="collection">
                    <argument key="default">doctrine.dbal.default_connection</argument>
                  </argument>
                  <argument type="collection">
                    <argument key="default">doctrine.orm.default_entity_manager</argument>
                  </argument>
                  <argument>default</argument>
                  <argument>default</argument>
                </service>
              </argument>
            </call>
          </service>
        </argument>
      </call>
    </service>
    <service id="spy_timeline.query_builder.orm" class="Spy\TimelineBundle\Driver\ORM\QueryBuilder\QueryBuilder">
      <argument type="service" id="spy_timeline.query_builder.factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="spy_timeline.result_builder"/>
      <argument>Application\Sonata\TimelineBundle\Entity\Action</argument>
    </service>
    <service id="spy_timeline.query_builder.factory" class="Spy\Timeline\Driver\QueryBuilder\QueryBuilderFactory">
      <argument type="collection">
        <argument key="query_builder">Spy\TimelineBundle\Driver\ORM\QueryBuilder\QueryBuilder</argument>
        <argument key="asserter">Spy\Timeline\Driver\QueryBuilder\Criteria\Asserter</argument>
        <argument key="operator">Spy\Timeline\Driver\QueryBuilder\Criteria\Operator</argument>
      </argument>
    </service>
    <service id="sonata.timeline.admin.extension" class="Sonata\TimelineBundle\Admin\AdminExtension">
      <tag name="sonata.admin.extension" global="1"/>
      <argument type="service" id="spy_timeline.action_manager.orm"/>
      <argument type="service" id="security.context"/>
    </service>
    <service id="sonata.timeline.spread.admin" class="Sonata\TimelineBundle\Spread\AdminSpread">
      <tag name="spy_timeline.spread"/>
      <argument type="service" id="doctrine"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="sonata.timeline.block.timeline" class="Sonata\TimelineBundle\Block\TimelineBlock">
      <tag name="sonata.block"/>
      <argument>sonata.timeline.block.timeline</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="spy_timeline.action_manager.orm"/>
      <argument type="service" id="spy_timeline.timeline_manager.orm"/>
      <argument type="service" id="security.context"/>
    </service>
    <service id="sonata.timeline.twig.extension" class="Sonata\TimelineBundle\Twig\Extension\SonataTimelineExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.pool" on-invalid="ignore"/>
    </service>
    <service id="mopa_bootstrap.twig.extension.bootstrap_form" class="Mopa\Bundle\BootstrapBundle\Twig\FormExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="mopa_bootstrap.twig.extension.bootstrap_icon" class="Mopa\Bundle\BootstrapBundle\Twig\IconExtension">
      <tag name="twig.extension"/>
      <argument>glyphicons</argument>
      <argument>icon</argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.button" class="Mopa\Bundle\BootstrapBundle\Form\Extension\IconButtonExtension">
      <tag name="form.type_extension" alias="button"/>
    </service>
    <service id="mopa_bootstrap.form.type_extension.help" class="Mopa\Bundle\BootstrapBundle\Form\Extension\HelpFormTypeExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="collection">
        <argument key="help_label_tooltip" type="collection">
          <argument key="title">null</argument>
          <argument key="text">null</argument>
          <argument key="icon">info-sign</argument>
          <argument key="placement">top</argument>
        </argument>
        <argument key="help_label_popover" type="collection">
          <argument key="title">null</argument>
          <argument key="content">null</argument>
          <argument key="text">null</argument>
          <argument key="icon">info-sign</argument>
          <argument key="placement">top</argument>
        </argument>
        <argument key="help_widget_popover" type="collection">
          <argument key="title">null</argument>
          <argument key="content">null</argument>
          <argument key="trigger">hover</argument>
          <argument key="toggle">popover</argument>
          <argument key="placement">right</argument>
        </argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.legend" class="Mopa\Bundle\BootstrapBundle\Form\Extension\LegendFormTypeExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="collection">
        <argument key="render_fieldset">true</argument>
        <argument key="show_legend">false</argument>
        <argument key="show_child_legend">false</argument>
        <argument key="render_required_asterisk">true</argument>
        <argument key="render_optional_text">false</argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.error" class="Mopa\Bundle\BootstrapBundle\Form\Extension\ErrorTypeFormTypeExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="collection">
        <argument key="error_type">null</argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.widget" class="Mopa\Bundle\BootstrapBundle\Form\Extension\WidgetFormTypeExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="collection">
        <argument key="checkbox_label">both</argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.horizontal" class="Mopa\Bundle\BootstrapBundle\Form\Extension\HorizontalFormTypeExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="collection">
        <argument key="horizontal_label_class">col-lg-3 control-label</argument>
        <argument key="horizontal_label_offset_class">col-lg-offset-3</argument>
        <argument key="horizontal_input_wrapper_class">col-lg-9</argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.widget_collection" class="Mopa\Bundle\BootstrapBundle\Form\Extension\WidgetCollectionFormTypeExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="collection">
        <argument key="render_collection_item">true</argument>
        <argument key="widget_add_btn" type="collection">
          <argument key="attr" type="collection">
            <argument key="class">btn btn-default</argument>
          </argument>
          <argument key="label">add_item</argument>
          <argument key="icon">null</argument>
          <argument key="icon_color">null</argument>
        </argument>
        <argument key="widget_remove_btn" type="collection">
          <argument key="attr" type="collection">
            <argument key="class">btn btn-default</argument>
          </argument>
          <argument key="label">remove_item</argument>
          <argument key="icon">null</argument>
          <argument key="icon_color">null</argument>
        </argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.date" class="Mopa\Bundle\BootstrapBundle\Form\Extension\DateTypeExtension">
      <tag name="form.type_extension" alias="date"/>
    </service>
    <service id="mopa_bootstrap.form.type_extension.tabbed" class="Mopa\Bundle\BootstrapBundle\Form\Extension\TabbedFormTypeExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service" id="form.factory"/>
      <argument type="collection">
        <argument key="class">nav nav-tabs</argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type.tab" class="Mopa\Bundle\BootstrapBundle\Form\Type\TabType">
      <tag name="form.type" alias="tab"/>
    </service>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController">
      <argument type="service" id="cmf_routing.router" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="data_collector.config" type="collection">
          <argument>config</argument>
          <argument>@WebProfiler/Collector/config.html.twig</argument>
        </argument>
        <argument key="data_collector.request" type="collection">
          <argument>request</argument>
          <argument>@WebProfiler/Collector/request.html.twig</argument>
        </argument>
        <argument key="data_collector.ajax" type="collection">
          <argument>ajax</argument>
          <argument>@WebProfiler/Collector/ajax.html.twig</argument>
        </argument>
        <argument key="data_collector.exception" type="collection">
          <argument>exception</argument>
          <argument>@WebProfiler/Collector/exception.html.twig</argument>
        </argument>
        <argument key="data_collector.events" type="collection">
          <argument>events</argument>
          <argument>@WebProfiler/Collector/events.html.twig</argument>
        </argument>
        <argument key="data_collector.logger" type="collection">
          <argument>logger</argument>
          <argument>@WebProfiler/Collector/logger.html.twig</argument>
        </argument>
        <argument key="data_collector.time" type="collection">
          <argument>time</argument>
          <argument>@WebProfiler/Collector/time.html.twig</argument>
        </argument>
        <argument key="data_collector.memory" type="collection">
          <argument>memory</argument>
          <argument>@WebProfiler/Collector/memory.html.twig</argument>
        </argument>
        <argument key="data_collector.router" type="collection">
          <argument>router</argument>
          <argument>@WebProfiler/Collector/router.html.twig</argument>
        </argument>
        <argument key="data_collector.form" type="collection">
          <argument>form</argument>
          <argument>@WebProfiler/Collector/form.html.twig</argument>
        </argument>
        <argument key="data_collector.security" type="collection">
          <argument>security</argument>
          <argument>@Security/Collector/security.html.twig</argument>
        </argument>
        <argument key="swiftmailer.data_collector" type="collection">
          <argument>swiftmailer</argument>
          <argument>@Swiftmailer/Collector/swiftmailer.html.twig</argument>
        </argument>
        <argument key="data_collector.doctrine" type="collection">
          <argument>db</argument>
          <argument>@Doctrine/Collector/db.html.twig</argument>
        </argument>
        <argument key="sonata.block.data_collector" type="collection">
          <argument>block</argument>
          <argument>SonataBlockBundle:Profiler:block.html.twig</argument>
        </argument>
      </argument>
      <argument>bottom</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="cmf_routing.router" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument>bottom</argument>
      <argument type="service" id="cmf_routing.router" on-invalid="ignore"/>
      <argument>^/bundles|^/_wdt</argument>
    </service>
    <service id="faker.generator" class="Faker\Factory" factory-method="create" factory-class="Faker\Factory">
      <argument>en_US</argument>
      <call method="seed">
        <argument>469090648</argument>
      </call>
    </service>
    <service id="faker.populator" class="Faker\ORM\Propel\Populator">
      <argument type="service" id="faker.generator"/>
      <argument></argument>
    </service>
    <service id="faker.formatter_factory" class="Bazinga\Bundle\FakerBundle\Factory\FormatterFactory"/>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.assetic" class="Symfony\Bridge\Monolog\Logger">
      <argument>assetic</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.handler.debug" class="Symfony\Bridge\Monolog\Handler\DebugHandler">
      <argument>100</argument>
      <argument>true</argument>
    </service>
    <service id="nelmio_api_doc.parser.form_type_parser" class="Nelmio\ApiDocBundle\Parser\FormTypeParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="nelmio_api_doc.parser.validation_parser" class="Nelmio\ApiDocBundle\Parser\ValidationParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="nelmio_api_doc.parser.jms_metadata_parser" class="Nelmio\ApiDocBundle\Parser\JmsMetadataParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="nelmio_api_doc.doc_comment_extractor"/>
    </service>
    <service id="session.storage.filesystem" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>/var/www/sonata-3/app/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
      <argument>/var/www/sonata-3/app/cache/sessions</argument>
    </service>
    <service id="templating.loader" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="debug.templating.engine.php" class="Symfony\Bundle\FrameworkBundle\Templating\TimedPhpEngine">
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="templating.loader"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="templating.globals"/>
      <call method="setCharset">
        <argument>UTF-8</argument>
      </call>
      <call method="setHelpers">
        <argument type="collection">
          <argument key="slots">templating.helper.slots</argument>
          <argument key="assets">templating.helper.assets</argument>
          <argument key="request">templating.helper.request</argument>
          <argument key="session">templating.helper.session</argument>
          <argument key="router">templating.helper.router</argument>
          <argument key="actions">templating.helper.actions</argument>
          <argument key="code">templating.helper.code</argument>
          <argument key="translator">templating.helper.translator</argument>
          <argument key="form">templating.helper.form</argument>
          <argument key="stopwatch">templating.helper.stopwatch</argument>
          <argument key="logout_url">templating.helper.logout_url</argument>
          <argument key="security">templating.helper.security</argument>
          <argument key="assetic">assetic.helper.static</argument>
          <argument key="markdown">templating.helper.markdown</argument>
          <argument key="knp_pagination">knp_paginator.templating.helper.pagination</argument>
          <argument key="ivory_ckeditor">ivory_ck_editor.templating.helper</argument>
          <argument key="jms_serializer">jms_serializer.templating.helper.serializer</argument>
          <argument key="locale">sonata.intl.templating.helper.locale</argument>
          <argument key="number">sonata.intl.templating.helper.number</argument>
          <argument key="datetime">sonata.intl.templating.helper.datetime</argument>
          <argument key="sonata_block">sonata.block.templating.helper</argument>
        </argument>
      </call>
    </service>
    <service id="templating" class="Symfony\Bundle\TwigBundle\Debug\TimedTwigEngine">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="translator" class="Symfony\Component\Translation\LoggingTranslator">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="annotation_reader" class="Doctrine\Common\Annotations\FileCacheReader">
      <argument type="service">
        <service class="Doctrine\Common\Annotations\AnnotationReader" public="false"/>
      </argument>
      <argument>/var/www/sonata-3/app/cache/dev/annotations</argument>
      <argument>true</argument>
    </service>
    <service id="security.encoder_factory" class="Symfony\Component\Security\Core\Encoder\EncoderFactory">
      <argument type="collection">
        <argument key="Application\Sonata\UserBundle\Entity\User" type="collection">
          <argument key="class">%security.encoder.digest.class%</argument>
          <argument key="arguments" type="collection">
            <argument>sha512</argument>
            <argument>false</argument>
            <argument>1</argument>
          </argument>
        </argument>
        <argument key="Symfony\Component\Security\Core\User\User" type="collection">
          <argument key="class">%security.encoder.plain.class%</argument>
          <argument key="arguments" type="collection">
            <argument>false</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.password_encoder" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder">
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.acl.provider" class="Symfony\Component\Security\Acl\Dbal\MutableAclProvider">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Acl\Domain\PermissionGrantingStrategy" public="false"/>
      </argument>
      <argument type="collection">
        <argument key="class_table_name">acl_classes</argument>
        <argument key="entry_table_name">acl_entries</argument>
        <argument key="oid_table_name">acl_object_identities</argument>
        <argument key="oid_ancestors_table_name">acl_object_identity_ancestors</argument>
        <argument key="sid_table_name">acl_security_identities</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="twig.loader" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/knplabs/knp-paginator-bundle/Knp/Bundle/PaginatorBundle/Resources/views</argument>
        <argument>KnpPaginator</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/views</argument>
        <argument>ApplicationSonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/views</argument>
        <argument>SonataPage</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/views</argument>
        <argument>ApplicationSonataPage</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/views</argument>
        <argument>SonataNews</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/egeloen/ckeditor-bundle/Resources/views</argument>
        <argument>IvoryCKEditor</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/Resources/views</argument>
        <argument>SimpleThingsEntityAudit</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle/Resources/views</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/views</argument>
        <argument>SonataBasket</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/views</argument>
        <argument>SonataCustomer</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/views</argument>
        <argument>SonataInvoice</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/views</argument>
        <argument>SonataOrder</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/views</argument>
        <argument>SonataPayment</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/views</argument>
        <argument>SonataProduct</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/views</argument>
        <argument>ApplicationSonataProduct</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/views</argument>
        <argument>FOSComment</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/views</argument>
        <argument>SonataComment</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/intl-bundle/Resources/views</argument>
        <argument>SonataIntl</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/formatter-bundle/Resources/views</argument>
        <argument>SonataFormatter</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/block-bundle/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/seo-bundle/Resources/views</argument>
        <argument>SonataSeo</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/src/Application/Sonata/SeoBundle/Resources/views</argument>
        <argument>ApplicationSonataSeo</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/datagrid-bundle/Resources/views</argument>
        <argument>SonataDatagrid</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/src/Sonata/Bundle/DemoBundle/Resources/views</argument>
        <argument>SonataDemo</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/src/Sonata/Bundle/QABundle/Resources/views</argument>
        <argument>SonataQA</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/views</argument>
        <argument>SpyTimeline</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/views</argument>
        <argument>SonataTimeline</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/views</argument>
        <argument>MopaBootstrap</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/sonata-3/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
      </call>
    </service>
    <service id="logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport" class="Swift_Transport_EsmtpTransport">
      <argument type="service">
        <service class="Swift_Transport_StreamBuffer" public="false">
          <argument type="service">
            <service class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
          </argument>
        </service>
      </argument>
      <argument type="collection">
        <argument type="service">
          <service class="Swift_Transport_Esmtp_AuthHandler" public="false">
            <argument type="collection">
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
              </argument>
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
              </argument>
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
              </argument>
            </argument>
            <call method="setUsername">
              <argument>null</argument>
            </call>
            <call method="setPassword">
              <argument>null</argument>
            </call>
            <call method="setAuthMode">
              <argument>null</argument>
            </call>
          </service>
        </argument>
      </argument>
      <argument type="service">
        <service class="Swift_Events_SimpleEventDispatcher" public="false"/>
      </argument>
      <call method="setHost">
        <argument>localhost</argument>
      </call>
      <call method="setPort">
        <argument>25</argument>
      </call>
      <call method="setEncryption">
        <argument>null</argument>
      </call>
      <call method="setTimeout">
        <argument>30</argument>
      </call>
      <call method="setSourceIp">
        <argument>null</argument>
      </call>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="security.extra.metadata_driver" class="Metadata\Driver\DriverChain">
      <argument type="collection">
        <argument type="service">
          <service class="JMS\SecurityExtraBundle\Metadata\Driver\AnnotationDriver" public="false">
            <argument type="service" id="annotation_reader"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="markdown.parser" class="Knp\Bundle\MarkdownBundle\Parser\Preset\Max">
      <tag name="markdown.parser" alias="max"/>
    </service>
    <service id="fos_user.mailer" class="FOS\UserBundle\Mailer\Mailer">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="cmf_routing.router"/>
      <argument type="service" id="templating"/>
      <argument type="collection">
        <argument key="confirmation.template">FOSUserBundle:Registration:email.txt.twig</argument>
        <argument key="resetting.template">FOSUserBundle:Resetting:email.txt.twig</argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation" type="collection">
            <argument key="webmaster@example.com">webmaster</argument>
          </argument>
          <argument key="resetting" type="collection">
            <argument key="webmaster@example.com">webmaster</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.util.email_canonicalizer" class="FOS\UserBundle\Util\Canonicalizer"/>
    <service id="fos_user.util.token_generator" class="FOS\UserBundle\Util\TokenGenerator">
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="fos_user.user_manager" class="Sonata\UserBundle\Entity\UserManager">
      <argument type="service" id="security.encoder_factory"/>
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
      <argument type="service" id="fos_user.entity_manager"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.profile.form.handler" class="FOS\UserBundle\Form\Handler\ProfileFormHandler" scope="request">
      <argument type="service" id="fos_user.profile.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.registration.form.handler" class="FOS\UserBundle\Form\Handler\RegistrationFormHandler" scope="request">
      <argument type="service" id="fos_user.registration.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
      <argument type="service" id="fos_user.mailer"/>
      <argument type="service" id="fos_user.util.token_generator"/>
    </service>
    <service id="fos_user.resetting.form.handler" class="FOS\UserBundle\Form\Handler\ResettingFormHandler" scope="request">
      <argument type="service" id="fos_user.resetting.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.group_manager" class="Sonata\UserBundle\Entity\GroupManager">
      <argument type="service" id="fos_user.entity_manager"/>
      <argument>Application\Sonata\UserBundle\Entity\Group</argument>
    </service>
    <service id="fos_user.group.form.handler" class="FOS\UserBundle\Form\Handler\GroupFormHandler" scope="request">
      <argument type="service" id="fos_user.group.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.group_manager"/>
    </service>
    <service id="sonata.user.profile.form.handler" class="Sonata\UserBundle\Form\Handler\ProfileFormHandler" scope="request">
      <argument type="service" id="sonata.user.profile.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" factory-method="getRequestContext" factory-service="sonata.page.site.selector"/>
    <service id="sonata.admin.security.handler" class="Sonata\AdminBundle\Security\Handler\AclSecurityHandler">
      <argument type="service" id="security.context" on-invalid="null"/>
      <argument type="service" id="security.acl.provider" on-invalid="null"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
      <call method="setAdminPermissions">
        <argument type="collection">
          <argument>CREATE</argument>
          <argument>LIST</argument>
          <argument>DELETE</argument>
          <argument>UNDELETE</argument>
          <argument>EXPORT</argument>
          <argument>OPERATOR</argument>
          <argument>MASTER</argument>
        </argument>
      </call>
      <call method="setObjectPermissions">
        <argument type="collection">
          <argument>VIEW</argument>
          <argument>EDIT</argument>
          <argument>DELETE</argument>
          <argument>UNDELETE</argument>
          <argument>OPERATOR</argument>
          <argument>MASTER</argument>
          <argument>OWNER</argument>
        </argument>
      </call>
    </service>
    <service id="fos_rest.view_handler" class="FOS\RestBundle\View\ViewHandler">
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="html">302</argument>
      </argument>
      <argument>twig</argument>
      <call method="setExclusionStrategyGroups">
        <argument></argument>
      </call>
      <call method="setExclusionStrategyVersion">
        <argument></argument>
      </call>
      <call method="setSerializeNullStrategy">
        <argument>false</argument>
      </call>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="jms_serializer.metadata_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver">
      <argument type="service">
        <service class="Metadata\Driver\DriverChain" public="false">
          <argument type="collection">
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/var/www/sonata-3/vendor/symfony/monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/var/www/sonata-3/vendor/symfony/swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/var/www/sonata-3/vendor/sensio/framework-extra-bundle/Sensio/Bundle/FrameworkExtraBundle/Resources/config/serializer</argument>
                      <argument key="JMS\AopBundle">/var/www/sonata-3/vendor/jms/aop-bundle/JMS/AopBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SecurityExtraBundle">/var/www/sonata-3/vendor/jms/security-extra-bundle/JMS/SecurityExtraBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">/var/www/sonata-3/vendor/symfony/assetic-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/var/www/sonata-3/vendor/doctrine/doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\MigrationsBundle">/var/www/sonata-3/vendor/doctrine/doctrine-migrations-bundle/Doctrine/Bundle/MigrationsBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">/var/www/sonata-3/vendor/knplabs/knp-menu-bundle/Knp/Bundle/MenuBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MarkdownBundle">/var/www/sonata-3/vendor/knplabs/knp-markdown-bundle/Knp/Bundle/MarkdownBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\PaginatorBundle">/var/www/sonata-3/vendor/knplabs/knp-paginator-bundle/Knp/Bundle/PaginatorBundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">/var/www/sonata-3/app/../vendor/sonata-project/user-bundle/Resources/config/serializer/FOSUserBundle</argument>
                      <argument key="Sonata\UserBundle">/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\UserBundle">/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\PageBundle">/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\PageBundle">/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\NewsBundle">/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\NewsBundle">/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\MediaBundle">/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\MediaBundle">/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/serializer</argument>
                      <argument key="Ivory\CKEditorBundle">/var/www/sonata-3/vendor/egeloen/ckeditor-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">/var/www/sonata-3/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="SimpleThings\EntityAudit">/var/www/sonata-3/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/var/www/sonata-3/vendor/friendsofsymfony/rest-bundle/FOS/RestBundle/Resources/config/serializer</argument>
                      <argument key="Nelmio\ApiDocBundle">/var/www/sonata-3/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BasketBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\BasketBundle">/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CustomerBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\CustomerBundle">/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DeliveryBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/DeliveryBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\DeliveryBundle">/var/www/sonata-3/src/Application/Sonata/DeliveryBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\InvoiceBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\InvoiceBundle">/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\OrderBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\OrderBundle">/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\PaymentBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\PaymentBundle">/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\ProductBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\ProductBundle">/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\PriceBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PriceBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/var/www/sonata-3/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="FOS\CommentBundle">/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CommentBundle">/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\CommentBundle">/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">/var/www/sonata-3/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\IntlBundle">/var/www/sonata-3/vendor/sonata-project/intl-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\FormatterBundle">/var/www/sonata-3/vendor/sonata-project/formatter-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CacheBundle">/var/www/sonata-3/vendor/sonata-project/cache-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">/var/www/sonata-3/vendor/sonata-project/block-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\SeoBundle">/var/www/sonata-3/vendor/sonata-project/seo-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\ClassificationBundle">/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\ClassificationBundle">/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\NotificationBundle">/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\NotificationBundle">/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\SeoBundle">/var/www/sonata-3/src/Application/Sonata/SeoBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DatagridBundle">/var/www/sonata-3/app/../vendor/sonata-project/datagrid-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Cmf\Bundle\RoutingBundle">/var/www/sonata-3/vendor/symfony-cmf/routing-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\Bundle\DemoBundle">/var/www/sonata-3/src/Sonata/Bundle/DemoBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\Bundle\QABundle">/var/www/sonata-3/src/Sonata/Bundle/QABundle/Resources/config/serializer</argument>
                      <argument key="Spy\TimelineBundle">/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\TimelineBundle">/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\TimelineBundle">/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/serializer</argument>
                      <argument key="Mopa\Bundle\BootstrapBundle">/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/var/www/sonata-3/vendor/sensio/generator-bundle/Sensio/Bundle/GeneratorBundle/Resources/config/serializer</argument>
                      <argument key="Bazinga\Bundle\FakerBundle">/var/www/sonata-3/vendor/willdurand/faker-bundle/Bazinga/Bundle/FakerBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\FixturesBundle">/var/www/sonata-3/vendor/doctrine/doctrine-fixtures-bundle/Doctrine/Bundle/FixturesBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\Component\Basket">/var/www/sonata-3/app/../vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/serializer/Component</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/var/www/sonata-3/vendor/symfony/monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/var/www/sonata-3/vendor/symfony/swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/var/www/sonata-3/vendor/sensio/framework-extra-bundle/Sensio/Bundle/FrameworkExtraBundle/Resources/config/serializer</argument>
                      <argument key="JMS\AopBundle">/var/www/sonata-3/vendor/jms/aop-bundle/JMS/AopBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SecurityExtraBundle">/var/www/sonata-3/vendor/jms/security-extra-bundle/JMS/SecurityExtraBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">/var/www/sonata-3/vendor/symfony/assetic-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/var/www/sonata-3/vendor/doctrine/doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\MigrationsBundle">/var/www/sonata-3/vendor/doctrine/doctrine-migrations-bundle/Doctrine/Bundle/MigrationsBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">/var/www/sonata-3/vendor/knplabs/knp-menu-bundle/Knp/Bundle/MenuBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MarkdownBundle">/var/www/sonata-3/vendor/knplabs/knp-markdown-bundle/Knp/Bundle/MarkdownBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\PaginatorBundle">/var/www/sonata-3/vendor/knplabs/knp-paginator-bundle/Knp/Bundle/PaginatorBundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">/var/www/sonata-3/app/../vendor/sonata-project/user-bundle/Resources/config/serializer/FOSUserBundle</argument>
                      <argument key="Sonata\UserBundle">/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\UserBundle">/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\PageBundle">/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\PageBundle">/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\NewsBundle">/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\NewsBundle">/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\MediaBundle">/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\MediaBundle">/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/serializer</argument>
                      <argument key="Ivory\CKEditorBundle">/var/www/sonata-3/vendor/egeloen/ckeditor-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">/var/www/sonata-3/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="SimpleThings\EntityAudit">/var/www/sonata-3/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/var/www/sonata-3/vendor/friendsofsymfony/rest-bundle/FOS/RestBundle/Resources/config/serializer</argument>
                      <argument key="Nelmio\ApiDocBundle">/var/www/sonata-3/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BasketBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\BasketBundle">/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CustomerBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\CustomerBundle">/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DeliveryBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/DeliveryBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\DeliveryBundle">/var/www/sonata-3/src/Application/Sonata/DeliveryBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\InvoiceBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\InvoiceBundle">/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\OrderBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\OrderBundle">/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\PaymentBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\PaymentBundle">/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\ProductBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\ProductBundle">/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\PriceBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PriceBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/var/www/sonata-3/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="FOS\CommentBundle">/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CommentBundle">/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\CommentBundle">/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">/var/www/sonata-3/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\IntlBundle">/var/www/sonata-3/vendor/sonata-project/intl-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\FormatterBundle">/var/www/sonata-3/vendor/sonata-project/formatter-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CacheBundle">/var/www/sonata-3/vendor/sonata-project/cache-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">/var/www/sonata-3/vendor/sonata-project/block-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\SeoBundle">/var/www/sonata-3/vendor/sonata-project/seo-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\ClassificationBundle">/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\ClassificationBundle">/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\NotificationBundle">/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\NotificationBundle">/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\SeoBundle">/var/www/sonata-3/src/Application/Sonata/SeoBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DatagridBundle">/var/www/sonata-3/app/../vendor/sonata-project/datagrid-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Cmf\Bundle\RoutingBundle">/var/www/sonata-3/vendor/symfony-cmf/routing-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\Bundle\DemoBundle">/var/www/sonata-3/src/Sonata/Bundle/DemoBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\Bundle\QABundle">/var/www/sonata-3/src/Sonata/Bundle/QABundle/Resources/config/serializer</argument>
                      <argument key="Spy\TimelineBundle">/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\TimelineBundle">/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\TimelineBundle">/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/serializer</argument>
                      <argument key="Mopa\Bundle\BootstrapBundle">/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/var/www/sonata-3/vendor/sensio/generator-bundle/Sensio/Bundle/GeneratorBundle/Resources/config/serializer</argument>
                      <argument key="Bazinga\Bundle\FakerBundle">/var/www/sonata-3/vendor/willdurand/faker-bundle/Bazinga/Bundle/FakerBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\FixturesBundle">/var/www/sonata-3/vendor/doctrine/doctrine-fixtures-bundle/Doctrine/Bundle/FixturesBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\Component\Basket">/var/www/sonata-3/app/../vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/serializer/Component</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\PhpDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/var/www/sonata-3/vendor/symfony/monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/var/www/sonata-3/vendor/symfony/swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/var/www/sonata-3/vendor/sensio/framework-extra-bundle/Sensio/Bundle/FrameworkExtraBundle/Resources/config/serializer</argument>
                      <argument key="JMS\AopBundle">/var/www/sonata-3/vendor/jms/aop-bundle/JMS/AopBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SecurityExtraBundle">/var/www/sonata-3/vendor/jms/security-extra-bundle/JMS/SecurityExtraBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">/var/www/sonata-3/vendor/symfony/assetic-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/var/www/sonata-3/vendor/doctrine/doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\MigrationsBundle">/var/www/sonata-3/vendor/doctrine/doctrine-migrations-bundle/Doctrine/Bundle/MigrationsBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">/var/www/sonata-3/vendor/knplabs/knp-menu-bundle/Knp/Bundle/MenuBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MarkdownBundle">/var/www/sonata-3/vendor/knplabs/knp-markdown-bundle/Knp/Bundle/MarkdownBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\PaginatorBundle">/var/www/sonata-3/vendor/knplabs/knp-paginator-bundle/Knp/Bundle/PaginatorBundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">/var/www/sonata-3/app/../vendor/sonata-project/user-bundle/Resources/config/serializer/FOSUserBundle</argument>
                      <argument key="Sonata\UserBundle">/var/www/sonata-3/vendor/sonata-project/user-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\UserBundle">/var/www/sonata-3/src/Application/Sonata/UserBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\PageBundle">/var/www/sonata-3/vendor/sonata-project/page-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\PageBundle">/var/www/sonata-3/src/Application/Sonata/PageBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\NewsBundle">/var/www/sonata-3/vendor/sonata-project/news-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\NewsBundle">/var/www/sonata-3/src/Application/Sonata/NewsBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\MediaBundle">/var/www/sonata-3/vendor/sonata-project/media-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\MediaBundle">/var/www/sonata-3/src/Application/Sonata/MediaBundle/Resources/config/serializer</argument>
                      <argument key="Ivory\CKEditorBundle">/var/www/sonata-3/vendor/egeloen/ckeditor-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">/var/www/sonata-3/vendor/sonata-project/admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">/var/www/sonata-3/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="SimpleThings\EntityAudit">/var/www/sonata-3/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/var/www/sonata-3/vendor/friendsofsymfony/rest-bundle/FOS/RestBundle/Resources/config/serializer</argument>
                      <argument key="Nelmio\ApiDocBundle">/var/www/sonata-3/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BasketBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\BasketBundle">/var/www/sonata-3/src/Application/Sonata/BasketBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CustomerBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/CustomerBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\CustomerBundle">/var/www/sonata-3/src/Application/Sonata/CustomerBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DeliveryBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/DeliveryBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\DeliveryBundle">/var/www/sonata-3/src/Application/Sonata/DeliveryBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\InvoiceBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/InvoiceBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\InvoiceBundle">/var/www/sonata-3/src/Application/Sonata/InvoiceBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\OrderBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/OrderBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\OrderBundle">/var/www/sonata-3/src/Application/Sonata/OrderBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\PaymentBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PaymentBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\PaymentBundle">/var/www/sonata-3/src/Application/Sonata/PaymentBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\ProductBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\ProductBundle">/var/www/sonata-3/src/Application/Sonata/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\PriceBundle">/var/www/sonata-3/vendor/sonata-project/ecommerce/src/PriceBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/var/www/sonata-3/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="FOS\CommentBundle">/var/www/sonata-3/vendor/friendsofsymfony/comment-bundle/FOS/CommentBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CommentBundle">/var/www/sonata-3/vendor/sonata-project/comment-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\CommentBundle">/var/www/sonata-3/src/Application/Sonata/CommentBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">/var/www/sonata-3/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">/var/www/sonata-3/vendor/sonata-project/core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\IntlBundle">/var/www/sonata-3/vendor/sonata-project/intl-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\FormatterBundle">/var/www/sonata-3/vendor/sonata-project/formatter-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CacheBundle">/var/www/sonata-3/vendor/sonata-project/cache-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">/var/www/sonata-3/vendor/sonata-project/block-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\SeoBundle">/var/www/sonata-3/vendor/sonata-project/seo-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\ClassificationBundle">/var/www/sonata-3/vendor/sonata-project/classification-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\ClassificationBundle">/var/www/sonata-3/src/Application/Sonata/ClassificationBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\NotificationBundle">/var/www/sonata-3/vendor/sonata-project/notification-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\NotificationBundle">/var/www/sonata-3/src/Application/Sonata/NotificationBundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\SeoBundle">/var/www/sonata-3/src/Application/Sonata/SeoBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DatagridBundle">/var/www/sonata-3/app/../vendor/sonata-project/datagrid-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Cmf\Bundle\RoutingBundle">/var/www/sonata-3/vendor/symfony-cmf/routing-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\Bundle\DemoBundle">/var/www/sonata-3/src/Sonata/Bundle/DemoBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\Bundle\QABundle">/var/www/sonata-3/src/Sonata/Bundle/QABundle/Resources/config/serializer</argument>
                      <argument key="Spy\TimelineBundle">/var/www/sonata-3/vendor/stephpy/timeline-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\TimelineBundle">/var/www/sonata-3/vendor/sonata-project/timeline-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\TimelineBundle">/var/www/sonata-3/src/Application/Sonata/TimelineBundle/Resources/config/serializer</argument>
                      <argument key="Mopa\Bundle\BootstrapBundle">/var/www/sonata-3/vendor/mopa/bootstrap-bundle/Mopa/Bundle/BootstrapBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/var/www/sonata-3/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/var/www/sonata-3/vendor/sensio/generator-bundle/Sensio/Bundle/GeneratorBundle/Resources/config/serializer</argument>
                      <argument key="Bazinga\Bundle\FakerBundle">/var/www/sonata-3/vendor/willdurand/faker-bundle/Bazinga/Bundle/FakerBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\FixturesBundle">/var/www/sonata-3/vendor/doctrine/doctrine-fixtures-bundle/Doctrine/Bundle/FixturesBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\Component\Basket">/var/www/sonata-3/app/../vendor/sonata-project/ecommerce/src/BasketBundle/Resources/config/serializer/Component</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.naming_strategy" class="JMS\Serializer\Naming\CacheNamingStrategy">
      <argument type="service">
        <service class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
          <argument type="service">
            <service class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
              <argument>_</argument>
              <argument>true</argument>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="jms_serializer.object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer" class="JMS\Serializer\Serializer">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service">
        <service class="JMS\DiExtraBundle\DependencyInjection\Collection\LazyServiceMap">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="json">jms_serializer.json_serialization_visitor</argument>
            <argument key="xml">jms_serializer.xml_serialization_visitor</argument>
            <argument key="yml">jms_serializer.yaml_serialization_visitor</argument>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\DiExtraBundle\DependencyInjection\Collection\LazyServiceMap">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="json">jms_serializer.json_deserialization_visitor</argument>
            <argument key="xml">jms_serializer.xml_deserialization_visitor</argument>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
          <call method="setListeners">
            <argument type="collection">
              <argument key="serializer.pre_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
              <argument key="serializer.post_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPostSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="fos_comment.form_factory.comment" class="FOS\CommentBundle\FormFactory\CommentFormFactory">
      <argument type="service" id="form.factory"/>
      <argument>sonata_comment_comment</argument>
      <argument>fos_comment_comment</argument>
    </service>
    <service id="fos_comment.form_factory.commentable_thread" class="FOS\CommentBundle\FormFactory\CommentableThreadFormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_comment_commentable_thread</argument>
      <argument>fos_comment_commentable_thread</argument>
    </service>
    <service id="fos_comment.form_factory.delete_comment" class="FOS\CommentBundle\FormFactory\DeleteCommentFormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_comment_delete_comment</argument>
      <argument>fos_comment_delete_comment</argument>
    </service>
    <service id="fos_comment.form_factory.thread" class="FOS\CommentBundle\FormFactory\ThreadFormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_comment_thread</argument>
      <argument>fos_comment_thread</argument>
    </service>
    <service id="fos_comment.form_factory.vote" class="FOS\CommentBundle\FormFactory\VoteFormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_comment_vote</argument>
      <argument>fos_comment_vote</argument>
    </service>
    <service id="knp_menu.menu_provider" class="Knp\Menu\Provider\ChainProvider">
      <argument type="collection">
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="service_container"/>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="kernel"/>
            <argument type="service" id="service_container"/>
            <argument type="service" id="knp_menu.factory"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="router" alias="cmf_routing.router"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
    <service id="security.acl.dbal.connection" alias="doctrine.dbal.default_connection"/>
    <service id="debug.templating.engine.twig" alias="templating"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport"/>
    <service id="mailer" alias="swiftmailer.mailer.default"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
    <service id="fos_user.util.username_canonicalizer" alias="fos_user.util.email_canonicalizer"/>
    <service id="fos_user.change_password.form.handler" alias="fos_user.change_password.form.handler.default"/>
    <service id="sonata.user.authentication.form" alias="fos_user.profile.form"/>
    <service id="sonata.user.authentication.form_handler" alias="fos_user.profile.form.handler"/>
    <service id="sonata.page.site.selector" alias="sonata.page.site.selector.host_with_path"/>
    <service id="sonata.news.permalink.generator" alias="sonata.news.permalink.date"/>
    <service id="fos_rest.router" alias="cmf_routing.router"/>
    <service id="fos_rest.templating" alias="templating"/>
    <service id="fos_rest.exception_handler" alias="fos_rest.view.exception_wrapper_handler"/>
    <service id="fos_rest.inflector" alias="fos_rest.inflector.doctrine"/>
    <service id="fos_rest.validator" alias="validator"/>
    <service id="sonata.basket.builder" alias="sonata.basket.builder.standard"/>
    <service id="sonata.basket.factory" alias="sonata.basket.entity.factory"/>
    <service id="sonata.basket.loader" alias="sonata.basket.loader.standard"/>
    <service id="sonata.delivery.selector" alias="sonata.delivery.selector.default"/>
    <service id="sonata.payment.selector" alias="sonata.payment.selector.simple"/>
    <service id="sonata.generator" alias="sonata.payment.generator.mysql"/>
    <service id="serializer" alias="jms_serializer"/>
    <service id="fos_comment.manager.thread" alias="fos_comment.manager.thread.default"/>
    <service id="fos_comment.manager.comment" alias="fos_comment.manager.comment.default"/>
    <service id="fos_comment.manager.vote" alias="fos_comment.manager.vote.default"/>
    <service id="sonata.intl.timezone_detector" alias="sonata.intl.timezone_detector.chain"/>
    <service id="sonata.intl.locale_detector" alias="sonata.intl.locale_detector.request"/>
    <service id="sonata.block.context_manager" alias="sonata.page.block.context_manager"/>
    <service id="sonata.block.cache.handler" alias="sonata.block.cache.handler.default"/>
    <service id="sonata.block.renderer" alias="sonata.block.renderer.default"/>
    <service id="sonata.seo.page" alias="sonata.seo.page.default"/>
    <service id="sonata.notification.backend" alias="sonata.notification.backend.postpone"/>
    <service id="sonata.notification.manager.message" alias="sonata.notification.manager.message.default"/>
    <service id="spy_timeline.driver.object_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="spy_timeline.query_builder" alias="spy_timeline.query_builder.orm"/>
    <service id="spy_timeline.timeline_manager" alias="spy_timeline.timeline_manager.orm"/>
    <service id="spy_timeline.action_manager" alias="spy_timeline.action_manager.orm"/>
    <service id="spy_timeline.spread.deployer" alias="spy_timeline.spread.deployer.default"/>
    <service id="spy_timeline.resolve_component.resolver" alias="spy_timeline.resolve_component.doctrine"/>
    <service id="fos_rest.serializer" alias="jms_serializer"/>
  </services>
</container>
