<?php

namespace Proxies\__CG__\Application\Sonata\PaymentBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Transaction extends \Application\Sonata\PaymentBundle\Entity\Transaction implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'order', 'transactionId', 'state', 'parameters', 'statusCode', 'createdAt', 'paymentCode', 'information');
        }

        return array('__isInitialized__', 'id', 'order', 'transactionId', 'state', 'parameters', 'statusCode', 'createdAt', 'paymentCode', 'information');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Transaction $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder(\Sonata\Component\Order\OrderInterface $order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', array($order));

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', array());

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', array($state));

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', array());

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionId($transactionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionId', array($transactionId));

        return parent::setTransactionId($transactionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionId', array());

        return parent::getTransactionId();
    }

    /**
     * {@inheritDoc}
     */
    public function isValid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isValid', array());

        return parent::isValid();
    }

    /**
     * {@inheritDoc}
     */
    public function setParameters(array $parameters)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParameters', array($parameters));

        return parent::setParameters($parameters);
    }

    /**
     * {@inheritDoc}
     */
    public function getParameters()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParameters', array());

        return parent::getParameters();
    }

    /**
     * {@inheritDoc}
     */
    public function get($name, $default = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'get', array($name, $default));

        return parent::get($name, $default);
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusCode($statusCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusCode', array($statusCode));

        return parent::setStatusCode($statusCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusCode', array());

        return parent::getStatusCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusName', array());

        return parent::getStatusName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentCode($paymentCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentCode', array($paymentCode));

        return parent::setPaymentCode($paymentCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentCode', array());

        return parent::getPaymentCode();
    }

    /**
     * {@inheritDoc}
     */
    public function addInformation($information)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInformation', array($information));

        return parent::addInformation($information);
    }

    /**
     * {@inheritDoc}
     */
    public function setInformation($information)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInformation', array($information));

        return parent::setInformation($information);
    }

    /**
     * {@inheritDoc}
     */
    public function getInformation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInformation', array());

        return parent::getInformation();
    }

}
